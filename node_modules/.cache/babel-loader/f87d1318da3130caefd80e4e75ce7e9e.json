{"ast":null,"code":"/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { Classes, Menu, MenuItem } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport { DATERANGEPICKER_SHORTCUTS } from \"./common/classes\";\nimport { clone, isDayRangeInRange } from \"./common/dateUtils\";\n\nvar Shortcuts =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Shortcuts, _super);\n\n  function Shortcuts() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Shortcuts.prototype.render = function () {\n    var _this = this;\n\n    var shortcuts = this.props.shortcuts === true ? createDefaultShortcuts(this.props.allowSingleDayRange, this.props.timePrecision !== undefined) : this.props.shortcuts;\n    var shortcutElements = shortcuts.map(function (s, i) {\n      return React.createElement(MenuItem, {\n        className: Classes.POPOVER_DISMISS_OVERRIDE,\n        disabled: !_this.isShortcutInRange(s.dateRange),\n        key: i,\n        onClick: _this.getShorcutClickHandler(s),\n        text: s.label\n      });\n    });\n    return React.createElement(Menu, {\n      className: DATERANGEPICKER_SHORTCUTS\n    }, shortcutElements);\n  };\n\n  Shortcuts.prototype.getShorcutClickHandler = function (shortcut) {\n    var _this = this;\n\n    return function () {\n      return _this.props.onShortcutClick(shortcut);\n    };\n  };\n\n  Shortcuts.prototype.isShortcutInRange = function (shortcutDateRange) {\n    return isDayRangeInRange(shortcutDateRange, [this.props.minDate, this.props.maxDate]);\n  };\n\n  return Shortcuts;\n}(React.PureComponent);\n\nexport { Shortcuts };\n\nfunction createShortcut(label, dateRange) {\n  return {\n    dateRange: dateRange,\n    label: label\n  };\n}\n\nfunction createDefaultShortcuts(allowSingleDayRange, hasTimePrecision) {\n  var today = new Date();\n\n  var makeDate = function (action) {\n    var returnVal = clone(today);\n    action(returnVal);\n    returnVal.setDate(returnVal.getDate() + 1);\n    return returnVal;\n  };\n\n  var tomorrow = makeDate(function () {\n    return null;\n  });\n  var yesterday = makeDate(function (d) {\n    return d.setDate(d.getDate() - 2);\n  });\n  var oneWeekAgo = makeDate(function (d) {\n    return d.setDate(d.getDate() - 7);\n  });\n  var oneMonthAgo = makeDate(function (d) {\n    return d.setMonth(d.getMonth() - 1);\n  });\n  var threeMonthsAgo = makeDate(function (d) {\n    return d.setMonth(d.getMonth() - 3);\n  });\n  var sixMonthsAgo = makeDate(function (d) {\n    return d.setMonth(d.getMonth() - 6);\n  });\n  var oneYearAgo = makeDate(function (d) {\n    return d.setFullYear(d.getFullYear() - 1);\n  });\n  var twoYearsAgo = makeDate(function (d) {\n    return d.setFullYear(d.getFullYear() - 2);\n  });\n  var singleDayShortcuts = allowSingleDayRange ? [createShortcut(\"Today\", [today, hasTimePrecision ? tomorrow : today]), createShortcut(\"Yesterday\", [yesterday, hasTimePrecision ? today : yesterday])] : [];\n  return singleDayShortcuts.concat([createShortcut(\"Past week\", [oneWeekAgo, today]), createShortcut(\"Past month\", [oneMonthAgo, today]), createShortcut(\"Past 3 months\", [threeMonthsAgo, today]), createShortcut(\"Past 6 months\", [sixMonthsAgo, today]), createShortcut(\"Past year\", [oneYearAgo, today]), createShortcut(\"Past 2 years\", [twoYearsAgo, today])]);\n}","map":null,"metadata":{},"sourceType":"module"}