{"ast":null,"code":"var _jsxFileName = \"/Users/anujwagle/Desktop/temp/datapali-dashboard/src/components/AnswerType.tsx\";\nimport React from \"react\";\nimport { customStyles } from \"./DPFormItem\";\nimport Select from \"react-select\";\nimport { Row, Col } from \"reactstrap\";\nimport _ from \"lodash\";\nexport let ANSWER_TYPES;\n\n(function (ANSWER_TYPES) {\n  ANSWER_TYPES[\"BOOLEAN\"] = \"boolean\";\n  ANSWER_TYPES[\"STRING\"] = \"string\";\n  ANSWER_TYPES[\"DATE\"] = \"date\";\n  ANSWER_TYPES[\"TIME\"] = \"time\";\n  ANSWER_TYPES[\"NUMBER\"] = \"number\";\n  ANSWER_TYPES[\"RANGE\"] = \"range\";\n  ANSWER_TYPES[\"SELECT\"] = \"select\";\n})(ANSWER_TYPES || (ANSWER_TYPES = {}));\n\nconst ValueSelectOptions = [{\n  value: ANSWER_TYPES.BOOLEAN,\n  label: \"YES/NO\"\n}, {\n  value: ANSWER_TYPES.STRING,\n  label: \"Text\"\n}, {\n  value: ANSWER_TYPES.TIME,\n  label: \"Time\"\n}, {\n  value: ANSWER_TYPES.DATE,\n  label: \"Date\"\n}, {\n  value: ANSWER_TYPES.NUMBER,\n  label: \"Number\"\n}, {\n  value: ANSWER_TYPES.RANGE,\n  label: \"Range\"\n}, {\n  value: ANSWER_TYPES.SELECT,\n  label: \"Select\"\n}];\nconst OptionsForSelect = ValueSelectOptions.filter(item => item.value && item.value !== ANSWER_TYPES.SELECT);\nlet includedInRange = [ANSWER_TYPES.TIME, ANSWER_TYPES.NUMBER, ANSWER_TYPES.DATE, ANSWER_TYPES.TIME];\nconst OptionsForRange = ValueSelectOptions.filter(item => includedInRange.includes(item.value));\nexport class AnswerTypeInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answerType: this.props.answerType\n    };\n  }\n  /**\n   * \n   * @param data \n   */\n\n\n  handleAnswerTypeChange(data) {\n    this.setState(prevState => {\n      let newAnswerType = _.clone(prevState.answerType);\n\n      newAnswerType.name = data.value;\n      newAnswerType.ofType = undefined;\n      return {\n        answerType: newAnswerType\n      };\n    }, () => {\n      if (this.props.onChange) this.props.onChange(this.state.answerType);\n    });\n  }\n  /**\n   * second select is for selecting types select and range\n   * @param data \n   */\n\n\n  handleSecondSelectChange(data) {\n    this.setState(prevState => {\n      let newAnswerType = _.clone(prevState.answerType);\n\n      newAnswerType.ofType = {\n        name: data.value,\n        ofType: undefined\n      };\n      if (newAnswerType.ofType.ofType) newAnswerType.ofType.ofType = undefined;\n      return {\n        answerType: newAnswerType\n      };\n    }, () => {\n      if (this.props.onChange) this.props.onChange(this.state.answerType);\n    });\n  }\n  /**\n   * third select pops up only for range, to select the value types of range\n   * @param data \n   */\n\n\n  handleThirdSelectChange(data) {\n    this.setState(prevState => {\n      let newAnswerType = _.clone(prevState.answerType);\n\n      if (newAnswerType.ofType) {\n        newAnswerType.ofType.ofType = data.value;\n      }\n\n      return {\n        answerType: newAnswerType\n      };\n    }, () => {\n      if (this.props.onChange) this.props.onChange(this.state.answerType);\n    });\n  }\n\n  render() {\n    let shouldDisplaySecondSelect = this.state.answerType.name === ANSWER_TYPES.SELECT || this.state.answerType.name === ANSWER_TYPES.RANGE;\n    let shouldDisplayThirdSelect = this.state.answerType.ofType && this.state.answerType.ofType.name === ANSWER_TYPES.RANGE;\n    let optionsForSecondSelect = this.state.answerType.name === ANSWER_TYPES.SELECT ? OptionsForSelect : this.state.answerType.name === ANSWER_TYPES.RANGE ? OptionsForRange : [];\n    let OptionsForThirdSelect = this.state.answerType.ofType && this.state.answerType.ofType.name === ANSWER_TYPES.RANGE ? OptionsForRange : [];\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Value Type\"), React.createElement(Select, {\n      onChange: this.handleAnswerTypeChange.bind(this),\n      styles: customStyles,\n      options: ValueSelectOptions,\n      value: ValueSelectOptions.find(item => item.value === this.state.answerType.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), shouldDisplaySecondSelect && React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"of type\"), React.createElement(Select, {\n      onChange: this.handleSecondSelectChange.bind(this),\n      styles: customStyles,\n      options: optionsForSecondSelect,\n      value: optionsForSecondSelect.find(item => this.state.answerType.ofType && item.value === this.state.answerType.ofType.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), shouldDisplayThirdSelect && React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"of type\"), React.createElement(Select, {\n      onChange: this.handleThirdSelectChange.bind(this),\n      styles: customStyles,\n      options: OptionsForThirdSelect,\n      value: OptionsForThirdSelect.find(item => this.state.answerType.ofType && this.state.answerType.ofType.ofType && item.value === this.state.answerType.ofType.ofType.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })));\n  }\n\n}\nAnswerTypeInput.defaultProps = {\n  answerType: {\n    name: undefined,\n    ofType: undefined\n  }\n};","map":{"version":3,"sources":["/Users/anujwagle/Desktop/temp/datapali-dashboard/src/components/AnswerType.tsx"],"names":["React","customStyles","Select","Row","Col","_","ANSWER_TYPES","ValueSelectOptions","value","BOOLEAN","label","STRING","TIME","DATE","NUMBER","RANGE","SELECT","OptionsForSelect","filter","item","includedInRange","OptionsForRange","includes","AnswerTypeInput","Component","constructor","props","state","answerType","handleAnswerTypeChange","data","setState","prevState","newAnswerType","clone","name","ofType","undefined","onChange","handleSecondSelectChange","handleThirdSelectChange","render","shouldDisplaySecondSelect","shouldDisplayThirdSelect","optionsForSecondSelect","OptionsForThirdSelect","bind","find","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { customStyles } from \"./DPFormItem\";\nimport Select from \"react-select\";\nimport { Row, Col } from \"reactstrap\";\nimport _ from \"lodash\";\n\ntype QAAnswerTypeOption = { label: string, value: ANSWER_TYPES };\n\nexport enum ANSWER_TYPES {\n    BOOLEAN = \"boolean\",\n    STRING = \"string\",\n    DATE = \"date\",\n    TIME = \"time\",\n    NUMBER = \"number\",\n    RANGE = \"range\",\n    SELECT = \"select\"\n}\nconst ValueSelectOptions: QAAnswerTypeOption[] = [\n    { value: ANSWER_TYPES.BOOLEAN, label: \"YES/NO\" },\n    { value: ANSWER_TYPES.STRING, label: \"Text\" },\n    { value: ANSWER_TYPES.TIME, label: \"Time\" },\n    { value: ANSWER_TYPES.DATE, label: \"Date\" },\n    { value: ANSWER_TYPES.NUMBER, label: \"Number\" },\n    { value: ANSWER_TYPES.RANGE, label: \"Range\" },\n    { value: ANSWER_TYPES.SELECT, label: \"Select\" }\n]\n\nconst OptionsForSelect: QAAnswerTypeOption[] = ValueSelectOptions.filter((item) => item.value && item.value !== ANSWER_TYPES.SELECT);\nlet includedInRange = [ANSWER_TYPES.TIME, ANSWER_TYPES.NUMBER, ANSWER_TYPES.DATE, ANSWER_TYPES.TIME];\nconst OptionsForRange: QAAnswerTypeOption[] = ValueSelectOptions.filter(item => includedInRange.includes(item.value))\n\nexport interface QAValueType {\n    name: ANSWER_TYPES,\n    ofType?: QAValueType,\n}\n\n\ninterface AnswerTypeInputProps {\n    answerType: QAValueType,\n    onChange: (val: QAValueType) => void,\n\n}\n\ninterface AnswerTypeInputState {\n    answerType: QAValueType,\n}\n\nexport class AnswerTypeInput extends React.Component<AnswerTypeInputProps, AnswerTypeInputState>{\n    static defaultProps = {\n        answerType: { name: undefined, ofType: undefined }\n    }\n    constructor(props: AnswerTypeInputProps) {\n        super(props);\n        this.state = {\n            answerType: this.props.answerType\n        }\n    }\n    /**\n     * \n     * @param data \n     */\n    handleAnswerTypeChange(data: any): void {\n        this.setState((prevState) => {\n            let newAnswerType = _.clone(prevState.answerType);\n            newAnswerType.name = data.value as ANSWER_TYPES;\n            newAnswerType.ofType = undefined;\n            return {\n                answerType: newAnswerType\n            }\n\n        }, () => {\n            if (this.props.onChange) this.props.onChange(this.state.answerType)\n        })\n\n    }\n\n    /**\n     * second select is for selecting types select and range\n     * @param data \n     */\n    handleSecondSelectChange(data: any): void {\n        this.setState((prevState) => {\n            let newAnswerType = _.clone(prevState.answerType);\n            newAnswerType.ofType = { name: data.value as ANSWER_TYPES, ofType: undefined };\n            if (newAnswerType.ofType.ofType) newAnswerType.ofType.ofType = undefined;\n            return {\n                answerType: newAnswerType\n            }\n\n        }, () => {\n            if (this.props.onChange) this.props.onChange(this.state.answerType)\n        })\n    }\n\n    /**\n     * third select pops up only for range, to select the value types of range\n     * @param data \n     */\n\n    handleThirdSelectChange(data: any): void {\n        this.setState((prevState) => {\n            let newAnswerType = _.clone(prevState.answerType);\n            if (newAnswerType.ofType) {\n                newAnswerType.ofType.ofType = data.value;\n            }\n            return {\n                answerType: newAnswerType\n            }\n\n        }, () => {\n            if (this.props.onChange) this.props.onChange(this.state.answerType)\n        })\n\n    }\n\n    render() {\n        let shouldDisplaySecondSelect = this.state.answerType.name === ANSWER_TYPES.SELECT || this.state.answerType.name === ANSWER_TYPES.RANGE;\n        let shouldDisplayThirdSelect = this.state.answerType.ofType && this.state.answerType.ofType.name === ANSWER_TYPES.RANGE;\n\n        let optionsForSecondSelect = this.state.answerType.name === ANSWER_TYPES.SELECT ? OptionsForSelect : this.state.answerType.name === ANSWER_TYPES.RANGE ? OptionsForRange : []\n        let OptionsForThirdSelect = this.state.answerType.ofType && this.state.answerType.ofType.name === ANSWER_TYPES.RANGE ? OptionsForRange : []\n        return (\n            <Row>\n                <Col>\n                    <label>Value Type</label>\n                    <Select onChange={this.handleAnswerTypeChange.bind(this)} styles={customStyles}\n                        options={ValueSelectOptions}\n                        value={ValueSelectOptions.find((item: QAAnswerTypeOption) => item.value === this.state.answerType.name)}\n                    />\n                </Col>\n                {shouldDisplaySecondSelect && <Col>\n                    <label>of type</label>\n                    <Select onChange={this.handleSecondSelectChange.bind(this)} styles={customStyles}\n                        options={optionsForSecondSelect}\n                        value={optionsForSecondSelect.find(item => this.state.answerType.ofType && item.value === this.state.answerType.ofType.name)}\n                    />\n\n                </Col>}\n                {shouldDisplayThirdSelect && <Col>\n                    <label>of type</label>\n                    <Select onChange={this.handleThirdSelectChange.bind(this)} styles={customStyles}\n                        options={OptionsForThirdSelect}\n                        value={OptionsForThirdSelect.find(item => this.state.answerType.ofType && this.state.answerType.ofType.ofType && item.value === this.state.answerType.ofType.ofType.name)}\n                    />\n\n                </Col>\n                }\n            </Row>\n\n        )\n    }\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}