{"ast":null,"code":"var _jsxFileName = \"/Users/anujwagle/Desktop/temp/datapali-dashboard/src/components/duplicateSettings.tsx\";\nimport React from \"react\";\nimport { ButtonGroup, Button, Switch, Classes, Divider } from \"@blueprintjs/core\";\nimport Select from \"react-select\";\nimport { customStyles } from \"./DPFormItem\";\nimport _ from \"lodash\";\nexport class DuplicateSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEnabled: this.props.isEnabled,\n      condition: this.props.condition,\n      duplicateTimes: this.props.duplicateTimes\n    };\n  }\n\n  handleQuestionRefChange(newValue) {\n    this.setState({\n      duplicateTimes: {\n        value: newValue.value,\n        type: \"questionRef\"\n      }\n    });\n  }\n\n  handleNumberTimesChange(newValue) {\n    this.setState({\n      duplicateTimes: {\n        value: newValue,\n        type: \"number\"\n      }\n    });\n  }\n\n  handleTypeChange(newType) {\n    this.setState(prevState => {\n      return {\n        duplicateTimes: {\n          value: \"\",\n          type: newType.value\n        }\n      };\n    });\n  }\n\n  handleEnabledChange() {\n    this.setState(prevState => {\n      return {\n        isEnabled: !prevState.isEnabled\n      };\n    });\n  }\n\n  generateValueComponent(type) {\n    if (type === \"questionRef\") {\n      let options = Object.values(this.props.definedQuestions).map(item => ({\n        value: item.id,\n        label: item.questionContent.content\n      }));\n      let selected = this.state.duplicateTimes.type === \"questionRef\" ? options.find(item => item.value === this.state.duplicateTimes.value) : undefined;\n      return React.createElement(Select, {\n        styles: customStyles,\n        options: options,\n        defaultValue: selected,\n        onChange: this.handleQuestionRefChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"input\", {\n      defaultValue: this.state.duplicateTimes.type === \"number\" ? this.state.duplicateTimes.value : \"\",\n      type: \"number\",\n      className: \"form-control\",\n      onChange: e => this.handleNumberTimesChange(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    });\n  }\n\n  handleSave() {\n    let isInvalid = _.values(this.state).every(_.isEmpty);\n\n    if (!isInvalid) {\n      this.props.handleSave({\n        isEnabled: this.state.isEnabled,\n        condition: this.state.condition,\n        duplicateTimes: this.state.duplicateTimes\n      });\n    }\n  }\n\n  render() {\n    let typeOptions = [{\n      value: \"number\",\n      label: \"Number\"\n    }, {\n      value: \"questionRef\",\n      label: \"AnswerValue\"\n    }];\n    let defaultValue = typeOptions.find(item => item.value === this.state.duplicateTimes.type);\n    return React.createElement(\"div\", {\n      style: {\n        paddingTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(ButtonGroup, {\n      className: Classes.ELEVATION_2,\n      vertical: true,\n      fill: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      onChange: this.handleEnabledChange.bind(this),\n      defaultChecked: this.props.isEnabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Enabled\"), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Select, {\n      menuContainerStyle: {\n        zIndex: 99999\n      },\n      styles: customStyles,\n      onChange: e => this.handleTypeChange(e),\n      options: typeOptions,\n      defaultValue: defaultValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), this.generateValueComponent(this.state.duplicateTimes.type), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(ButtonGroup, {\n      fill: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleSave.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Save\"), React.createElement(Button, {\n      onClick: this.props.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/anujwagle/Desktop/temp/datapali-dashboard/src/components/duplicateSettings.tsx"],"names":["React","ButtonGroup","Button","Switch","Classes","Divider","Select","customStyles","_","DuplicateSettings","Component","constructor","props","state","isEnabled","condition","duplicateTimes","handleQuestionRefChange","newValue","setState","value","type","handleNumberTimesChange","handleTypeChange","newType","prevState","handleEnabledChange","generateValueComponent","options","Object","values","definedQuestions","map","item","id","label","questionContent","content","selected","find","undefined","e","target","handleSave","isInvalid","every","isEmpty","render","typeOptions","defaultValue","paddingTop","ELEVATION_2","bind","zIndex","handleCancel"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,OAAtC,EAA+CC,OAA/C,QAA8D,mBAA9D;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,CAAP,MAAc,QAAd;AAmBA,OAAO,MAAMC,iBAAN,SAAgCT,KAAK,CAACU,SAAtC,CAA+F;AAClGC,EAAAA,WAAW,CAACC,KAAD,EAAgC;AACvC,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE,SADb;AAETC,MAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWG,SAFb;AAGTC,MAAAA,cAAc,EAAE,KAAKJ,KAAL,CAAWI;AAHlB,KAAb;AAKH;;AAEOC,EAAAA,uBAAR,CAAgCC,QAAhC,EAA+C;AAC3C,SAAKC,QAAL,CAAc;AACVH,MAAAA,cAAc,EAAE;AAAEI,QAAAA,KAAK,EAAEF,QAAQ,CAACE,KAAlB;AAAyBC,QAAAA,IAAI,EAAE;AAA/B;AADN,KAAd;AAGH;;AACOC,EAAAA,uBAAR,CAAgCJ,QAAhC,EAAkD;AAC9C,SAAKC,QAAL,CAAc;AACVH,MAAAA,cAAc,EAAE;AAAEI,QAAAA,KAAK,EAAEF,QAAT;AAAmBG,QAAAA,IAAI,EAAE;AAAzB;AADN,KAAd;AAGH;;AACOE,EAAAA,gBAAR,CAAyBC,OAAzB,EAAuC;AACnC,SAAKL,QAAL,CAAeM,SAAD,IAAuC;AACjD,aAAO;AACHT,QAAAA,cAAc,EAAE;AAAEI,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,IAAI,EAAEG,OAAO,CAACJ;AAA3B;AADb,OAAP;AAGH,KAJD;AAKH;;AACOM,EAAAA,mBAAR,GAA8B;AAC1B,SAAKP,QAAL,CAAeM,SAAD,IAAuC;AACjD,aAAO;AACHX,QAAAA,SAAS,EAAE,CAACW,SAAS,CAACX;AADnB,OAAP;AAGH,KAJD;AAKH;;AACOa,EAAAA,sBAAR,CAA+BN,IAA/B,EAA8C;AAC1C,QAAIA,IAAI,KAAK,aAAb,EAA4B;AACxB,UAAIO,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,KAAKlB,KAAL,CAAWmB,gBAAzB,EAA2CC,GAA3C,CAA+CC,IAAI,KAAK;AAAEb,QAAAA,KAAK,EAAEa,IAAI,CAACC,EAAd;AAAkBC,QAAAA,KAAK,EAAEF,IAAI,CAACG,eAAL,CAAqBC;AAA9C,OAAL,CAAnD,CAAd;AACA,UAAIC,QAAQ,GAAG,KAAKzB,KAAL,CAAWG,cAAX,CAA0BK,IAA1B,KAAmC,aAAnC,GAAmDO,OAAO,CAACW,IAAR,CAAaN,IAAI,IAAIA,IAAI,CAACb,KAAL,KAAe,KAAKP,KAAL,CAAWG,cAAX,CAA0BI,KAA9D,CAAnD,GAA0HoB,SAAzI;AACA,aAAO,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAEjC,YAAhB;AAA8B,QAAA,OAAO,EAAEqB,OAAvC;AAAgD,QAAA,YAAY,EAAEU,QAA9D;AAAwE,QAAA,QAAQ,EAAE,KAAKrB,uBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,WAAO;AAAO,MAAA,YAAY,EAAE,KAAKJ,KAAL,CAAWG,cAAX,CAA0BK,IAA1B,KAAmC,QAAnC,GAA8C,KAAKR,KAAL,CAAWG,cAAX,CAA0BI,KAAxE,GAAgF,EAArG;AAAyG,MAAA,IAAI,EAAC,QAA9G;AAAuH,MAAA,SAAS,EAAC,cAAjI;AAAgJ,MAAA,QAAQ,EAAEqB,CAAC,IAAI,KAAKnB,uBAAL,CAA6BmB,CAAC,CAACC,MAAF,CAAStB,KAAtC,CAA/J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACOuB,EAAAA,UAAR,GAAqB;AACjB,QAAIC,SAAS,GAAGpC,CAAC,CAACsB,MAAF,CAAS,KAAKjB,KAAd,EAAqBgC,KAArB,CAA2BrC,CAAC,CAACsC,OAA7B,CAAhB;;AACA,QAAI,CAACF,SAAL,EAAgB;AACZ,WAAKhC,KAAL,CAAW+B,UAAX,CAAsB;AAAE7B,QAAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,SAAxB;AAAmCC,QAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE,SAAzD;AAAoEC,QAAAA,cAAc,EAAE,KAAKH,KAAL,CAAWG;AAA/F,OAAtB;AACH;AACJ;;AAED+B,EAAAA,MAAM,GAAG;AACL,QAAIC,WAAW,GAAG,CAAC;AAAE5B,MAAAA,KAAK,EAAE,QAAT;AAAmBe,MAAAA,KAAK,EAAE;AAA1B,KAAD,EAAuC;AAAEf,MAAAA,KAAK,EAAE,aAAT;AAA8Ce,MAAAA,KAAK,EAAE;AAArD,KAAvC,CAAlB;AACA,QAAIc,YAAY,GAAGD,WAAW,CAACT,IAAZ,CAAiBN,IAAI,IAAIA,IAAI,CAACb,KAAL,KAAe,KAAKP,KAAL,CAAWG,cAAX,CAA0BK,IAAlE,CAAnB;AAEA,WACI;AAAK,MAAA,KAAK,EAAE;AAAE6B,QAAAA,UAAU,EAAE;AAAd,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAE9C,OAAO,CAAC+C,WAAhC;AAA6C,MAAA,QAAQ,MAArD;AAAsD,MAAA,IAAI,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,KAAKzB,mBAAL,CAAyB0B,IAAzB,CAA8B,IAA9B,CAAlB;AAAuD,MAAA,cAAc,EAAE,KAAKxC,KAAL,CAAWE,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,MAAD;AAAQ,MAAA,kBAAkB,EAAE;AAAEuC,QAAAA,MAAM,EAAE;AAAV,OAA5B;AAA+C,MAAA,MAAM,EAAE9C,YAAvD;AAAqE,MAAA,QAAQ,EAAGkC,CAAD,IAAY,KAAKlB,gBAAL,CAAsBkB,CAAtB,CAA3F;AAAqH,MAAA,OAAO,EAAEO,WAA9H;AAA2I,MAAA,YAAY,EAAEC,YAAzJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAIK,KAAKtB,sBAAL,CAA4B,KAAKd,KAAL,CAAWG,cAAX,CAA0BK,IAAtD,CAJL,EAKI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI,oBAAC,WAAD;AAAa,MAAA,IAAI,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKsB,UAAL,CAAgBS,IAAhB,CAAqB,IAArB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAII,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKxC,KAAL,CAAW0C,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CANJ,CAFJ,CADJ;AAsBH;;AA3EiG","sourcesContent":["import React from \"react\";\nimport { QACondition } from \"../form/condition\";\nimport { ButtonGroup, Button, Switch, Classes, Divider } from \"@blueprintjs/core\";\nimport { QAQuestion } from \"../form/question\";\nimport Select from \"react-select\";\nimport { customStyles } from \"./DPFormItem\";\nimport _ from \"lodash\";\n\nexport type DuplicateTimesType = \"questionRef\" | \"number\";\n\nexport interface IDupeSettings {\n    isEnabled: boolean,\n    condition?: QACondition,\n    duplicateTimes: { value: string, type: DuplicateTimesType },\n}\ninterface DuplicateSettingsProps extends IDupeSettings {\n    definedQuestions: { [key: string]: QAQuestion }\n    handleSave: (dupe: IDupeSettings) => void,\n    handleCancel: () => void\n\n}\ninterface DuplicateSettingsState extends IDupeSettings {\n\n}\n\nexport class DuplicateSettings extends React.Component<DuplicateSettingsProps, DuplicateSettingsState>{\n    constructor(props: DuplicateSettingsProps) {\n        super(props);\n        this.state = {\n            isEnabled: this.props.isEnabled,\n            condition: this.props.condition,\n            duplicateTimes: this.props.duplicateTimes\n        }\n    }\n\n    private handleQuestionRefChange(newValue: any) {\n        this.setState({\n            duplicateTimes: { value: newValue.value, type: \"questionRef\" }\n        })\n    }\n    private handleNumberTimesChange(newValue: string) {\n        this.setState({\n            duplicateTimes: { value: newValue, type: \"number\" }\n        })\n    }\n    private handleTypeChange(newType: any) {\n        this.setState((prevState: DuplicateSettingsState) => {\n            return {\n                duplicateTimes: { value: \"\", type: newType.value }\n            }\n        })\n    }\n    private handleEnabledChange() {\n        this.setState((prevState: DuplicateSettingsState) => {\n            return {\n                isEnabled: !prevState.isEnabled\n            }\n        })\n    }\n    private generateValueComponent(type?: string) {\n        if (type === \"questionRef\") {\n            let options = Object.values(this.props.definedQuestions).map(item => ({ value: item.id, label: item.questionContent.content }));\n            let selected = this.state.duplicateTimes.type === \"questionRef\" ? options.find(item => item.value === this.state.duplicateTimes.value) : undefined;\n            return <Select styles={customStyles} options={options} defaultValue={selected} onChange={this.handleQuestionRefChange} />\n        }\n        return <input defaultValue={this.state.duplicateTimes.type === \"number\" ? this.state.duplicateTimes.value : \"\"} type=\"number\" className=\"form-control\" onChange={e => this.handleNumberTimesChange(e.target.value)} />\n    }\n    private handleSave() {\n        let isInvalid = _.values(this.state).every(_.isEmpty);\n        if (!isInvalid) {\n            this.props.handleSave({ isEnabled: this.state.isEnabled, condition: this.state.condition, duplicateTimes: this.state.duplicateTimes })\n        }\n    }\n\n    render() {\n        let typeOptions = [{ value: \"number\", label: \"Number\" }, { value: \"questionRef\" as DuplicateTimesType, label: \"AnswerValue\" as DuplicateTimesType }];\n        let defaultValue = typeOptions.find(item => item.value === this.state.duplicateTimes.type);\n\n        return (\n            <div style={{ paddingTop: 10 }}>\n\n                <ButtonGroup className={Classes.ELEVATION_2} vertical fill>\n                    <Switch onChange={this.handleEnabledChange.bind(this)} defaultChecked={this.props.isEnabled}>Enabled</Switch>\n                    <Divider />\n                    <Select menuContainerStyle={{ zIndex: 99999 }} styles={customStyles} onChange={(e: any) => this.handleTypeChange(e)} options={typeOptions} defaultValue={defaultValue}></Select>\n                    {this.generateValueComponent(this.state.duplicateTimes.type)}\n                    <Divider />\n                    <ButtonGroup fill>\n                        <Button onClick={this.handleSave.bind(this)}>\n                            Save\n                    </Button>\n                        <Button onClick={this.props.handleCancel}>\n                            Cancel\n                    </Button>\n                    </ButtonGroup>\n                </ButtonGroup>\n            </div>\n\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}