{"ast":null,"code":"export class Answer {\n  constructor(content) {\n    this.content = void 0;\n    this.condition = void 0;\n    this.content = content;\n  }\n\n  get Condition() {\n    return this.condition;\n  }\n\n  get Content() {\n    return this.content;\n  }\n\n  setContent(content) {\n    this.content = content;\n    return this;\n  }\n\n  setCondition(condition) {\n    this.condition = condition;\n    return this;\n  }\n\n}\nexport let QAComparisonOperator;\n\n(function (QAComparisonOperator) {\n  QAComparisonOperator[\"Less_Than_Or_Equal\"] = \"<=\";\n  QAComparisonOperator[\"Greater_Than_Or_Equal\"] = \">=\";\n  QAComparisonOperator[\"Less_Than\"] = \"<\";\n  QAComparisonOperator[\"Greater_Than\"] = \">\";\n  QAComparisonOperator[\"Equal\"] = \"==\";\n})(QAComparisonOperator || (QAComparisonOperator = {}));\n\nexport let AnswerType;\n\n(function (AnswerType) {\n  AnswerType[\"String\"] = \"String\";\n  AnswerType[\"Boolean\"] = \"Boolean\";\n  AnswerType[\"Date\"] = \"Date\";\n  AnswerType[\"Time\"] = \"Time\";\n  AnswerType[\"Number\"] = \"Number\";\n  AnswerType[\"Select\"] = \"Select\";\n})(AnswerType || (AnswerType = {}));\n\nexport let QAType;\n\n(function (QAType) {\n  QAType[\"String\"] = \"string\";\n  QAType[\"html\"] = \"html\";\n})(QAType || (QAType = {}));","map":{"version":3,"sources":["/Users/anujwagle/Desktop/temp/datapali-dashboard/src/form/answer.ts"],"names":["Answer","constructor","content","condition","Condition","Content","setContent","setCondition","QAComparisonOperator","AnswerType","QAType"],"mappings":"AAEA,OAAO,MAAMA,MAAN,CAAa;AAGhBC,EAAAA,WAAW,CAACC,OAAD,EAAoB;AAAA,SAF/BA,OAE+B;AAAA,SAD/BC,SAC+B;AAC3B,SAAKD,OAAL,GAAeA,OAAf;AACH;;AAED,MAAIE,SAAJ,GAA6B;AACzB,WAAO,KAAKD,SAAZ;AACH;;AAED,MAAIE,OAAJ,GAAwB;AACpB,WAAO,KAAKH,OAAZ;AACH;;AAEDI,EAAAA,UAAU,CAACJ,OAAD,EAAoB;AAC1B,SAAKA,OAAL,GAAeA,OAAf;AACA,WAAO,IAAP;AACH;;AAEDK,EAAAA,YAAY,CAACJ,SAAD,EAAyB;AACjC,SAAKA,SAAL,GAAiBA,SAAjB;AACA,WAAO,IAAP;AACH;;AAvBe;AA+BpB,WAAYK,oBAAZ;;WAAYA,oB;AAAAA,EAAAA,oB;AAAAA,EAAAA,oB;AAAAA,EAAAA,oB;AAAAA,EAAAA,oB;AAAAA,EAAAA,oB;GAAAA,oB,KAAAA,oB;;AAgBZ,WAAYC,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AASZ,WAAYC,MAAZ;;WAAYA,M;AAAAA,EAAAA,M;AAAAA,EAAAA,M;GAAAA,M,KAAAA,M","sourcesContent":["import { QACondition, QAFollowingOperator } from \"./condition\";\r\n\r\nexport class Answer {\r\n    content: IContent;\r\n    condition!: QACondition;\r\n    constructor(content: IContent) {\r\n        this.content = content;\r\n    }\r\n\r\n    get Condition(): QACondition {\r\n        return this.condition;\r\n    }\r\n\r\n    get Content(): IContent {\r\n        return this.content;\r\n    }\r\n\r\n    setContent(content: IContent) {\r\n        this.content = content;\r\n        return this;\r\n    }\r\n\r\n    setCondition(condition: QACondition) {\r\n        this.condition = condition;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport interface IContent {\r\n    content: string\r\n    type: QAType\r\n}\r\n\r\nexport enum QAComparisonOperator {\r\n    Less_Than_Or_Equal = \"<=\",\r\n    Greater_Than_Or_Equal = \">=\",\r\n    Less_Than = \"<\",\r\n    Greater_Than = \">\",\r\n    Equal = \"==\"\r\n}\r\n\r\nexport interface ILiteral {\r\n    literalId: string \r\n    questionRef: string | undefined\r\n    comparisonOperator: QAComparisonOperator | undefined,\r\n    comparisonValue: IContent | undefined,\r\n    followingOperator: QAFollowingOperator | undefined\r\n}\r\n\r\nexport enum AnswerType {\r\n    String = \"String\",\r\n    Boolean = \"Boolean\",\r\n    Date = \"Date\",\r\n    Time = \"Time\",\r\n    Number = \"Number\",\r\n    Select = \"Select\"\r\n}\r\n\r\nexport enum QAType {\r\n    String = \"string\",\r\n    html = \"html\"\r\n}"]},"metadata":{},"sourceType":"module"}