{"ast":null,"code":"/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { HTML_TABLE, HTML_TABLE_BORDERED, HTML_TABLE_CONDENSED, HTML_TABLE_STRIPED, INTERACTIVE, SMALL } from \"../../common/classes\"; // this component is simple enough that tests would be purely tautological.\n\n/* istanbul ignore next */\n\nvar HTMLTable =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(HTMLTable, _super);\n\n  function HTMLTable() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  HTMLTable.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        bordered = _b.bordered,\n        className = _b.className,\n        condensed = _b.condensed,\n        elementRef = _b.elementRef,\n        interactive = _b.interactive,\n        small = _b.small,\n        striped = _b.striped,\n        htmlProps = tslib_1.__rest(_b, [\"bordered\", \"className\", \"condensed\", \"elementRef\", \"interactive\", \"small\", \"striped\"]);\n\n    var classes = classNames(HTML_TABLE, (_a = {}, _a[HTML_TABLE_BORDERED] = bordered, _a[HTML_TABLE_CONDENSED] = condensed, _a[HTML_TABLE_STRIPED] = striped, _a[INTERACTIVE] = interactive, _a[SMALL] = small, _a), className); // tslint:disable-next-line:blueprint-html-components\n\n    return React.createElement(\"table\", tslib_1.__assign({}, htmlProps, {\n      ref: elementRef,\n      className: classes\n    }));\n  };\n\n  return HTMLTable;\n}(React.PureComponent);\n\nexport { HTMLTable };","map":null,"metadata":{},"sourceType":"module"}