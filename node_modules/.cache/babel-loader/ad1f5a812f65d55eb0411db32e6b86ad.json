{"ast":null,"code":"var _jsxFileName = \"/Users/anujwagle/Desktop/temp/datapali-dashboard/src/components/section.tsx\";\nimport { ButtonGroup } from \"@blueprintjs/core\";\nimport { QuestionSection } from \"./SurveyForm\";\nimport { QAQuestion } from \"../form/question\";\nimport React from \"react\";\nimport { QuestionButton } from \"./questionButton\";\nimport { DPFormItem } from \"./DPFormItem\";\nimport { SectionButton } from \"./sectionButton\";\nexport class SectionC extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleQuestionChange(q, path) {\n    if (this.props.handleQuestionChange) this.props.handleQuestionChange(q, path);\n  }\n\n  render() {\n    let comp = null;\n    let readablePath = getReadablePath(this.props.parentPath);\n    if (readablePath) readablePath += \".\";\n    comp = this.props.section.content.map((item, index) => {\n      let childPath = this.props.parentPath.concat(index);\n\n      if (item instanceof QAQuestion) {\n        return React.createElement(QuestionButton, {\n          path: childPath,\n          questionId: item.id,\n          handleDeletion: this.props.handleDeleteChildSectionOrQuestion,\n          readablePath: readablePath + (index + 1),\n          key: item.id,\n          isExpanded: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(DPFormItem, {\n          onChange: q => this.handleQuestionChange(q, childPath),\n          question: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }));\n      } else if (item instanceof QuestionSection) {\n        return React.createElement(SectionButton, {\n          path: childPath,\n          handleDeletion: this.props.handleDeleteChildSectionOrQuestion,\n          sectionId: item.id,\n          readablePath: readablePath + (index + 1),\n          key: item.id,\n          onClick: this.props.handleSectionClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    });\n    return React.createElement(ButtonGroup, {\n      fill: true,\n      vertical: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, comp);\n  }\n\n}\nexport function getReadablePath(nu) {\n  return nu.slice(1).map(item => item + 1).join(\".\");\n}","map":{"version":3,"sources":["/Users/anujwagle/Desktop/temp/datapali-dashboard/src/components/section.tsx"],"names":["ButtonGroup","QuestionSection","QAQuestion","React","QuestionButton","DPFormItem","SectionButton","SectionC","Component","constructor","props","state","handleQuestionChange","q","path","render","comp","readablePath","getReadablePath","parentPath","section","content","map","item","index","childPath","concat","id","handleDeleteChildSectionOrQuestion","handleSectionClick","nu","slice","join"],"mappings":";AAAA,SAASA,WAAT,QAA4B,mBAA5B;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAWA,OAAO,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAoE;AACvEC,EAAAA,WAAW,CAACC,KAAD,EAAuB;AAC9B,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAEH;;AAEDC,EAAAA,oBAAoB,CAACC,CAAD,EAAgBC,IAAhB,EAAgC;AAChD,QAAI,KAAKJ,KAAL,CAAWE,oBAAf,EAAqC,KAAKF,KAAL,CAAWE,oBAAX,CAAgCC,CAAhC,EAAmCC,IAAnC;AACxC;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIC,YAAY,GAAGC,eAAe,CAAC,KAAKR,KAAL,CAAWS,UAAZ,CAAlC;AACA,QAAIF,YAAJ,EAAkBA,YAAY,IAAI,GAAhB;AAClBD,IAAAA,IAAI,GAAG,KAAKN,KAAL,CAAWU,OAAX,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnD,UAAIC,SAAS,GAAG,KAAKf,KAAL,CAAWS,UAAX,CAAsBO,MAAtB,CAA6BF,KAA7B,CAAhB;;AACA,UAAID,IAAI,YAAYrB,UAApB,EAAgC;AAC5B,eAAO,oBAAC,cAAD;AAAgB,UAAA,IAAI,EAAEuB,SAAtB;AAAiC,UAAA,UAAU,EAAEF,IAAI,CAACI,EAAlD;AAAsD,UAAA,cAAc,EAAE,KAAKjB,KAAL,CAAWkB,kCAAjF;AAAqH,UAAA,YAAY,EAAEX,YAAY,IAAIO,KAAK,GAAG,CAAZ,CAA/I;AAA+J,UAAA,GAAG,EAAED,IAAI,CAACI,EAAzK;AAA6K,UAAA,UAAU,EAAE,KAAzL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACH,oBAAC,UAAD;AAAY,UAAA,QAAQ,EAAGd,CAAD,IAAO,KAAKD,oBAAL,CAA0BC,CAA1B,EAA6BY,SAA7B,CAA7B;AAAsE,UAAA,QAAQ,EAAEF,IAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAGH,OAJD,MAKK,IAAIA,IAAI,YAAYtB,eAApB,EAAqC;AACtC,eAAO,oBAAC,aAAD;AAAe,UAAA,IAAI,EAAEwB,SAArB;AAAgC,UAAA,cAAc,EAAE,KAAKf,KAAL,CAAWkB,kCAA3D;AAA+F,UAAA,SAAS,EAAEL,IAAI,CAACI,EAA/G;AAAmH,UAAA,YAAY,EAAEV,YAAY,IAAIO,KAAK,GAAG,CAAZ,CAA7I;AAA6J,UAAA,GAAG,EAAED,IAAI,CAACI,EAAvK;AAA2K,UAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWmB,kBAA/L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,aAAO,IAAP;AACH,KAXM,CAAP;AAYA,WACI,oBAAC,WAAD;AAAa,MAAA,IAAI,MAAjB;AAAkB,MAAA,QAAQ,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKb,IADL,CADJ;AAOH;;AAlCsE;AAuC3E,OAAO,SAASE,eAAT,CAAyBY,EAAzB,EAAuC;AAC1C,SAAOA,EAAE,CAACC,KAAH,CAAS,CAAT,EAAYT,GAAZ,CAAgBC,IAAI,IAAIA,IAAI,GAAG,CAA/B,EAAkCS,IAAlC,CAAuC,GAAvC,CAAP;AAEH","sourcesContent":["import { ButtonGroup } from \"@blueprintjs/core\";\nimport { QuestionSection } from \"./SurveyForm\";\nimport { QAQuestion } from \"../form/question\";\nimport React from \"react\";\nimport { QuestionButton } from \"./questionButton\";\nimport { DPFormItem } from \"./DPFormItem\";\nimport { SectionButton } from \"./sectionButton\";\n\ninterface SectionCProps {\n    section: QuestionSection,\n    handleQuestionChange: (question: QAQuestion, _path: number[]) => void,\n    parentPath: number[],\n    handleDeleteChildSectionOrQuestion: (deleteid: string, _path: number[]) => void,\n    handleSectionClick: (sectionid: string, _path: number[]) => void,\n}\ninterface SectionCState {\n}\nexport class SectionC extends React.Component<SectionCProps, SectionCState>{\n    constructor(props: SectionCProps) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    handleQuestionChange(q: QAQuestion, path: number[]) {\n        if (this.props.handleQuestionChange) this.props.handleQuestionChange(q, path);\n    }\n\n    render() {\n        let comp = null;\n        let readablePath = getReadablePath(this.props.parentPath);\n        if (readablePath) readablePath += \".\";\n        comp = this.props.section.content.map((item, index) => {\n            let childPath = this.props.parentPath.concat(index);\n            if (item instanceof QAQuestion) {\n                return <QuestionButton path={childPath} questionId={item.id} handleDeletion={this.props.handleDeleteChildSectionOrQuestion} readablePath={readablePath + (index + 1)} key={item.id} isExpanded={false}>\n                    <DPFormItem onChange={(q) => this.handleQuestionChange(q, childPath)} question={item} />\n                </QuestionButton>\n            }\n            else if (item instanceof QuestionSection) {\n                return <SectionButton path={childPath} handleDeletion={this.props.handleDeleteChildSectionOrQuestion} sectionId={item.id} readablePath={readablePath + (index + 1)} key={item.id} onClick={this.props.handleSectionClick}></SectionButton>\n            }\n            return null;\n        })\n        return (\n            <ButtonGroup fill vertical>\n                {comp}\n\n            </ButtonGroup>\n\n        )\n    }\n}\n\n\n\nexport function getReadablePath(nu: number[]) {\n    return nu.slice(1).map(item => item + 1).join(\".\");\n\n}\n"]},"metadata":{},"sourceType":"module"}