{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getDateNextMonth, getDatePreviousMonth } from \"./dateUtils\";\n\nvar MonthAndYear =\n/** @class */\nfunction () {\n  function MonthAndYear(month, year) {\n    if (month !== null && year !== null) {\n      this.date = new Date(year, month);\n    } else {\n      this.date = new Date();\n    }\n  }\n\n  MonthAndYear.fromDate = function (date) {\n    return date == null ? undefined : new MonthAndYear(date.getMonth(), date.getFullYear());\n  };\n\n  MonthAndYear.prototype.clone = function () {\n    return new MonthAndYear(this.getMonth(), this.getYear());\n  };\n\n  MonthAndYear.prototype.getFullDate = function () {\n    return this.date;\n  };\n\n  MonthAndYear.prototype.getMonth = function () {\n    return this.date.getMonth();\n  };\n\n  MonthAndYear.prototype.getYear = function () {\n    return this.date.getFullYear();\n  };\n\n  MonthAndYear.prototype.getPreviousMonth = function () {\n    var previousMonthDate = getDatePreviousMonth(this.date);\n    return new MonthAndYear(previousMonthDate.getMonth(), previousMonthDate.getFullYear());\n  };\n\n  MonthAndYear.prototype.getNextMonth = function () {\n    var nextMonthDate = getDateNextMonth(this.date);\n    return new MonthAndYear(nextMonthDate.getMonth(), nextMonthDate.getFullYear());\n  };\n\n  MonthAndYear.prototype.isBefore = function (monthAndYear) {\n    return compareMonthAndYear(this, monthAndYear) < 0;\n  };\n\n  MonthAndYear.prototype.isAfter = function (monthAndYear) {\n    return compareMonthAndYear(this, monthAndYear) > 0;\n  };\n\n  MonthAndYear.prototype.isSame = function (monthAndYear) {\n    return compareMonthAndYear(this, monthAndYear) === 0;\n  };\n\n  MonthAndYear.prototype.isSameMonth = function (monthAndYear) {\n    return this.getMonth() === monthAndYear.getMonth();\n  };\n\n  return MonthAndYear;\n}();\n\nexport { MonthAndYear }; // returns negative if left < right\n// returns positive if left > right\n// returns 0 if left === right\n\nfunction compareMonthAndYear(firstMonthAndYear, secondMonthAndYear) {\n  var firstMonth = firstMonthAndYear.getMonth();\n  var firstYear = firstMonthAndYear.getYear();\n  var secondMonth = secondMonthAndYear.getMonth();\n  var secondYear = secondMonthAndYear.getYear();\n\n  if (firstYear === secondYear) {\n    return firstMonth - secondMonth;\n  } else {\n    return firstYear - secondYear;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}