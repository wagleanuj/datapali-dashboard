{"ast":null,"code":"import _slicedToArray from \"/Users/anujwagle/Desktop/temp/datapali-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anujwagle/Desktop/temp/datapali-dashboard/src/components/sectionButton.tsx\";\nimport { Badge } from \"reactstrap\";\nimport React, { useState } from \"react\";\nimport { ButtonGroup, Button, Collapse } from \"@blueprintjs/core\";\nexport const SectionButton = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isExpanded = _useState2[0],\n        setIsExpanded = _useState2[1];\n\n  return React.createElement(ButtonGroup, {\n    className: \"bp3-dark\",\n    style: {\n      paddingBottom: \"20px\"\n    },\n    fill: true,\n    vertical: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Button, {\n    style: {\n      height: 50\n    },\n    alignText: \"left\",\n    onClick: () => setIsExpanded(!isExpanded),\n    onDoubleClick: () => props.onClick(props.sectionId, props.path),\n    rightIcon: isExpanded ? \"chevron-up\" : \"chevron-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Badge, {\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"S\"), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.readablePath + \" Section\", \" \")), React.createElement(Button, {\n    onClick: () => props.handleDeletion(props.sectionId, props.path),\n    style: {\n      height: 50,\n      width: 20\n    },\n    alignText: \"left\",\n    rightIcon: \"cross\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(Collapse, {\n    isOpen: isExpanded,\n    keepChildrenMounted: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.children));\n};","map":{"version":3,"sources":["/Users/anujwagle/Desktop/temp/datapali-dashboard/src/components/sectionButton.tsx"],"names":["Badge","React","useState","ButtonGroup","Button","Collapse","SectionButton","props","isExpanded","setIsExpanded","paddingBottom","height","onClick","sectionId","path","readablePath","handleDeletion","width","children"],"mappings":";;AAAA,SAASA,KAAT,QAAsB,YAAtB;AAEA,OAAOC,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,MAAtB,EAA8BC,QAA9B,QAA8C,mBAA9C;AAWA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAA+B;AAAA,oBACpBL,QAAQ,CAAC,KAAD,CADY;AAAA;AAAA,QACjDM,UADiD;AAAA,QACrCC,aADqC;;AAGxD,SACI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAkC,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAAzC;AAAoE,IAAA,IAAI,MAAxE;AAA0E,IAAA,QAAQ,MAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAf;AAA+B,IAAA,SAAS,EAAC,MAAzC;AAAiD,IAAA,OAAO,EAAE,MAAIF,aAAa,CAAC,CAACD,UAAF,CAA3E;AAA0F,IAAA,aAAa,EAAE,MAAMD,KAAK,CAACK,OAAN,CAAcL,KAAK,CAACM,SAApB,EAA+BN,KAAK,CAACO,IAArC,CAA/G;AAA2J,IAAA,SAAS,EAAEN,UAAU,GAAG,YAAH,GAAkB,cAAlM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkN,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAlN,OAAqP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,KAAK,CAACQ,YAAN,GAAqB,UAA5B,MAArP,CADA,EAEA,oBAAC,MAAD;AAAS,IAAA,OAAO,EAAE,MAAMR,KAAK,CAACS,cAAN,CAAqBT,KAAK,CAACM,SAA3B,EAAsCN,KAAK,CAACO,IAA5C,CAAxB;AAA2E,IAAA,KAAK,EAAE;AAAEH,MAAAA,MAAM,EAAE,EAAV;AAAcM,MAAAA,KAAK,EAAE;AAArB,KAAlF;AAA6G,IAAA,SAAS,EAAC,MAAvH;AAA8H,IAAA,SAAS,EAAE,OAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADJ,EAKI,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAGT,UAAnB;AAA+B,IAAA,mBAAmB,EAAI,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACW,QADX,CALJ,CADJ;AAWH,CAdM","sourcesContent":["import { Badge } from \"reactstrap\";\n\nimport React, { ReactNode, useState } from \"react\";\nimport { ButtonGroup, Button, Collapse } from \"@blueprintjs/core\";\n\ninterface SectionButtonProps {\n    sectionId: string,\n    onClick: (id: string, path: number[]) => void,\n    path: number[],\n    readablePath: string,\n    handleDeletion: (id: string, path: number[]) => void,\n    children: ReactNode\n\n}\nexport const SectionButton = (props: SectionButtonProps) => {\n    const [isExpanded, setIsExpanded] = useState(false);\n\n    return (\n        <ButtonGroup className=\"bp3-dark\" style={{ paddingBottom: \"20px\" }} fill  vertical>\n            <ButtonGroup >\n            <Button style={{ height: 50 }} alignText=\"left\"  onClick={()=>setIsExpanded(!isExpanded)} onDoubleClick={() => props.onClick(props.sectionId, props.path)} rightIcon={isExpanded ? \"chevron-up\" : \"chevron-down\"}><Badge color=\"secondary\">S</Badge> <span>{props.readablePath + \" Section\"} </span></Button>\n            <Button  onClick={() => props.handleDeletion(props.sectionId, props.path)} style={{ height: 50, width: 20 }} alignText=\"left\" rightIcon={\"cross\"} />\n            </ButtonGroup>\n            <Collapse isOpen ={isExpanded} keepChildrenMounted = {false}>\n                {props.children}\n            </Collapse>\n        </ButtonGroup>\n    )\n}"]},"metadata":{},"sourceType":"module"}