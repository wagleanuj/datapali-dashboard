{"ast":null,"code":"import ReactDOM from \"react-dom\";\nimport { QACondition } from \"../form/condition\";\nexport function openModal(com) {\n  let el = document.getElementById(\"dp-modal\");\n\n  if (!el) {\n    el = document.createElement(\"div\");\n    el.setAttribute(\"id\", \"dp-modal\");\n    document.body.appendChild(el);\n  }\n\n  ReactDOM.render(com, el);\n}\nexport function destroyModal() {\n  let el = document.getElementById(\"dp-modal\");\n  if (el) ReactDOM.unmountComponentAtNode(el);\n}\nexport function ofTypeToJSON(t) {\n  if (!t) return undefined;\n  return {\n    name: t.name,\n    ofType: ofTypeFromJSON(t.ofType)\n  };\n}\nexport function answerTypeToJSON(t) {\n  return {\n    name: t.name,\n    ofType: ofTypeToJSON(t.ofType)\n  };\n}\nexport function ofTypeFromJSON(a) {\n  if (!a) return undefined;\n  let r = {\n    name: a.name,\n    ofType: ofTypeFromJSON(a.ofType)\n  };\n  return r;\n}\nexport function answerTypeFromJSON(a) {\n  let r = {\n    name: a.name,\n    ofType: ofTypeFromJSON(a.ofType)\n  };\n  return r;\n}\nexport function optionFromJSON(a) {\n  let option = {\n    groupName: a.groupName,\n    appearingCondition: QACondition.fromJSON(a.appearingCondition),\n    id: a.id,\n    value: a.value,\n    type: answerTypeFromJSON(a.type)\n  };\n  return option;\n}\nexport function optionToJSON(a) {\n  return {\n    appearingCondition: QACondition.toJSON(a.appearingCondition),\n    type: a.type ? answerTypeToJSON(a.type) : undefined,\n    id: a.id,\n    value: a.value,\n    groupName: a.groupName\n  };\n}\nexport function autoAnswerToJSON(a) {\n  if (!a) return undefined;\n  return {\n    isEnabled: a.isEnabled,\n    answeringConditions: a.answeringConditions.map(item => answerConditionToJSON(item))\n  };\n}\nexport function autoAnswerFromJSON(a) {\n  let r = {\n    isEnabled: a.isEnabled,\n    answeringConditions: a.answeringConditions.map(item => answerConditionFromJSON(item))\n  };\n  return r;\n}\nexport function answerConditionToJSON(a) {\n  return {\n    condition: QACondition.toJSON(a.condition),\n    ifTrue: a.ifTrue,\n    ifFalse: a.ifFalse\n  };\n}\nexport function optionGroupToJSON(a) {\n  return {\n    id: a.id,\n    name: a.name,\n    appearingCondition: QACondition.toJSON(a.appearingCondition),\n    members: a.members.map(item => optionToJSON(item))\n  };\n} // export function optionGroupFromJSON(a:any): IOptionGroup {\n//     let r: IOptionGroup  = {\n//     }\n//     return r;\n// }\n\nexport function answerConditionFromJSON(a) {\n  let r = {\n    condition: QACondition.fromJSON(a.condition),\n    ifFalse: a.ifFalse,\n    ifTrue: a.ifTrue\n  };\n  return r;\n}\nexport function dupeSettingsToJSON(a) {\n  return {\n    isEnabled: a.isEnabled,\n    condition: QACondition.toJSON(a.condition),\n    duplicateTimes: {\n      value: a.duplicateTimes.value,\n      type: a.duplicateTimes.type\n    }\n  };\n}\nexport function dupeSettingsFromJSON(a) {\n  let r = {\n    isEnabled: a.isEnabled,\n    duplicateTimes: {\n      value: a.duplicateTimes,\n      type: a.duplicateTimes.type\n    },\n    condition: QACondition.fromJSON(a.condition)\n  };\n  return r;\n}","map":{"version":3,"sources":["/Users/anujwagle/Desktop/temp/datapali-dashboard/src/utils/util.ts"],"names":["ReactDOM","QACondition","openModal","com","el","document","getElementById","createElement","setAttribute","body","appendChild","render","destroyModal","unmountComponentAtNode","ofTypeToJSON","t","undefined","name","ofType","ofTypeFromJSON","answerTypeToJSON","a","r","answerTypeFromJSON","optionFromJSON","option","groupName","appearingCondition","fromJSON","id","value","type","optionToJSON","toJSON","autoAnswerToJSON","isEnabled","answeringConditions","map","item","answerConditionToJSON","autoAnswerFromJSON","answerConditionFromJSON","condition","ifTrue","ifFalse","optionGroupToJSON","members","dupeSettingsToJSON","duplicateTimes","dupeSettingsFromJSON"],"mappings":"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","sourcesContent":["import ReactDOM from \"react-dom\";\r\nimport { ReactElement } from \"react\";\r\nimport { IAnswerCondition, IAutoAnswer } from \"../form/question\";\r\nimport { QACondition } from \"../form/condition\";\r\nimport { IOption, IOptionGroup } from \"../components/AnswerOptions\";\r\nimport { IValueType } from \"../components/AnswerType\";\r\nimport { IDupeSettings, DuplicateTimesType } from \"../components/duplicateSettings\";\r\n\r\nexport function openModal(com: ReactElement) {\r\n    let el = document.getElementById(\"dp-modal\");\r\n    if (!el) {\r\n        el = document.createElement(\"div\");\r\n        el.setAttribute(\"id\", \"dp-modal\")\r\n        document.body.appendChild(el)\r\n    }\r\n    ReactDOM.render(com, el);\r\n\r\n}\r\n\r\nexport function destroyModal() {\r\n    let el = document.getElementById(\"dp-modal\");\r\n    if (el) ReactDOM.unmountComponentAtNode(el);\r\n}\r\nexport function ofTypeToJSON(t?: IValueType): any {\r\n    if (!t) return undefined;\r\n    return {\r\n        name: t.name,\r\n        ofType: ofTypeFromJSON(t.ofType)\r\n    }\r\n}\r\nexport function answerTypeToJSON(t: IValueType): { [key: string]: any } {\r\n    return {\r\n        name: t.name,\r\n        ofType: ofTypeToJSON(t.ofType)\r\n    }\r\n}\r\nexport function ofTypeFromJSON(a: any) {\r\n    if (!a) return undefined;\r\n    let r: IValueType = {\r\n        name: a.name,\r\n        ofType: ofTypeFromJSON(a.ofType)\r\n    }\r\n    return r;\r\n}\r\n\r\nexport function answerTypeFromJSON(a: any) {\r\n    let r: IValueType = {\r\n        name: a.name,\r\n        ofType: ofTypeFromJSON(a.ofType)\r\n    }\r\n    return r;\r\n}\r\n\r\n\r\nexport function optionFromJSON(a: any) {\r\n    let option: IOption = {\r\n        groupName: a.groupName,\r\n        appearingCondition: QACondition.fromJSON(a.appearingCondition),\r\n        id: a.id,\r\n        value: a.value,\r\n        type: answerTypeFromJSON(a.type)\r\n    }\r\n    return option;\r\n}\r\n\r\nexport function optionToJSON(a: IOption) {\r\n    return ({\r\n        appearingCondition: QACondition.toJSON(a.appearingCondition),\r\n        type: a.type ? answerTypeToJSON(a.type) : undefined,\r\n        id: a.id,\r\n        value: a.value,\r\n        groupName: a.groupName\r\n    })\r\n}\r\n\r\n\r\n\r\nexport function autoAnswerToJSON(a: IAutoAnswer) {\r\n    if (!a) return undefined;\r\n    return ({\r\n        isEnabled: a.isEnabled,\r\n        answeringConditions: a.answeringConditions.map(item => answerConditionToJSON(item))\r\n    })\r\n}\r\n\r\nexport function autoAnswerFromJSON(a: any) {\r\n    let r: IAutoAnswer = {\r\n        isEnabled: a.isEnabled,\r\n        answeringConditions: a.answeringConditions.map((item: any) => answerConditionFromJSON(item))\r\n    }\r\n    return r;\r\n\r\n}\r\n\r\nexport function answerConditionToJSON(a: IAnswerCondition) {\r\n    return ({\r\n        condition: QACondition.toJSON(a.condition),\r\n        ifTrue: (a.ifTrue),\r\n        ifFalse: (a.ifFalse)\r\n    })\r\n}\r\nexport function optionGroupToJSON(a: IOptionGroup) {\r\n    return ({\r\n        id: a.id,\r\n        name: a.name,\r\n        appearingCondition: QACondition.toJSON(a.appearingCondition),\r\n        members: a.members.map(item => optionToJSON(item))\r\n    })\r\n}\r\n\r\n// export function optionGroupFromJSON(a:any): IOptionGroup {\r\n//     let r: IOptionGroup  = {\r\n\r\n//     }\r\n//     return r;\r\n// }\r\n\r\nexport function answerConditionFromJSON(a: any): IAnswerCondition {\r\n    let r: IAnswerCondition = {\r\n        condition: QACondition.fromJSON(a.condition),\r\n        ifFalse: a.ifFalse,\r\n        ifTrue: a.ifTrue\r\n    }\r\n    return r;\r\n}\r\n\r\nexport function dupeSettingsToJSON(a: IDupeSettings) {\r\n    return ({\r\n        isEnabled: a.isEnabled,\r\n        condition: QACondition.toJSON(a.condition),\r\n        duplicateTimes: { value: a.duplicateTimes.value, type: a.duplicateTimes.type }\r\n    })\r\n}\r\nexport function dupeSettingsFromJSON(a: any) {\r\n    let r: IDupeSettings = {\r\n        isEnabled: a.isEnabled,\r\n        duplicateTimes: {\r\n            value: a.duplicateTimes,\r\n            type: a.duplicateTimes.type as DuplicateTimesType\r\n        },\r\n        condition: QACondition.fromJSON(a.condition)\r\n    }\r\n    return r;\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}