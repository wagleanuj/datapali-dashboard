{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Utils } from \"../../common\";\nimport * as Classes from \"../../common/classes\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\"; // TODO: write tests (ignoring for now to get a build passing quickly)\n\n/* istanbul ignore next */\n\nvar FileInput =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(FileInput, _super);\n\n  function FileInput() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.handleInputChange = function (e) {\n      Utils.safeInvoke(_this.props.onInputChange, e);\n      Utils.safeInvoke(_this.props.inputProps.onChange, e);\n    };\n\n    return _this;\n  }\n\n  FileInput.prototype.render = function () {\n    var _a, _b, _c;\n\n    var _d = this.props,\n        buttonText = _d.buttonText,\n        className = _d.className,\n        disabled = _d.disabled,\n        fill = _d.fill,\n        hasSelection = _d.hasSelection,\n        inputProps = _d.inputProps,\n        large = _d.large,\n        onInputChange = _d.onInputChange,\n        text = _d.text,\n        htmlProps = tslib_1.__rest(_d, [\"buttonText\", \"className\", \"disabled\", \"fill\", \"hasSelection\", \"inputProps\", \"large\", \"onInputChange\", \"text\"]);\n\n    var rootClasses = classNames(Classes.FILE_INPUT, (_a = {}, _a[Classes.FILE_INPUT_HAS_SELECTION] = hasSelection, _a[Classes.DISABLED] = disabled, _a[Classes.FILL] = fill, _a[Classes.LARGE] = large, _a), className);\n    var NS = Classes.getClassNamespace();\n    var uploadProps = (_b = {}, _b[NS + \"-button-text\"] = buttonText, _b.className = classNames(Classes.FILE_UPLOAD_INPUT, (_c = {}, _c[Classes.FILE_UPLOAD_INPUT_CUSTOM_TEXT] = !!buttonText, _c)), _b);\n    return React.createElement(\"label\", tslib_1.__assign({}, htmlProps, {\n      className: rootClasses\n    }), React.createElement(\"input\", tslib_1.__assign({}, inputProps, {\n      onChange: this.handleInputChange,\n      type: \"file\",\n      disabled: disabled\n    })), React.createElement(\"span\", tslib_1.__assign({}, uploadProps), text));\n  };\n\n  FileInput.displayName = DISPLAYNAME_PREFIX + \".FileInput\";\n  FileInput.defaultProps = {\n    hasSelection: false,\n    inputProps: {},\n    text: \"Choose file...\"\n  };\n  return FileInput;\n}(React.PureComponent);\n\nexport { FileInput };","map":null,"metadata":{},"sourceType":"module"}