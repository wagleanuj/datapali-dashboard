{"ast":null,"code":"var _jsxFileName = \"/Users/anujwagle/Desktop/temp/datapali-dashboard/src/components/duplicateSettings.tsx\";\nimport React from \"react\";\nimport { ButtonGroup, Button, Switch } from \"@blueprintjs/core\";\nimport Select from \"react-select\";\nimport _ from \"lodash\";\nexport class DuplicateSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enabled: this.props.enabled,\n      condition: this.props.condition,\n      duplicateTimes: this.props.duplicateTimes\n    };\n  }\n\n  handleQuestionRefChange(newValue) {\n    this.setState({\n      duplicateTimes: {\n        value: newValue.value,\n        type: \"questionRef\"\n      }\n    });\n  }\n\n  handleNumberTimesChange(newValue) {\n    this.setState({\n      duplicateTimes: {\n        value: newValue,\n        type: \"number\"\n      }\n    });\n  }\n\n  handleTypeChange(newType) {\n    this.setState(prevState => {\n      return {\n        duplicateTimes: {\n          value: \"\",\n          type: newType.value\n        }\n      };\n    });\n  }\n\n  handleEnabledChange() {\n    this.setState(prevState => {\n      return {\n        enabled: !prevState.enabled\n      };\n    });\n  }\n\n  generateValueComponent(type) {\n    if (type === \"questionRef\") {\n      let options = this.props.definedQuestions.map(item => ({\n        value: item.id,\n        label: item.questionContent.content\n      }));\n      let selected = this.props.duplicateTimes.type === \"questionRef\" ? options.find(item => item.value === this.props.duplicateTimes.value) : undefined;\n      return React.createElement(Select, {\n        options: options,\n        defaultValue: selected,\n        onChange: this.handleQuestionRefChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"input\", {\n      defaultValue: this.state.duplicateTimes.type === \"number\" ? this.state.duplicateTimes.value : \"\",\n      type: \"number\",\n      className: \"form-control\",\n      onChange: e => this.handleNumberTimesChange(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }\n\n  handleSave() {\n    let isInvalid = _.values(this.state).every(_.isEmpty);\n\n    if (!isInvalid) {\n      this.props.handleSave({\n        enabled: this.state.enabled,\n        condition: this.state.condition,\n        duplicateTimes: this.state.duplicateTimes\n      });\n    }\n  }\n\n  render() {\n    let typeOptions = [{\n      value: \"number\",\n      label: \"Number\"\n    }, {\n      value: \"questionRef\",\n      label: \"AnswerValue\"\n    }];\n    let defaultValue = typeOptions.find(item => item.value === this.state.duplicateTimes.type);\n    return React.createElement(ButtonGroup, {\n      vertical: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      onChange: this.handleEnabledChange.bind(this),\n      defaultChecked: this.props.enabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Select, {\n      onChange: e => this.handleTypeChange.bind(this),\n      options: typeOptions,\n      defaultValue: defaultValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), this.generateValueComponent(defaultValue && defaultValue.value), React.createElement(ButtonGroup, {\n      fill: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleSave.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Save\"), React.createElement(Button, {\n      onClick: this.props.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/anujwagle/Desktop/temp/datapali-dashboard/src/components/duplicateSettings.tsx"],"names":["React","ButtonGroup","Button","Switch","Select","_","DuplicateSettings","Component","constructor","props","state","enabled","condition","duplicateTimes","handleQuestionRefChange","newValue","setState","value","type","handleNumberTimesChange","handleTypeChange","newType","prevState","handleEnabledChange","generateValueComponent","options","definedQuestions","map","item","id","label","questionContent","content","selected","find","undefined","e","target","handleSave","isInvalid","values","every","isEmpty","render","typeOptions","defaultValue","bind","handleCancel"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {QACondition} from \"../form/condition\";\nimport { Tabs, Tab, ButtonGroup,Button, ContextMenuTarget, Drawer, Switch } from \"@blueprintjs/core\";\nimport { QAQuestion } from \"../form/question\";\nimport Select from \"react-select\";\nimport { customStyles } from \"./DPFormItem\";\nimport { string } from \"prop-types\";\nimport _ from \"lodash\";\n\ntype DuplicateTimesType = \"questionRef\"|\"number\";\n\nexport interface DupeSettings {\n    enabled: boolean, \n    condition?: QACondition,\n    duplicateTimes: {value: string, type: DuplicateTimesType},\n}\ninterface DuplicateSettingsProps extends DupeSettings {\n    definedQuestions: QAQuestion[],\n    handleSave: (dupe: DupeSettings)=>void,\n    handleCancel : ()=>void\n\n}\ninterface DuplicateSettingsState  extends DupeSettings{\n\n}\n\nexport class DuplicateSettings extends React.Component<DuplicateSettingsProps, DuplicateSettingsState>{\n    constructor(props: DuplicateSettingsProps){\n        super(props);\n        this.state = {\n            enabled: this.props.enabled,\n            condition: this.props.condition,\n            duplicateTimes: this.props.duplicateTimes\n        }\n    }\n\n    private handleQuestionRefChange(newValue: any){\n        this.setState({\n            duplicateTimes: {value: newValue.value, type: \"questionRef\"}\n        })\n    }\n    private handleNumberTimesChange(newValue: string){\n        this.setState({\n            duplicateTimes: {value: newValue, type: \"number\"}\n        })\n    }\n    private handleTypeChange(newType:any){\n        this.setState((prevState: DuplicateSettingsState)=>{\n            return {\n                duplicateTimes: {value: \"\", type: newType.value}\n            }\n        })\n    }\n    private handleEnabledChange(){\n        this.setState((prevState: DuplicateSettingsState)=>{\n            return {\n                enabled: !prevState.enabled\n            }\n        })\n    }\n    private generateValueComponent(type?: string){\n        if(type===\"questionRef\"){\n            let options = this.props.definedQuestions.map(item=>({value: item.id, label: item.questionContent.content}));\n            let selected = this.props.duplicateTimes.type===\"questionRef\"? options.find(item=>item.value===this.props.duplicateTimes.value): undefined;\n            return <Select options = {options} defaultValue = {selected} onChange = {this.handleQuestionRefChange}/>\n        }\n        return <input defaultValue={this.state.duplicateTimes.type===\"number\"? this.state.duplicateTimes.value:\"\"} type=\"number\" className =\"form-control\" onChange={e=> this.handleNumberTimesChange(e.target.value)}/>\n    }\n    private handleSave(){\n        let isInvalid = _.values(this.state).every(_.isEmpty);\n        if(!isInvalid){\n            this.props.handleSave({enabled: this.state.enabled, condition: this.state.condition, duplicateTimes: this.state.duplicateTimes})\n        }\n    }\n\n    render(){\n        let typeOptions = [{value: \"number\", label: \"Number\"}, {value: \"questionRef\" as DuplicateTimesType, label: \"AnswerValue\" as DuplicateTimesType}];\n        let defaultValue =typeOptions.find(item=>item.value===this.state.duplicateTimes.type);\n        \n        return (\n            <ButtonGroup vertical>\n                <Switch  onChange = {this.handleEnabledChange.bind(this)} defaultChecked={this.props.enabled}></Switch>\n                <Select onChange = {(e:any)=>this.handleTypeChange.bind(this)} options = {typeOptions} defaultValue={defaultValue}></Select>\n                {this.generateValueComponent(defaultValue && defaultValue.value)}\n                <ButtonGroup fill>\n                    <Button onClick = {this.handleSave.bind(this)}>\n                        Save\n                    </Button>\n                    <Button onClick={this.props.handleCancel}>\n                        Cancel\n                    </Button>\n                </ButtonGroup>\n            </ButtonGroup>\n           \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}