{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as Classes from \"../../common/classes\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { Popover, PopoverInteractionKind } from \"../popover/popover\";\n\nvar Tooltip =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Tooltip, _super);\n\n  function Tooltip() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.popover = null;\n    return _this;\n  }\n\n  Tooltip.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        children = _a.children,\n        intent = _a.intent,\n        popoverClassName = _a.popoverClassName,\n        restProps = tslib_1.__rest(_a, [\"children\", \"intent\", \"popoverClassName\"]);\n\n    var classes = classNames(Classes.TOOLTIP, Classes.intentClass(intent), popoverClassName);\n    return React.createElement(Popover, tslib_1.__assign({\n      interactionKind: PopoverInteractionKind.HOVER_TARGET_ONLY\n    }, restProps, {\n      autoFocus: false,\n      canEscapeKeyClose: false,\n      enforceFocus: false,\n      lazy: true,\n      popoverClassName: classes,\n      portalContainer: this.props.portalContainer,\n      ref: function (ref) {\n        return _this.popover = ref;\n      }\n    }), children);\n  };\n\n  Tooltip.prototype.reposition = function () {\n    if (this.popover != null) {\n      this.popover.reposition();\n    }\n  };\n\n  Tooltip.displayName = DISPLAYNAME_PREFIX + \".Tooltip\";\n  Tooltip.defaultProps = {\n    hoverCloseDelay: 0,\n    hoverOpenDelay: 100,\n    transitionDuration: 100\n  };\n  return Tooltip;\n}(React.PureComponent);\n\nexport { Tooltip };","map":null,"metadata":{},"sourceType":"module"}