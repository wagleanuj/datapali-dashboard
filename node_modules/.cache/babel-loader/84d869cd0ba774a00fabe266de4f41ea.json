{"ast":null,"code":"import _slicedToArray from \"/Users/anujwagle/Desktop/temp/datapali-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anujwagle/Desktop/temp/datapali-dashboard/src/components/ValInput.tsx\";\nimport React, { useState } from \"react\";\nimport { ANSWER_TYPES } from \"./AnswerType\";\nimport { TimePicker, TimePrecision, DateRangePicker, DateInput } from \"@blueprintjs/datetime\";\nimport { ButtonGroup, Divider } from \"@blueprintjs/core\";\nimport Select from \"react-select\";\nimport { customStyles } from \"./DPFormItem\";\nexport class RangeInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  parseRangeValue(range) {\n    let d = range.split(\"-\");\n    return {\n      min: d[0],\n      max: d[1]\n    };\n  }\n\n  handleInputChange(data) {\n    let transformed = data.min + \"-\" + data.max;\n\n    switch (this.props.type && this.props.type.name) {\n      //necessary transforms to be done here\n      case ANSWER_TYPES.TIME:\n        if (this.props.onChange) this.props.onChange(transformed);\n        break;\n\n      case ANSWER_TYPES.DATE:\n        if (this.props.onChange) this.props.onChange(transformed);\n        break;\n\n      case ANSWER_TYPES.NUMBER:\n        if (this.props.onChange) this.props.onChange(transformed);\n        break;\n\n      default:\n        if (this.props.onChange) this.props.onChange(transformed);\n        break;\n    }\n  }\n\n  render() {\n    let comp = null;\n    let type = this.props.type ? this.props.type.name : undefined;\n    let parsed = this.parseRangeValue(this.props.value);\n\n    switch (type) {\n      case ANSWER_TYPES.TIME:\n        comp = React.createElement(TimeRange, {\n          range: parsed,\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        });\n        break;\n\n      case ANSWER_TYPES.DATE:\n        let dateMin = parsed.min ? new Date(parsed.min) : undefined;\n        let dateMax = parsed.max ? new Date(parsed.max) : undefined;\n        comp = React.createElement(DateRangePicker, {\n          shortcuts: false,\n          defaultValue: [dateMin, dateMax],\n          onChange: selectedDates => this.handleInputChange({\n            min: selectedDates[0] ? selectedDates[0].toString() : \"\",\n            max: selectedDates[1] ? selectedDates[1].toString() : \"\"\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        });\n        break;\n\n      case ANSWER_TYPES.NUMBER:\n        comp = React.createElement(NumberRange, {\n          range: parsed,\n          onChange: d => this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n        break;\n    }\n\n    return comp;\n  }\n\n}\nconst defaultNumberRangeProps = {\n  range: {\n    min: \"\",\n    max: \"\"\n  },\n  onChange: () => {}\n};\n\nconst NumberRange = (props = defaultNumberRangeProps) => {\n  const _useState = useState(props ? props.range.min : \"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        minValue = _useState2[0],\n        setMin = _useState2[1];\n\n  const _useState3 = useState(props ? props.range.max : \"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        maxValue = _useState4[0],\n        setMax = _useState4[1];\n\n  return React.createElement(ButtonGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"form-control\",\n    defaultValue: props && props.range.min && props.range.min.toString(),\n    onChange: e => {\n      setMin(e.target.value);\n      if (props && props.onChange) props.onChange({\n        min: minValue,\n        max: maxValue\n      });\n    },\n    placeholder: \"Minimum\",\n    id: \"numberRange-min\",\n    type: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"form-control\",\n    defaultValue: props && props.range.max && props.range.max.toString(),\n    onChange: e => {\n      setMax(e.target.value);\n      if (props && props.onChange) props.onChange({\n        min: minValue,\n        max: maxValue\n      });\n    },\n    placeholder: \"Maximum\",\n    id: \"numberRange-max\",\n    type: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }));\n};\n\nconst defaultTimeRangeProps = {\n  range: {\n    min: \"Sat Aug 31 2019 13:35:27 GMT-0230 (Newfoundland Daylight Time\",\n    max: \"Sat Aug 31 2019 13:35:27 GMT-0230 (Newfoundland Daylight Time\"\n  },\n  onChange: () => {}\n};\n\nconst TimeRange = (props = defaultTimeRangeProps) => {\n  const _useState5 = useState(props ? props.range.min : undefined),\n        _useState6 = _slicedToArray(_useState5, 2),\n        minValue = _useState6[0],\n        setMin = _useState6[1];\n\n  const _useState7 = useState(props ? props.range.max : undefined),\n        _useState8 = _slicedToArray(_useState7, 2),\n        maxValue = _useState8[0],\n        setMax = _useState8[1];\n\n  console.log(maxValue);\n  console.log(minValue);\n  return React.createElement(ButtonGroup, {\n    className: \"bp3-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(TimePicker, {\n    precision: TimePrecision.MINUTE,\n    useAmPm: true,\n    defaultValue: minValue ? new Date(minValue) : undefined,\n    onChange: newTime => {\n      setMin(newTime.toLocaleDateString());\n      if (props.onChange) props.onChange({\n        min: minValue,\n        max: maxValue\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(TimePicker, {\n    precision: TimePrecision.MINUTE,\n    useAmPm: true,\n    defaultValue: maxValue ? new Date(maxValue) : undefined,\n    onChange: newTime => {\n      setMax(newTime.toLocaleDateString());\n      props.onChange({\n        min: minValue,\n        max: maxValue\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }));\n};\n\nexport class ValInput extends React.Component {\n  static get defaultProps() {\n    return {\n      defaultValue: \"\",\n      onChange: e => {\n        console.log(e);\n      },\n      type: {\n        name: ANSWER_TYPES.STRING\n      }\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let comp = null;\n\n    switch (this.props.type.name) {\n      case ANSWER_TYPES.NUMBER:\n        comp = React.createElement(\"input\", {\n          className: \"form-control\",\n          type: \"number\",\n          onChange: e => {\n            if (this.props.onChange) this.props.onChange(e.target.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        });\n        break;\n\n      case ANSWER_TYPES.SELECT:\n        comp = React.createElement(SelInput, {\n          type: this.props.type.ofType,\n          defaultValue: this.props.defaultValue,\n          options: this.props.options,\n          onChange: newVal => {\n            if (this.props.onChange) this.props.onChange(newVal);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }); //TODO::\n\n        break;\n\n      case ANSWER_TYPES.BOOLEAN:\n        let opt = [{\n          value: \"true\",\n          label: \"YES\"\n        }, {\n          value: \"false\",\n          label: \"No\"\n        }];\n        let def = opt.find(item => item.value === this.props.defaultValue);\n        comp = React.createElement(Select, {\n          styles: customStyles,\n          defaultValue: def,\n          options: opt,\n          onChange: newVal => {\n            if (this.props.onChange) this.props.onChange({\n              value: newVal\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        });\n        break;\n\n      case ANSWER_TYPES.DATE:\n        let defaultDate = this.props.defaultValue ? new Date(this.props.defaultValue) : undefined;\n        comp = React.createElement(DateInput, {\n          formatDate: date => date.toLocaleDateString(),\n          parseDate: str => new Date(str),\n          closeOnSelection: true,\n          defaultValue: defaultDate,\n          onChange: e => {\n            if (this.props.onChange) this.props.onChange({\n              value: e.toLocaleDateString()\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        });\n        break;\n\n      case ANSWER_TYPES.RANGE:\n        if (this.props.type.ofType) {\n          comp = React.createElement(RangeInput, {\n            value: this.props.defaultValue,\n            type: this.props.type.ofType,\n            onChange: e => {\n              if (this.props.onChange) this.props.onChange({\n                value: e\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          });\n        }\n\n        break;\n\n      case ANSWER_TYPES.STRING:\n        comp = React.createElement(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          onChange: e => {\n            if (this.props.onChange) this.props.onChange({\n              value: e.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        });\n        break;\n\n      case ANSWER_TYPES.TIME:\n        let defaulttime = this.props.defaultValue ? new Date(this.props.defaultValue) : undefined;\n        comp = React.createElement(TimePicker, {\n          precision: TimePrecision.MINUTE,\n          useAmPm: true,\n          defaultValue: defaulttime,\n          onChange: newTime => {\n            if (this.props.onChange) this.props.onChange({\n              value: newTime.toString()\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        });\n    }\n\n    return comp;\n  }\n\n}\nexport class SelInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleChange(d) {\n    console.log(d);\n    if (this.props.onChange) this.props.onChange(d);\n  }\n\n  render() {\n    let allOptions = [];\n\n    if (this.props.options) {\n      let _this$props$options$S = this.props.options.SortedOptions,\n          rootOptions = _this$props$options$S.rootOptions,\n          groups = _this$props$options$S.groups;\n      let groupOptions_ = [];\n      let rootOptions_ = [];\n\n      if (groups && groups.length > 0) {\n        groupOptions_ = groups.map(item => {\n          return {\n            label: item.name,\n            options: item.members.map(i => ({\n              label: i.value,\n              value: i.id\n            }))\n          };\n        });\n      }\n\n      rootOptions_ = rootOptions.map(i => ({\n        label: i.value,\n        value: i.id\n      }));\n      allOptions = [...groupOptions_, ...rootOptions_];\n    }\n\n    let defaultvalue = allOptions.find(item => item.value === this.props.defaultValue);\n    return React.createElement(Select, {\n      styles: customStyles,\n      options: allOptions,\n      onChange: this.handleChange.bind(this),\n      defaultValue: defaultvalue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/anujwagle/Desktop/temp/datapali-dashboard/src/components/ValInput.tsx"],"names":["React","useState","ANSWER_TYPES","TimePicker","TimePrecision","DateRangePicker","DateInput","ButtonGroup","Divider","Select","customStyles","RangeInput","Component","constructor","props","state","parseRangeValue","range","d","split","min","max","handleInputChange","data","transformed","type","name","TIME","onChange","DATE","NUMBER","render","comp","undefined","parsed","value","dateMin","Date","dateMax","selectedDates","toString","defaultNumberRangeProps","NumberRange","minValue","setMin","maxValue","setMax","e","target","defaultTimeRangeProps","TimeRange","console","log","MINUTE","newTime","toLocaleDateString","ValInput","defaultProps","defaultValue","STRING","SELECT","ofType","options","newVal","BOOLEAN","opt","label","def","find","item","defaultDate","date","str","RANGE","defaulttime","SelInput","handleChange","allOptions","SortedOptions","rootOptions","groups","groupOptions_","rootOptions_","length","map","members","i","id","defaultvalue","bind"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { ANSWER_TYPES, QAValueType } from \"./AnswerType\";\nimport { TimePicker, TimePrecision, DateRangePicker, DateInput } from \"@blueprintjs/datetime\"\nimport { ButtonGroup, Divider } from \"@blueprintjs/core\";\nimport Select from \"react-select\"\nimport { customStyles } from \"./DPFormItem\";\nimport { AnswerOptions } from \"./AnswerOptions\";\n\ninterface RangeValue {\n    min: string | undefined\n    max: string | undefined\n}\n\n\ninterface RangeInputProps {\n    type: QAValueType,\n    value: string,\n    onChange: (newRange: string) => void\n}\n\ninterface RangeInputState {\n\n}\nexport class RangeInput extends React.Component<RangeInputProps, RangeInputState>{\n    constructor(props: RangeInputProps) {\n        super(props);\n        this.state = {\n\n        }\n    }\n    parseRangeValue(range: string): RangeValue {\n        let d = range.split(\"-\")\n        return { min: d[0], max: d[1] }\n    }\n\n    handleInputChange(data: RangeValue) {\n        let transformed = data.min + \"-\" + data.max;\n        switch (this.props.type && this.props.type.name) {\n            //necessary transforms to be done here\n            case ANSWER_TYPES.TIME:\n                if (this.props.onChange) this.props.onChange(transformed);\n                break;\n            case ANSWER_TYPES.DATE:\n                if (this.props.onChange) this.props.onChange(transformed);\n                break;\n            case ANSWER_TYPES.NUMBER:\n                if (this.props.onChange) this.props.onChange(transformed);\n                break;\n            default:\n                if (this.props.onChange) this.props.onChange(transformed);\n\n                break;\n\n        }\n    }\n    render() {\n        let comp = null;\n        let type = this.props.type ? this.props.type.name : undefined;\n        let parsed = this.parseRangeValue(this.props.value);\n        switch (type) {\n            case ANSWER_TYPES.TIME:\n                comp = <TimeRange range={parsed} onChange={this.handleInputChange} />\n                break;\n            case ANSWER_TYPES.DATE:\n                let dateMin = parsed.min ? new Date(parsed.min) : undefined;\n                let dateMax = parsed.max ? new Date(parsed.max) : undefined;\n                comp = <DateRangePicker shortcuts={false} defaultValue={[dateMin, dateMax]} onChange={(selectedDates) => this.handleInputChange({ min: selectedDates[0] ? selectedDates[0].toString() : \"\", max: selectedDates[1] ? selectedDates[1].toString() : \"\" })} />\n                break;\n            case ANSWER_TYPES.NUMBER:\n                comp = <NumberRange range={parsed} onChange={d => this.handleInputChange} />\n                break;\n        }\n        return comp;\n    }\n}\n\n\n\ninterface NumberRangeProps {\n    range: RangeValue,\n    onChange: (range: RangeValue) => void,\n}\nconst defaultNumberRangeProps: NumberRangeProps = {\n    range: { min: \"\", max: \"\" },\n    onChange: () => { }\n}\n\nconst NumberRange = (props: NumberRangeProps = defaultNumberRangeProps) => {\n    const [minValue, setMin] = useState(props ? props.range.min : \"\");\n    const [maxValue, setMax] = useState(props ? props.range.max : \"\");\n    return (\n        <ButtonGroup>\n            <input className=\"form-control\" defaultValue={props && props.range.min && props.range.min.toString()}\n                onChange={e => {\n                    setMin(e.target.value);\n                    if (props && props.onChange) props.onChange({ min: minValue, max: maxValue })\n                }} placeholder=\"Minimum\" id=\"numberRange-min\" type=\"number\"></input>\n            <Divider></Divider>\n            <input className=\"form-control\" defaultValue={props && props.range.max && props.range.max.toString()} onChange={e => {\n                setMax(e.target.value);\n                if (props && props.onChange) props.onChange({ min: minValue, max: maxValue })\n            }} placeholder=\"Maximum\" id=\"numberRange-max\" type=\"number\"></input>\n        </ButtonGroup>\n    )\n}\n\ninterface TimeRangeProps {\n    range: RangeValue,\n    onChange: (range: RangeValue) => void\n}\nconst defaultTimeRangeProps = {\n    range: {\n        min: \"Sat Aug 31 2019 13:35:27 GMT-0230 (Newfoundland Daylight Time\",\n        max: \"Sat Aug 31 2019 13:35:27 GMT-0230 (Newfoundland Daylight Time\"\n    },\n    onChange: () => { }\n}\nconst TimeRange = (props: TimeRangeProps = defaultTimeRangeProps) => {\n    const [minValue, setMin] = useState(props ? props.range.min : undefined);\n    const [maxValue, setMax] = useState(props ? props.range.max : undefined);\n    console.log(maxValue);\n    console.log(minValue);\n    return (\n        <ButtonGroup className=\"bp3-dark\">\n            <TimePicker precision={TimePrecision.MINUTE} useAmPm={true} defaultValue={minValue ? new Date(minValue) : undefined} onChange={newTime => {\n                setMin(newTime.toLocaleDateString());\n                if (props.onChange) props.onChange({ min: minValue, max: maxValue })\n            }}></TimePicker>\n            <Divider />\n\n            <TimePicker precision={TimePrecision.MINUTE} useAmPm={true} defaultValue={maxValue ? new Date(maxValue) : undefined} onChange={newTime => {\n                setMax(newTime.toLocaleDateString());\n                props.onChange({ min: minValue, max: maxValue })\n            }}></TimePicker>\n        </ButtonGroup>\n    )\n}\n\ninterface ValInputProps {\n    type: QAValueType,\n    defaultValue?: any,\n    options?: AnswerOptions | undefined,\n    onChange: (newValue: any) => void\n}\ninterface ValInputState {\n\n}\nexport class ValInput extends React.Component<ValInputProps, ValInputState> {\n    static get defaultProps(): ValInputProps {\n        return {\n            defaultValue: \"\",\n            onChange: (e) => { console.log(e) },\n            type: { name: ANSWER_TYPES.STRING }\n        }\n    }\n    constructor(props: ValInputProps) {\n        super(props);\n        this.state = {\n\n        }\n    }\n    render() {\n        let comp = null;\n        switch (this.props.type.name) {\n            case ANSWER_TYPES.NUMBER:\n                comp = <input className=\"form-control\" type=\"number\" onChange={e => {\n                    if (this.props.onChange) this.props.onChange(e.target.value)\n                }}\n                />\n                break;\n            case ANSWER_TYPES.SELECT:\n                comp = <SelInput type={this.props.type.ofType} defaultValue={this.props.defaultValue} options={this.props.options} onChange={(newVal: any) => {\n                    if (this.props.onChange) this.props.onChange(newVal)\n                }} />\n\n                //TODO::\n                break;\n            case ANSWER_TYPES.BOOLEAN:\n                let opt = [{ value: \"true\", label: \"YES\" }, { value: \"false\", label: \"No\" }];\n                let def = opt.find(item => item.value === this.props.defaultValue);\n                comp = <Select styles={customStyles} defaultValue={def} options={opt} onChange={(newVal: any) => {\n                    if (this.props.onChange) this.props.onChange({ value: newVal })\n                }} />\n                break;\n            case ANSWER_TYPES.DATE:\n                let defaultDate = this.props.defaultValue ? new Date(this.props.defaultValue) : undefined;\n                comp = <DateInput formatDate={date => date.toLocaleDateString()}\n                    parseDate={str => new Date(str)}\n                    closeOnSelection={true} defaultValue={defaultDate} onChange={e => {\n                        if (this.props.onChange) this.props.onChange({ value: e.toLocaleDateString() })\n                    }\n                    } />\n                break;\n            case ANSWER_TYPES.RANGE:\n                if (this.props.type.ofType) {\n                    comp = <RangeInput\n                        value={this.props.defaultValue}\n                        type={this.props.type.ofType}\n                        onChange={e => {\n                            if (this.props.onChange) this.props.onChange({ value: e })\n                        }}\n                    />\n                }\n                break;\n            case ANSWER_TYPES.STRING:\n                comp = <input className=\"form-control\" type=\"text\" onChange={e => {\n                    if (this.props.onChange) this.props.onChange({ value: e.target.value })\n                }} />\n                break;\n            case ANSWER_TYPES.TIME:\n                let defaulttime = this.props.defaultValue ? new Date(this.props.defaultValue) : undefined;\n                comp = <TimePicker precision={TimePrecision.MINUTE} useAmPm={true} defaultValue={defaulttime} onChange={newTime => {\n                    if (this.props.onChange) this.props.onChange({ value: newTime.toString() })\n                }}></TimePicker>\n\n        }\n        return (\n            comp\n        )\n    }\n}\ninterface SelInputProps {\n    options?: AnswerOptions,\n    type?: QAValueType,\n    defaultValue?: string,\n    onChange: (data: any) => void\n}\ninterface SelInputState {\n\n}\nexport class SelInput extends React.Component<SelInputProps, SelInputState>{\n    constructor(props: SelInputProps) {\n        super(props);\n        this.state = {}\n    }\n    handleChange(d: any) {\n        console.log(d);\n        if (this.props.onChange) this.props.onChange(d);\n    }\n    render() {\n        let allOptions = [];\n        if (this.props.options) {\n            let { rootOptions, groups } = this.props.options.SortedOptions;\n            let groupOptions_: any = [];\n            let rootOptions_: any = []\n            if (groups && groups.length > 0) {\n                groupOptions_ = groups.map(item => {\n                    return ({\n                        label: item.name,\n                        options: item.members.map(i => ({ label: i.value, value: i.id }))\n                    })\n                })\n            }\n            rootOptions_ = rootOptions.map(i => ({ label: i.value, value: i.id }));\n            allOptions = [...groupOptions_, ...rootOptions_];\n        }\n        let defaultvalue = allOptions.find(item => item.value === this.props.defaultValue);\n        return (<Select styles={customStyles} options={allOptions} onChange={this.handleChange.bind(this)} defaultValue={defaultvalue} />)\n    }\n}"]},"metadata":{},"sourceType":"module"}