{"version":3,"sources":["../../dpform/dist/AnswerOptions.js","../../dpform/dist/answer.js","../../dpform/dist/questionSection.js","../../dpform/dist/answerTypes.js","../../dpform/dist/constants.js","../../dpform/dist/rootSection.js","components/constants.tsx","components/formtree.tsx","utils/index.tsx","utils/getRandomId.tsx","components/ValInput.tsx","components/AutofillCondition.tsx","components/AnswerType.tsx","components/AddOptions.tsx","components/DPFormItem.tsx","components/CreateCondition.tsx","components/CreateConditionModal.tsx","components/duplicateSettings.tsx","components/questionButton.tsx","components/sectionButton.tsx","components/section.tsx","components/Toolbar.tsx","components/SurveyForm.tsx","ui/login.tsx","App.tsx","serviceWorker.ts","index.tsx","../../dpform/dist/index.js","../../dpform/dist/condition.js","../../dpform/dist/util.js","../../dpform/dist/valueType.js","../../dpform/dist/duplicateSettings.js","../../dpform/dist/question.js"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","lodash_1","condition_1","valueType_1","AnswerOptions","optionsMap","optionGroupMap","options","opt_count","group_count","toJSON","a","default","mapValues","v","optionToJSON","optionGroupToJSON","fromJSON","d","r","optionFromJSON","id","name","appearingCondition","QACondition","members","map","item","prototype","get","grouplessOptions","values","filter","groupName","groups","rootOptions","enumerable","configurable","addOption","option","undefined","groupname","group","optionExistInGroup","find","push","addGroup","setValueForOption","newValue","deleteOption","opt","ind","findIndex","splice","assignOptionToGroup","optionIds","existingGroup","_loop_1","i","optionId","this_1","option_group","length","setConditionForOption","condition","setConditionForGroup","unassignGroup","ids","_this","forEach","opt_groupname","optgroup","changeGroupName","oldname","newname","members_ids","newGroup","clone","deleteGroup","setOptionTypeFor","newType","type","answerTypeFromJSON","answerTypeToJSON","Answer","content","setContent","setCondition","QAComparisonOperator","AnswerType","QAType","question_1","util_1","duplicateSettings_1","QuestionSection","customId","getRandomId","duplicatingSettings","isEnabled","duplicateTimes","QAQuestion","dupeSettingsToJSON","setID","setName","addContent","deleteContent","contentId","found","setDuplicatingSettings","dupe","ANSWER_TYPES","Constants","consts","count","getConstant","constname","cloneDeep","addConstant","constant","removeConstant","__generator","thisArg","body","f","y","t","g","_","label","sent","trys","ops","next","verb","Symbol","iterator","n","op","TypeError","call","done","pop","e","step","QORS","questionSection_1","RootSection","questions","sections","getFromPath","path","root","el","slice","descendants","callback","iterate","node","current","cont","concat","isNil","Entries","sectionPath","startIndex","fetchType","stack","rt","cloned","p","shift","section","QUESTION","data","SECTION","addQuestion","parentPath","q","Error","addSection","removeQuestion","questionId","parentSection","foundIndex","removeSection","sectionId","moveItem","prevPath","newPath","itemAtPath","newParentPath","oldParentPath","newParent","oldParent","removed","pos","index","handleSectionAdd","hasOwnProperty","dupeSettingsFromJSON","question","Iterator2","_i","_a","_b","_c","_d","ConstantDefinitions","props","state","isOpen","React","Component","FormTree","handleNodeClick","nodeData","_nodePath","handleNodeCollapse","handleNodeExpand","sectionNumber","selectedNodes","expandedNodes","def","icon","isSelected","includes","isExpanded","questionContent","childNodes","it","getNodeFromQuestionOrSection","form","hasCaret","toString","console","log","root_","contents","generateITNodeTree","onNodeClick","onNodeCollapse","onNodeExpand","className","Classes","ELEVATION_0","openModal","com","document","getElementById","createElement","setAttribute","appendChild","ReactDOM","render","destroyModal","unmountComponentAtNode","startingText","S4","Math","random","substring","RangeInput","range","split","min","max","transformed","TIME","DATE","NUMBER","onChange","comp","parsed","parseRangeValue","handleInputChange","dateMin","Date","dateMax","shortcuts","defaultValue","selectedDates","defaultNumberRangeProps","NumberRange","useState","minValue","setMin","maxValue","setMax","target","placeholder","defaultTimeRangeProps","TimeRange","precision","TimePrecision","MINUTE","useAmPm","newTime","toLocaleDateString","ValInput","STRING","SELECT","ofType","newVal","BOOLEAN","styles","customStyles","defaultDate","formatDate","date","parseDate","str","closeOnSelection","RANGE","defaulttime","SelInput","allOptions","rootOptions_","SortedOptions","groupOptions_","defaultvalue","options_","findValue","findOption","handleChange","bind","AutofillCondition","aConditions","autoAnswer","answeringConditions","setState","prevState","newConditions","selected","answerType","ifTrue","ifFalse","definedQuestions","onSubmit","editCondition","onCancel","answerCondition","setLiterals","checked","changeEnabled","Table","comparisonValueSelect","ifFalseOrTrue","key","editIfTrueFalseValue","Button","onClick","openConditionModal","size","faKey","removeAutofillCondition","faWindowClose","addAutoFillCondition","faPlusSquare","ValueSelectOptions","GEOLOCATION","OptionsForSelect","includedInRange","OptionsForRange","AnswerTypeInput","newAnswerType","shouldDisplaySecondSelect","shouldDisplayThirdSelect","optionsForSecondSelect","OptionsForThirdSelect","Row","Col","handleAnswerTypeChange","handleSecondSelectChange","handleThirdSelectChange","defaultProps","OPTION_OR_GROUP","QAAddOptions","GROUP","idOrname","literals","OPTION","constants","constantsOptions","ConstantsArray","fill","vertical","handleImportFromConstant","handleGroupAssignment","handleOptionTypeChange","handleAddNewOption","handleOptionDelete","handleConditionClick","handleOptionValueChange","handleAddGroup","handleGroupUnassignment","handleGroupNameChange","handleGroupDelete","handleGroupConditionClick","QAOptionSection","nextProps","nextState","creatableOptions","option_id","handleConditionEdit","style","color","width","generateAddGroupInput","QAAddGroupSection","memberids","action","removedid","removedValue","isMulti","Modal","setAppElement","TableFieldType","container","base","border","isFocused","background","transition","boxShadow","control","borderColor","brandColor","valueContainer","menu","zIndex","menuList","singleValue","input","DPFormItem","setIsRequired","isRequired","editAppearingCondition","newLiterals","setAppearingCondition","setQuestionContent","String","setAnswerType","setOptions","autoanswer","setAutoAnswer","newId","Card","CardHeader","CardBody","FormGroup","htmlFor","handleCustomIdChange","handleQuestionChange","defaultChecked","handleRequiredChange","handleOptionsChange","defaultOptionType","openAppearingConditionModal","handleAutoFillChange","CreateCondition","columns","dataField","text","setLiteralsSetter","literal","literalId","questionRef","comparisonOperator","comparisonValue","followingOperator","newIndex","get_new_index","forceUpdate","literalIndex","valueField","QuestionRef","ComparisonOperator","prop","accessProp","ComparisonValue","newComparisonValue","FollowingOperator","QAFollowingOperator","AND","OR","isEmpty","questions_","questionselect","selecteOption","handleDataChange","comparisionOPOptions_","valueType","allOperators","Equal","getOperatorForType","val","comparisonOpSelect","question_","getQuestion","qAnswerType","qOptions","followingOperatorOptions_","keys","followingOperatorSelect","moveLiteralUp","faArrowUp","removeLiteral","addLiteral","CreateConditionModal","createCondition_","errors","primaryButtonHandler","newCondition","checkIfValid","message","secondaryButtonHandler","createRef","top","left","right","bottom","marginRight","transform","minHeight","backgroundColor","overlay","ModalBody","ref","ModalFooter","DuplicateSettings","handleQuestionRefChange","handleNumberTimesChange","every","handleSave","typeOptions","classNames","ELEVATION_2","DARK","handleEnabledChange","menuContainerStyle","handleTypeChange","generateValueComponent","handleCancel","QuestionButton","setIsExpanded","paddingBottom","handleMoveUp","height","alignText","rightIcon","Badge","readablePath","questionTitle","handleDeletion","keepChildrenMounted","children","SectionButton","Group","align","Alignment","LEFT","handleSectionNameChange","sectionName","RIGHT","handleOpenConditionSettings","SectionC","handleSectionDuplicatingSettingsChange","l","handleSectionConditionChange","getReadablePath","childPath","handleDeleteChildSectionOrQuestion","handleSectionCustomIdChange","openConditionSettings","handleSectionClick","handleDuplicatingSettingsSave","handleDuplicatingSettingsCancel","toolbarItems","Toolbar","handleItemClick","fixedToTop","handleClick","SurveyForm","toasterRef","activeSection","activeSectionPath","loadForm","token","request","query","variables","formId","then","file","JSON","parse","iterated","getAllEntries","startSectionPath","first","returnbag","deleteid","path_","parent","newSectionPath","newSection","stringify","requestBody","saveFile","re","handleAddSection","handleAddQuestion","handleUpOneLevel","copy","toast","intent","Intent","SUCCESS","show","updateFromQuestion","union","selectedQuestion","newName","handleToolbarItemClick","handleRootNameChange","handleFormTreeNodeExpand","handleFormTreeNodeCollapse","handleFormTreeNodeClick","handleDuplicatingSettingsChange","handleSectionChange","handleDeleteQuestionOrSection","handleQuestionUpdate","position","margin","Login","usernameRef","passwordRef","email","password","res","onLoggedIn","Container","alignContent","handleLogin","App","isLoggedIn","Boolean","window","location","hostname","match","hist","createBrowserHistory","whyDidYouUpdate","groupByComment","collapseComponentGroups","history","from","to","navigator","serviceWorker","ready","registration","unregister","__export","m","Array","c","isValid","x","Clone","getClause","clause","deleteLiteral","API_URL","queryName","onErrorMessage","headers","Authorization","fetch","method","status","json","resData","catch","err","nu","join","ofTypeToJSON","ofTypeFromJSON","answer_1","AnswerOptions_1","autoAnswerToJSON","autoAnswerFromJSON","bool","cond","setCreationDate","creationDate","getTime","setAutoAnswerEnabled","addAutoAnswerCondition","aaCond","answerConditionToJSON","answerConditionFromJSON"],"mappings":"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","file":"static/js/main.ac2e4ebd.chunk.js","sourcesContent":["\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar lodash_1 = __importDefault(require(\"lodash\"));\n\nvar condition_1 = require(\"./condition\");\n\nvar valueType_1 = require(\"./valueType\");\n\nvar AnswerOptions =\n/** @class */\nfunction () {\n  function AnswerOptions() {\n    this.optionsMap = {};\n    this.optionGroupMap = {};\n    this.options = [];\n    this.opt_count = 0;\n    this.group_count = 0;\n  }\n\n  AnswerOptions.toJSON = function (a) {\n    return {\n      optionsMap: a && a.optionsMap ? lodash_1.default.mapValues(a.optionsMap, function (v) {\n        return optionToJSON(v);\n      }) : {},\n      optionGroupMap: a && a.optionGroupMap ? lodash_1.default.mapValues(a.optionGroupMap, function (v) {\n        return optionGroupToJSON(v);\n      }) : {}\n    };\n  };\n\n  AnswerOptions.fromJSON = function (d) {\n    var r = new AnswerOptions();\n    r.optionsMap = d.optionsMap ? lodash_1.default.mapValues(d.optionsMap, function (v) {\n      return optionFromJSON(v);\n    }) : {};\n    r.optionGroupMap = d.optionGroupMap ? lodash_1.default.mapValues(d.optionGroupMap, function (v) {\n      var rr = {\n        id: v.id,\n        name: v.name,\n        appearingCondition: condition_1.QACondition.fromJSON(v.appearingCondition),\n        members: v.members.map(function (item) {\n          return r.optionsMap[item.id];\n        })\n      };\n      return rr;\n    }) : {};\n    return r;\n  };\n\n  Object.defineProperty(AnswerOptions.prototype, \"SortedOptions\", {\n    get: function get() {\n      var grouplessOptions = Object.values(this.optionsMap).filter(function (item) {\n        return !item.groupName;\n      });\n      var groups = Object.values(this.optionGroupMap);\n      return {\n        groups: groups,\n        rootOptions: grouplessOptions\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  AnswerOptions.prototype.addOption = function (option) {\n    if (!option) {\n      option = {\n        id: 'opt-' + this.opt_count,\n        value: undefined,\n        groupName: undefined\n      };\n    }\n\n    this.optionsMap[option.id] = option;\n    var groupname = option.groupName;\n\n    if (groupname) {\n      var group = this.optionGroupMap[groupname];\n\n      if (!group) {\n        group = {\n          id: 'opt-grp-' + this.group_count,\n          name: groupname,\n          appearingCondition: undefined,\n          members: [option]\n        };\n        this.optionGroupMap[groupname] = group;\n        this.group_count++;\n      }\n\n      var optionExistInGroup = null;\n\n      if (option && option.id) {\n        optionExistInGroup = group.members.find(function (item) {\n          if (option) {\n            return item.id === option.id;\n          }\n\n          return false;\n        });\n      }\n\n      if (!optionExistInGroup) {\n        group.members.push(option);\n      }\n    }\n\n    this.opt_count++;\n    return this;\n  };\n\n  AnswerOptions.prototype.addGroup = function (groupname) {\n    var group = {\n      id: 'opt-grp' + this.group_count,\n      name: groupname || \"group-\" + this.group_count,\n      appearingCondition: undefined,\n      members: []\n    };\n    this.optionGroupMap[group.name] = group;\n    this.group_count++;\n    return group;\n  };\n\n  AnswerOptions.prototype.setValueForOption = function (id, newValue) {\n    var option = this.optionsMap[id];\n\n    if (option) {\n      option.value = newValue;\n    }\n\n    return this;\n  };\n\n  AnswerOptions.prototype.deleteOption = function (id) {\n    var opt = this.optionsMap[id];\n\n    if (opt) {\n      delete this.optionsMap[id];\n      var groupname = opt.groupName;\n\n      if (groupname) {\n        var group = this.optionGroupMap[groupname];\n\n        if (group) {\n          var ind = group.members.findIndex(function (item) {\n            return item.id === id;\n          });\n\n          if (ind > -1) {\n            group.members.splice(ind, 1);\n          }\n        }\n      }\n    }\n\n    return this;\n  };\n\n  AnswerOptions.prototype.assignOptionToGroup = function (optionIds, groupName) {\n    var existingGroup = this.optionGroupMap[groupName];\n\n    if (!existingGroup) {\n      existingGroup = this.addGroup(groupName);\n      this.optionGroupMap[existingGroup.name] = existingGroup;\n    }\n\n    var _loop_1 = function _loop_1(i) {\n      var optionId = optionIds[i];\n      var option = this_1.optionsMap[optionId];\n      var option_group = option.groupName && this_1.optionGroupMap[option.groupName];\n\n      if (existingGroup.members.find(function (item) {\n        return item.id === optionId;\n      })) {\n        return \"continue\";\n      } // unassign from the group the option is in\n\n\n      if (option_group) {\n        var find = option_group.members.findIndex(function (item) {\n          return item.id === option.id;\n        });\n\n        if (find > -1) {\n          option_group.members.splice(find, 1);\n        }\n      }\n\n      option.groupName = existingGroup.name;\n      existingGroup.members.push(option);\n    };\n\n    var this_1 = this;\n\n    for (var i = 0; i < optionIds.length; i++) {\n      _loop_1(i);\n    }\n\n    return this;\n  };\n\n  AnswerOptions.prototype.setConditionForOption = function (optionId, condition) {\n    var option = this.optionsMap[optionId];\n\n    if (option) {\n      option.appearingCondition = condition;\n    }\n\n    return this;\n  };\n\n  AnswerOptions.prototype.setConditionForGroup = function (groupname, condition) {\n    var group = this.optionGroupMap[groupname];\n\n    if (group) {\n      group.appearingCondition = condition;\n    }\n\n    return this;\n  };\n\n  AnswerOptions.prototype.unassignGroup = function (ids) {\n    var _this = this;\n\n    ids.forEach(function (id) {\n      var option = _this.optionsMap[id];\n      var opt_groupname = option.groupName;\n\n      if (option && opt_groupname) {\n        var optgroup = _this.optionGroupMap[opt_groupname];\n\n        if (optgroup) {\n          var ind = optgroup.members.findIndex(function (item) {\n            return item.id === id;\n          });\n          optgroup.members.splice(ind, 1);\n        }\n      }\n\n      if (option) {\n        option.groupName = undefined;\n      }\n    });\n  };\n\n  AnswerOptions.prototype.changeGroupName = function (oldname, newname) {\n    var _this = this;\n\n    var group = this.optionGroupMap[oldname];\n    var members_ids = group.members.map(function (item) {\n      return item.id;\n    });\n\n    if (members_ids) {\n      members_ids.forEach(function (id) {\n        var option = _this.optionsMap[id];\n\n        if (option) {\n          option.groupName = newname;\n        }\n      });\n    }\n\n    if (group) {\n      group.name = newname;\n      var newGroup = lodash_1.default.clone(group);\n      delete this.optionGroupMap[oldname];\n      this.optionGroupMap[newname] = newGroup;\n    }\n  };\n\n  AnswerOptions.prototype.deleteGroup = function (name) {\n    var _this = this;\n\n    var group = this.optionGroupMap[name];\n\n    if (!group) {\n      return this;\n    }\n\n    var members_ids = group.members.map(function (item) {\n      return item.id;\n    });\n\n    if (members_ids) {\n      members_ids.forEach(function (id) {\n        var option = _this.optionsMap[id];\n\n        if (option) {\n          option.groupName = undefined;\n        }\n      });\n    }\n\n    delete this.optionGroupMap[name];\n  };\n\n  AnswerOptions.prototype.setOptionTypeFor = function (optionId, newType) {\n    var opt = this.optionsMap[optionId];\n\n    if (opt) {\n      opt.type = newType;\n      opt.value = undefined;\n    }\n  };\n\n  return AnswerOptions;\n}();\n\nexports.AnswerOptions = AnswerOptions;\n\nfunction optionGroupToJSON(a) {\n  return {\n    id: a.id,\n    name: a.name,\n    appearingCondition: condition_1.QACondition.toJSON(a.appearingCondition),\n    members: a.members.map(function (item) {\n      return optionToJSON(item);\n    })\n  };\n}\n\nexports.optionGroupToJSON = optionGroupToJSON;\n\nfunction optionFromJSON(a) {\n  var option = {\n    groupName: a.groupName,\n    appearingCondition: condition_1.QACondition.fromJSON(a.appearingCondition),\n    id: a.id,\n    value: a.value,\n    type: valueType_1.answerTypeFromJSON(a.type)\n  };\n  return option;\n}\n\nexports.optionFromJSON = optionFromJSON;\n\nfunction optionToJSON(a) {\n  return {\n    appearingCondition: condition_1.QACondition.toJSON(a.appearingCondition),\n    type: a.type ? valueType_1.answerTypeToJSON(a.type) : undefined,\n    id: a.id,\n    value: a.value,\n    groupName: a.groupName\n  };\n}\n\nexports.optionToJSON = optionToJSON;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Answer =\n/** @class */\nfunction () {\n  function Answer(content) {\n    this.content = content;\n  }\n\n  Object.defineProperty(Answer.prototype, \"Condition\", {\n    get: function get() {\n      return this.condition;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Answer.prototype, \"Content\", {\n    get: function get() {\n      return this.content;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Answer.prototype.setContent = function (content) {\n    this.content = content;\n    return this;\n  };\n\n  Answer.prototype.setCondition = function (condition) {\n    this.condition = condition;\n    return this;\n  };\n\n  return Answer;\n}();\n\nexports.Answer = Answer;\nvar QAComparisonOperator;\n\n(function (QAComparisonOperator) {\n  QAComparisonOperator[\"Less_Than_Or_Equal\"] = \"<=\";\n  QAComparisonOperator[\"Greater_Than_Or_Equal\"] = \">=\";\n  QAComparisonOperator[\"Less_Than\"] = \"<\";\n  QAComparisonOperator[\"Greater_Than\"] = \">\";\n  QAComparisonOperator[\"Equal\"] = \"==\";\n})(QAComparisonOperator = exports.QAComparisonOperator || (exports.QAComparisonOperator = {}));\n\nvar AnswerType;\n\n(function (AnswerType) {\n  AnswerType[\"String\"] = \"String\";\n  AnswerType[\"Boolean\"] = \"Boolean\";\n  AnswerType[\"Date\"] = \"Date\";\n  AnswerType[\"Time\"] = \"Time\";\n  AnswerType[\"Number\"] = \"Number\";\n  AnswerType[\"Select\"] = \"Select\";\n})(AnswerType = exports.AnswerType || (exports.AnswerType = {}));\n\nvar QAType;\n\n(function (QAType) {\n  QAType[\"String\"] = \"string\";\n  QAType[\"html\"] = \"html\";\n})(QAType = exports.QAType || (exports.QAType = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar question_1 = require(\"./question\");\n\nvar condition_1 = require(\"./condition\");\n\nvar util_1 = require(\"./util\");\n\nvar duplicateSettings_1 = require(\"./duplicateSettings\");\n\nvar QuestionSection =\n/** @class */\nfunction () {\n  function QuestionSection() {\n    this.customId = '';\n    this.id = util_1.getRandomId('ss-');\n    this.duplicatingSettings = {\n      condition: undefined,\n      isEnabled: false,\n      duplicateTimes: {\n        value: '',\n        type: 'number'\n      }\n    };\n    this.content = [];\n    this.appearingCondition = new condition_1.QACondition();\n  }\n\n  QuestionSection.toJSON = function (a) {\n    return {\n      name: a.name,\n      id: a.id,\n      appearingCondition: condition_1.QACondition.toJSON(a.appearingCondition),\n      customId: a.customId,\n      content: a.content.map(function (item) {\n        if (item instanceof QuestionSection) {\n          return QuestionSection.toJSON(item);\n        } else if (item instanceof question_1.QAQuestion) {\n          return question_1.QAQuestion.toJSON(item);\n        }\n      }),\n      duplicatingSettings: duplicateSettings_1.dupeSettingsToJSON(a.duplicatingSettings)\n    };\n  };\n\n  QuestionSection.prototype.setID = function (id) {\n    this.id = id;\n    return this;\n  };\n\n  QuestionSection.prototype.setName = function (name) {\n    this.name = name;\n    return this;\n  };\n\n  QuestionSection.prototype.setContent = function (content) {\n    this.content = content;\n    return this;\n  };\n\n  QuestionSection.prototype.addContent = function (content) {\n    this.content.push(content);\n    return this;\n  };\n\n  QuestionSection.prototype.deleteContent = function (contentId) {\n    var found = this.content.findIndex(function (item) {\n      return item.id === contentId;\n    });\n\n    if (found > -1) {\n      this.content.splice(found, 1);\n    }\n  };\n\n  QuestionSection.prototype.setDuplicatingSettings = function (dupe) {\n    this.duplicatingSettings = dupe;\n    return this;\n  };\n\n  return QuestionSection;\n}();\n\nexports.QuestionSection = QuestionSection;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ANSWER_TYPES;\n\n(function (ANSWER_TYPES) {\n  ANSWER_TYPES[\"BOOLEAN\"] = \"boolean\";\n  ANSWER_TYPES[\"STRING\"] = \"string\";\n  ANSWER_TYPES[\"DATE\"] = \"date\";\n  ANSWER_TYPES[\"TIME\"] = \"time\";\n  ANSWER_TYPES[\"NUMBER\"] = \"number\";\n  ANSWER_TYPES[\"RANGE\"] = \"range\";\n  ANSWER_TYPES[\"SELECT\"] = \"select\";\n  ANSWER_TYPES[\"GEOLOCATION\"] = \"geolocation\";\n})(ANSWER_TYPES = exports.ANSWER_TYPES || (exports.ANSWER_TYPES = {}));","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar lodash_1 = __importDefault(require(\"lodash\"));\n\nvar Constants =\n/** @class */\nfunction () {\n  function Constants() {\n    this.consts = {};\n    this.count = 0;\n  }\n\n  Constants.fromJSON = function (a) {};\n\n  Constants.toJSON = function (a) {};\n\n  Object.defineProperty(Constants.prototype, \"ConstantsArray\", {\n    get: function get() {\n      return Object.values(this.consts);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Constants.prototype.getConstant = function (constname) {\n    return lodash_1.default.cloneDeep(this.consts[constname]);\n  };\n\n  Constants.prototype.addConstant = function (constant) {\n    if (!constant) {\n      constant = {\n        name: '',\n        id: 'constant-' + this.count,\n        type: undefined,\n        value: ''\n      };\n    }\n\n    this.consts[constant.id] = constant;\n    return this;\n  };\n\n  Constants.prototype.removeConstant = function (id) {\n    if (this.consts[id]) {\n      delete this.consts[id];\n    }\n\n    return this;\n  };\n\n  return Constants;\n}();\n\nexports.Constants = Constants;","\"use strict\";\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar lodash_1 = require(\"lodash\");\n\nvar condition_1 = require(\"./condition\");\n\nvar duplicateSettings_1 = require(\"./duplicateSettings\");\n\nvar question_1 = require(\"./question\");\n\nvar questionSection_1 = require(\"./questionSection\");\n\nvar util_1 = require(\"./util\");\n\nvar RootSection =\n/** @class */\nfunction () {\n  function RootSection() {\n    this.questions = {};\n    this.sections = {};\n    this.content = [];\n    this.name = '';\n    this.id = util_1.getRandomId('root-');\n  }\n\n  RootSection.getFromPath = function (path, root) {\n    var el = root[path[0]];\n\n    if (path.length === 1) {\n      return el;\n    }\n\n    if (el.content) {\n      return RootSection.getFromPath(path.slice(1), el.content);\n    }\n  };\n\n  RootSection.prototype.descendants = function (callback) {\n    var iterate = function iterate(node, path) {\n      for (var i = 0; i < node.content.length; i++) {\n        var current = node.content[i];\n\n        if (current) {\n          var cont = callback(current, path.concat(i), node);\n\n          if (current instanceof questionSection_1.QuestionSection && (lodash_1.isNil(cont) || cont === true)) {\n            iterate(current, path.concat(i));\n          }\n        }\n      }\n    };\n\n    iterate(this, [0]);\n  };\n\n  RootSection.Entries = function (root, sectionPath, startIndex, fetchType) {\n    var stack = [];\n    var rt = [];\n    var cloned = sectionPath.slice(0);\n    stack.push({\n      path: sectionPath,\n      startIndex: startIndex\n    });\n\n    for (var i = 0; i < sectionPath.length - 1; i++) {\n      stack.push({\n        path: cloned.slice(0, cloned.length - 1),\n        startIndex: cloned[cloned.length - 1] + 1\n      });\n      cloned.pop();\n    }\n\n    while (stack.length > 0) {\n      var p = stack.shift();\n\n      if (p) {\n        var section = RootSection.getFromPath(p.path, [root]);\n\n        if (section) {\n          for (var i = p.startIndex; i < section.content.length; i++) {\n            var item = section.content[i];\n\n            if (item instanceof question_1.QAQuestion) {\n              if (!fetchType || fetchType === QORS.QUESTION) {\n                rt.push({\n                  path: p.path.concat(i),\n                  data: item\n                });\n              }\n            } else {\n              if (!fetchType || fetchType === QORS.SECTION) {\n                rt.push({\n                  path: p.path.concat(i),\n                  data: item\n                });\n              }\n\n              stack.push({\n                path: p.path.concat(i),\n                startIndex: 0\n              });\n            }\n          }\n        }\n      }\n    }\n\n    return rt;\n  };\n\n  RootSection.prototype.addQuestion = function (parentPath, q) {\n    if (!q) {\n      q = [new question_1.QAQuestion()];\n    }\n\n    var section = RootSection.getFromPath(parentPath, [this]);\n\n    for (var i = 0; i < q.length; i++) {\n      var current = q[i];\n\n      if (this.questions[current.id]) {\n        throw new Error('Question id conflict');\n      }\n\n      this.questions[current.id] = current;\n\n      if (section && !(section instanceof question_1.QAQuestion)) {\n        section.content.push(current);\n      }\n    }\n\n    return this;\n  };\n\n  RootSection.prototype.addSection = function (parentPath, q) {\n    if (!q) {\n      q = [new questionSection_1.QuestionSection()];\n    }\n\n    var section = RootSection.getFromPath(parentPath, [this]);\n\n    for (var i = 0; i < q.length; i++) {\n      var current = q[i];\n\n      if (this.questions[current.id]) {\n        throw new Error('Section id conflict');\n      }\n\n      this.sections[current.id] = current;\n\n      if (section && !(section instanceof question_1.QAQuestion)) {\n        section.content.push(current);\n      }\n    }\n\n    return this;\n  };\n\n  RootSection.prototype.removeQuestion = function (questionId, path) {\n    var parentSection = RootSection.getFromPath(path.slice(0, path.length - 1), [this]);\n\n    if (parentSection && !(parentSection instanceof question_1.QAQuestion)) {\n      var foundIndex = parentSection.content.findIndex(function (item) {\n        return item.id === questionId;\n      });\n\n      if (foundIndex > -1) {\n        parentSection.content.splice(foundIndex, 1);\n        delete this.questions[questionId];\n      }\n    }\n\n    return this;\n  };\n\n  RootSection.prototype.removeSection = function (sectionId, path) {\n    var parentSection = RootSection.getFromPath(path.slice(0, path.length - 1), [this]);\n\n    if (parentSection && !(parentSection instanceof question_1.QAQuestion)) {\n      var foundIndex = parentSection.content.findIndex(function (item) {\n        return item.id === sectionId;\n      });\n\n      if (foundIndex > -1) {\n        parentSection.content.splice(foundIndex, 1);\n        delete this.sections[sectionId];\n      }\n    }\n\n    return this;\n  };\n\n  RootSection.prototype.moveItem = function (prevPath, newPath) {\n    var itemAtPath = RootSection.getFromPath(prevPath, [this]);\n    var newParentPath = newPath.slice(0, newPath.length - 1);\n    var oldParentPath = prevPath.slice(0, prevPath.length - 1);\n    var newParent = RootSection.getFromPath(newParentPath, [this]);\n    var oldParent = RootSection.getFromPath(oldParentPath, [this]);\n\n    if (oldParent && newParent && itemAtPath) {\n      var foundIndex = oldParent.content.findIndex(function (item) {\n        return item.id === itemAtPath.id;\n      });\n\n      if (foundIndex > -1 && !(oldParent instanceof question_1.QAQuestion)) {\n        var removed = oldParent.content.splice(foundIndex, 1);\n\n        if (!(newParent instanceof question_1.QAQuestion)) {\n          var pos = newPath[newPath.length - 1];\n\n          if (removed[0] instanceof questionSection_1.QuestionSection) {\n            newParent.content.splice(pos, 0, this.sections[removed[0].id]);\n          } else if (removed[0] instanceof question_1.QAQuestion) {\n            newParent.content.splice(pos, 0, this.questions[removed[0].id]);\n          }\n        }\n\n        return this;\n      }\n    }\n  };\n\n  RootSection.toJSON = function (a) {\n    var r = {\n      id: a.id,\n      name: a.name,\n      content: a.content.map(function (item) {\n        if (item instanceof questionSection_1.QuestionSection) {\n          return questionSection_1.QuestionSection.toJSON(item);\n        } else if (item instanceof question_1.QAQuestion) {\n          return question_1.QAQuestion.toJSON(item);\n        }\n      })\n    };\n    return r;\n  };\n\n  RootSection.fromJSON = function (a) {\n    var r = new RootSection();\n    r.id = a.id;\n    r.name = a.name;\n    var path = [0];\n\n    var handleSectionAdd = function handleSectionAdd(a, parentPath, index) {\n      if (a.hasOwnProperty('content')) {\n        var section = new questionSection_1.QuestionSection();\n        section.id = a.id;\n        section.name = a.name;\n        section.customId = a.customId || '';\n        if (a.customId) section.customId = a.customId;\n\n        if (a.appearingCondition) {\n          section.appearingCondition = condition_1.QACondition.fromJSON(a.appearingCondition);\n        }\n\n        section.duplicatingSettings = duplicateSettings_1.dupeSettingsFromJSON(a.duplicatingSettings);\n        r.addSection(parentPath, [section]);\n        a.content.forEach(function (item, i) {\n          return handleSectionAdd(item, parentPath.concat(index), i);\n        });\n      } else {\n        var question = question_1.QAQuestion.fromJSON(a);\n        r.addQuestion(parentPath, [question]);\n      }\n    };\n\n    a.content.forEach(function (item, index) {\n      return handleSectionAdd(item, path, index);\n    });\n    return r;\n  };\n\n  RootSection.prototype.Iterator2 = function (sectionPath, index, fetchType) {\n    var section, current, _i, _a, q, _b, _c, q;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          if (sectionPath.length === 0) {\n            return [2\n            /*return*/\n            , true];\n          }\n\n          section = RootSection.getFromPath(sectionPath, [this]);\n          if (!(section && !(section instanceof question_1.QAQuestion))) return [3\n          /*break*/\n          , 16];\n          _d.label = 1;\n\n        case 1:\n          if (!(index < section.content.length)) return [3\n          /*break*/\n          , 11];\n          current = section.content[index];\n          if (!(current instanceof question_1.QAQuestion)) return [3\n          /*break*/\n          , 4];\n          if (!(fetchType === QORS.QUESTION || !fetchType)) return [3\n          /*break*/\n          , 3];\n          return [4\n          /*yield*/\n          , {\n            path: sectionPath.concat(index),\n            data: current\n          }];\n\n        case 2:\n          _d.sent();\n\n          _d.label = 3;\n\n        case 3:\n          index++;\n          return [3\n          /*break*/\n          , 10];\n\n        case 4:\n          if (!(current instanceof questionSection_1.QuestionSection)) return [3\n          /*break*/\n          , 10];\n          if (!(fetchType === QORS.SECTION || !fetchType)) return [3\n          /*break*/\n          , 6];\n          return [4\n          /*yield*/\n          , {\n            path: sectionPath.concat(index),\n            data: current\n          }];\n\n        case 5:\n          _d.sent();\n\n          _d.label = 6;\n\n        case 6:\n          index++;\n          _i = 0, _a = this.Iterator2(sectionPath.concat(index), 0, fetchType);\n          _d.label = 7;\n\n        case 7:\n          if (!(_i < _a.length)) return [3\n          /*break*/\n          , 10];\n          q = _a[_i];\n          return [4\n          /*yield*/\n          , q];\n\n        case 8:\n          _d.sent();\n\n          _d.label = 9;\n\n        case 9:\n          _i++;\n          return [3\n          /*break*/\n          , 7];\n\n        case 10:\n          return [3\n          /*break*/\n          , 1];\n\n        case 11:\n          if (!(sectionPath && sectionPath.length > 0)) return [3\n          /*break*/\n          , 15];\n          index = sectionPath[sectionPath.length - 1] + 1;\n          _b = 0, _c = this.Iterator2(sectionPath, index, fetchType);\n          _d.label = 12;\n\n        case 12:\n          if (!(_b < _c.length)) return [3\n          /*break*/\n          , 15];\n          q = _c[_b];\n          return [4\n          /*yield*/\n          , q];\n\n        case 13:\n          _d.sent();\n\n          _d.label = 14;\n\n        case 14:\n          _b++;\n          return [3\n          /*break*/\n          , 12];\n\n        case 15:\n          return [2\n          /*return*/\n          , true];\n\n        case 16:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  };\n\n  return RootSection;\n}();\n\nexports.RootSection = RootSection;\nvar QORS;\n\n(function (QORS) {\n  QORS[QORS[\"QUESTION\"] = 1] = \"QUESTION\";\n  QORS[QORS[\"SECTION\"] = 2] = \"SECTION\";\n})(QORS = exports.QORS || (exports.QORS = {}));","import { Drawer } from \"@blueprintjs/core\";\r\nimport React from \"react\";\r\n\r\n\r\n\r\n\r\ninterface ConstantDefinitionsState {\r\n\r\n}\r\ninterface ConstantDefinitionsProps {\r\n    isOpen: boolean,\r\n}\r\nexport class ConstantDefinitions extends React.Component<ConstantDefinitionsProps, ConstantDefinitionsState>{\r\n\r\n    constructor(props: ConstantDefinitionsProps) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render() {\r\n         return (\r\n            <Drawer isOpen={this.props.isOpen}>\r\n\r\n            </Drawer>\r\n        )\r\n    }\r\n}","\r\nimport { ITreeNode, Tree, Classes } from \"@blueprintjs/core\";\r\n\r\nimport React from \"react\";\r\nimport { RootSection, QuestionSection, QAQuestion } from \"dpform\";\r\n\r\n\r\n\r\n\r\ninterface FormTreeState {\r\n}\r\ninterface FormTreeProps {\r\n    root_: RootSection,\r\n    selectedNodes: string[],\r\n    expandedNodes: string[],\r\n    handleNodeClick?: (nodeData: ITreeNode, _nodePath: number[], e: React.MouseEvent<HTMLElement>) => void,\r\n    handleNodeCollapse?: (nodeData: ITreeNode, _nodePath: number[], e: React.MouseEvent<HTMLElement>) => void,\r\n    handleNodeExpand?: (nodeData: ITreeNode, _nodePath: number[], e: React.MouseEvent<HTMLElement>) => void,\r\n\r\n}\r\nexport class FormTree extends React.Component<FormTreeProps, FormTreeState>{\r\n    constructor(props: FormTreeProps) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    private handleNodeClick = (nodeData: ITreeNode, _nodePath: number[], e: React.MouseEvent<HTMLElement>) => {\r\n        if (this.props.handleNodeClick) this.props.handleNodeClick(nodeData, _nodePath, e);\r\n    };\r\n\r\n    private handleNodeCollapse = (nodeData: ITreeNode, _nodePath: number[], e: React.MouseEvent<HTMLElement>) => {\r\n        if (this.props.handleNodeCollapse) this.props.handleNodeCollapse(nodeData, _nodePath, e);\r\n    };\r\n\r\n    private handleNodeExpand = (nodeData: ITreeNode, _nodePath: number[], e: React.MouseEvent<HTMLElement>) => {\r\n        if (this.props.handleNodeExpand) this.props.handleNodeExpand(nodeData, _nodePath, e);\r\n    };\r\n    getNodeFromQuestionOrSection(item: QuestionSection | QAQuestion, sectionNumber: string, selectedNodes: string[], expandedNodes: string[]) {\r\n        let def: ITreeNode = {\r\n            id: item.id,\r\n            icon: undefined,\r\n            label: \"\",\r\n            isSelected: selectedNodes.includes(item.id),\r\n            isExpanded: expandedNodes.includes(item.id)\r\n        };\r\n        if (item instanceof QAQuestion) {\r\n            def.icon = \"document\"\r\n            def.label = `${sectionNumber} ${item.questionContent.content||\"Question\"}`;\r\n        }\r\n        else if (item instanceof QuestionSection) {\r\n            def.icon = \"folder-close\"\r\n            def.label = `${sectionNumber} ${item.name || \"Section\"}`;\r\n            def.childNodes = item.content.map((it, ind) => this.getNodeFromQuestionOrSection(it, sectionNumber + \".\" + (ind + 1), selectedNodes, expandedNodes))\r\n\r\n        }\r\n        return def;\r\n    }\r\n\r\n    generateITNodeTree(form: RootSection, selectedNodes: string[], expandedNodes: string[]): ITreeNode[] {\r\n        let root: ITreeNode = {\r\n            id: form.id,\r\n            hasCaret: true,\r\n            icon: \"folder-close\",\r\n            label: \"Root\",\r\n            isExpanded: expandedNodes.includes(form.id),\r\n            isSelected: selectedNodes.includes(form.id),\r\n            childNodes: form.content.map((it: QAQuestion | QuestionSection, ind: number) => this.getNodeFromQuestionOrSection(it, (ind + 1).toString(), selectedNodes, expandedNodes))\r\n        }\r\n        return [root];\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        console.log(this.props.root_);\r\n        return <Tree contents={this.generateITNodeTree(this.props.root_, this.props.selectedNodes, this.props.expandedNodes)}\r\n            onNodeClick={this.handleNodeClick}\r\n            onNodeCollapse={this.handleNodeCollapse}\r\n            onNodeExpand={this.handleNodeExpand}\r\n            className={Classes.ELEVATION_0} />\r\n\r\n    }\r\n}\r\n","import { ReactElement } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport function openModal(com: ReactElement) {\r\n    let el = document.getElementById(\"dp-modal\");\r\n    if (!el) {\r\n        el = document.createElement(\"div\");\r\n        el.setAttribute(\"id\", \"dp-modal\")\r\n        document.body.appendChild(el)\r\n    }\r\n    ReactDOM.render(com, el);\r\n}\r\n\r\nexport function destroyModal() {\r\n    let el = document.getElementById(\"dp-modal\");\r\n    if (el) ReactDOM.unmountComponentAtNode(el);\r\n\r\n}","export function getRandomId(startingText?: string) {\r\n    if (!startingText)\r\n        startingText = \"\";\r\n    var S4 = function () {\r\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return startingText + (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { TimePicker, TimePrecision, DateRangePicker, DateInput } from \"@blueprintjs/datetime\"\r\nimport { ButtonGroup, Divider } from \"@blueprintjs/core\";\r\nimport Select from \"react-select\"\r\nimport { customStyles } from \"./DPFormItem\";\r\nimport {IValueType, ANSWER_TYPES, AnswerOptions, IOptionGroup, IOption} from \"dpform\";\r\n\r\ninterface RangeValue {\r\n    min: string | undefined\r\n    max: string | undefined\r\n}\r\n\r\n\r\ninterface RangeInputProps {\r\n    type: IValueType,\r\n    value: string,\r\n    onChange: (newRange: string) => void\r\n}\r\n\r\ninterface RangeInputState {\r\n\r\n}\r\nexport class RangeInput extends React.Component<RangeInputProps, RangeInputState>{\r\n    constructor(props: RangeInputProps) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    parseRangeValue(range: string): RangeValue {\r\n        let d = range.split(\"-\")\r\n        return { min: d[0], max: d[1] }\r\n    }\r\n\r\n    handleInputChange(data: RangeValue) {\r\n        let transformed = data.min + \"-\" + data.max;\r\n        switch (this.props.type && this.props.type.name) {\r\n            //necessary transforms to be done here\r\n            case ANSWER_TYPES.TIME:\r\n                if (this.props.onChange) this.props.onChange(transformed);\r\n                break;\r\n            case ANSWER_TYPES.DATE:\r\n                if (this.props.onChange) this.props.onChange(transformed);\r\n                break;\r\n            case ANSWER_TYPES.NUMBER:\r\n                if (this.props.onChange) this.props.onChange(transformed);\r\n                break;\r\n            default:\r\n                if (this.props.onChange) this.props.onChange(transformed);\r\n\r\n                break;\r\n\r\n        }\r\n    }\r\n    render() {\r\n        let comp = null;\r\n        let type = this.props.type ? this.props.type.name : undefined;\r\n        let parsed = this.parseRangeValue(this.props.value);\r\n        switch (type) {\r\n            case ANSWER_TYPES.TIME:\r\n                comp = <TimeRange range={parsed} onChange={this.handleInputChange} />\r\n                break;\r\n            case ANSWER_TYPES.DATE:\r\n                let dateMin = parsed.min ? new Date(parsed.min) : undefined;\r\n                let dateMax = parsed.max ? new Date(parsed.max) : undefined;\r\n                comp = <DateRangePicker shortcuts={false} defaultValue={[dateMin, dateMax]} onChange={(selectedDates) => this.handleInputChange({ min: selectedDates[0] ? selectedDates[0].toString() : \"\", max: selectedDates[1] ? selectedDates[1].toString() : \"\" })} />\r\n                break;\r\n            case ANSWER_TYPES.NUMBER:\r\n                comp = <NumberRange range={parsed} onChange={d => this.handleInputChange} />\r\n                break;\r\n        }\r\n        return comp;\r\n    }\r\n}\r\n\r\n\r\n\r\ninterface NumberRangeProps {\r\n    range: RangeValue,\r\n    onChange: (range: RangeValue) => void,\r\n}\r\nconst defaultNumberRangeProps: NumberRangeProps = {\r\n    range: { min: \"\", max: \"\" },\r\n    onChange: () => { }\r\n}\r\n\r\nconst NumberRange = (props: NumberRangeProps = defaultNumberRangeProps) => {\r\n    const [minValue, setMin] = useState(props ? props.range.min : \"\");\r\n    const [maxValue, setMax] = useState(props ? props.range.max : \"\");\r\n    return (\r\n        <ButtonGroup>\r\n            <input className=\"form-control\" defaultValue={props && props.range.min && props.range.min.toString()}\r\n                onChange={e => {\r\n                    setMin(e.target.value);\r\n                    if (props && props.onChange) props.onChange({ min: minValue, max: maxValue })\r\n                }} placeholder=\"Minimum\" id=\"numberRange-min\" type=\"number\"></input>\r\n            <Divider></Divider>\r\n            <input className=\"form-control\" defaultValue={props && props.range.max && props.range.max.toString()} onChange={e => {\r\n                setMax(e.target.value);\r\n                if (props && props.onChange) props.onChange({ min: minValue, max: maxValue })\r\n            }} placeholder=\"Maximum\" id=\"numberRange-max\" type=\"number\"></input>\r\n        </ButtonGroup>\r\n    )\r\n}\r\n\r\ninterface TimeRangeProps {\r\n    range: RangeValue,\r\n    onChange: (range: RangeValue) => void\r\n}\r\nconst defaultTimeRangeProps = {\r\n    range: {\r\n        min: \"Sat Aug 31 2019 13:35:27 GMT-0230 (Newfoundland Daylight Time\",\r\n        max: \"Sat Aug 31 2019 13:35:27 GMT-0230 (Newfoundland Daylight Time\"\r\n    },\r\n    onChange: () => { }\r\n}\r\nconst TimeRange = (props: TimeRangeProps = defaultTimeRangeProps) => {\r\n    const [minValue, setMin] = useState(props ? props.range.min : undefined);\r\n    const [maxValue, setMax] = useState(props ? props.range.max : undefined);\r\n    console.log(maxValue);\r\n    console.log(minValue);\r\n    return (\r\n        <ButtonGroup className=\"bp3-dark\">\r\n            <TimePicker precision={TimePrecision.MINUTE} useAmPm={true} defaultValue={minValue ? new Date(minValue) : undefined} onChange={newTime => {\r\n                setMin(newTime.toLocaleDateString());\r\n                if (props.onChange) props.onChange({ min: minValue, max: maxValue })\r\n            }}></TimePicker>\r\n            <Divider />\r\n\r\n            <TimePicker precision={TimePrecision.MINUTE} useAmPm={true} defaultValue={maxValue ? new Date(maxValue) : undefined} onChange={newTime => {\r\n                setMax(newTime.toLocaleDateString());\r\n                props.onChange({ min: minValue, max: maxValue })\r\n            }}></TimePicker>\r\n        </ButtonGroup>\r\n    )\r\n}\r\n\r\ninterface ValInputProps {\r\n    type: IValueType,\r\n    defaultValue?: any,\r\n    options?: AnswerOptions | undefined,\r\n    onChange: (newValue: any) => void\r\n}\r\ninterface ValInputState {\r\n\r\n}\r\nexport class ValInput extends React.Component<ValInputProps, ValInputState> {\r\n    static get defaultProps(): ValInputProps {\r\n        return {\r\n            defaultValue: \"\",\r\n            onChange: (e) => { console.log(e) },\r\n            type: { name: ANSWER_TYPES.STRING }\r\n        }\r\n    }\r\n    constructor(props: ValInputProps) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render() {\r\n        let comp = null;\r\n        switch (this.props.type.name) {\r\n            case ANSWER_TYPES.NUMBER:\r\n                comp = <input\r\n                    defaultValue={this.props.defaultValue}\r\n                    className=\"form-control\"\r\n                    type=\"number\"\r\n                    onChange={e => {\r\n                        if (this.props.onChange) this.props.onChange({ value: e.target.value })\r\n                    }}\r\n                />\r\n                break;\r\n            case ANSWER_TYPES.SELECT:\r\n                comp = <SelInput\r\n                    type={this.props.type.ofType}\r\n                    defaultValue={this.props.defaultValue}\r\n                    options={this.props.options}\r\n                    onChange={(newVal: any) => {\r\n                        if (this.props.onChange) this.props.onChange(newVal)\r\n                    }} />\r\n\r\n                //TODO::\r\n                break;\r\n            case ANSWER_TYPES.BOOLEAN:\r\n                let opt = [{ value: \"true\", label: \"YES\" }, { value: \"false\", label: \"No\" }];\r\n                let def = opt.find(item => item.value === this.props.defaultValue);\r\n                comp = <Select\r\n                    styles={customStyles}\r\n                    defaultValue={def}\r\n                    options={opt}\r\n                    onChange={(newVal: any) => {\r\n                        if (this.props.onChange) this.props.onChange({ value: newVal.value })\r\n                    }} />\r\n                break;\r\n            case ANSWER_TYPES.DATE:\r\n                let defaultDate = this.props.defaultValue ? new Date(this.props.defaultValue) : undefined;\r\n                comp = <DateInput\r\n                    formatDate={date => date.toLocaleDateString()}\r\n                    parseDate={str => new Date(str)}\r\n                    closeOnSelection={true}\r\n                    defaultValue={defaultDate}\r\n                    onChange={e => {\r\n                        if (this.props.onChange) this.props.onChange({ value: e.toLocaleDateString() })\r\n                    }\r\n                    } />\r\n                break;\r\n            case ANSWER_TYPES.RANGE:\r\n                if (this.props.type.ofType) {\r\n                    comp = <RangeInput\r\n                        value={this.props.defaultValue}\r\n                        type={this.props.type.ofType}\r\n                        onChange={e => {\r\n                            if (this.props.onChange) this.props.onChange({ value: e })\r\n                        }}\r\n                    />\r\n                }\r\n                break;\r\n            case ANSWER_TYPES.STRING:\r\n                comp = <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    defaultValue={this.props.defaultValue}\r\n                    onChange={e => {\r\n                        if (this.props.onChange) this.props.onChange({ value: e.target.value })\r\n                    }} />\r\n                break;\r\n            case ANSWER_TYPES.TIME:\r\n                let defaulttime = this.props.defaultValue ? new Date(this.props.defaultValue) : undefined;\r\n                comp = <TimePicker precision={TimePrecision.MINUTE} useAmPm={true} defaultValue={defaulttime} onChange={newTime => {\r\n                    if (this.props.onChange) this.props.onChange({ value: newTime.toString() })\r\n                }}></TimePicker>\r\n\r\n        }\r\n        return (\r\n            comp\r\n        )\r\n    }\r\n}\r\ninterface SelInputProps {\r\n    options?: AnswerOptions,\r\n    type?: IValueType,\r\n    defaultValue?: string,\r\n    onChange: (data: any) => void\r\n}\r\ninterface SelInputState {\r\n\r\n}\r\nexport class SelInput extends React.Component<SelInputProps, SelInputState>{\r\n    constructor(props: SelInputProps) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    handleChange(d: any) {\r\n        console.log(d);\r\n        if (this.props.onChange) this.props.onChange(d);\r\n    }\r\n    render() {\r\n        let allOptions: any = [];\r\n        if (this.props.options) {\r\n            let { rootOptions, groups } = this.props.options.SortedOptions;\r\n            let groupOptions_: any = [];\r\n            let rootOptions_: any = []\r\n            if (groups && groups.length > 0) {\r\n                groupOptions_ = groups.map((item:IOptionGroup )=> {\r\n                    return ({\r\n                        label: item.name,\r\n                        options: item.members.map(i => ({ label: i.value, value: i.id }))\r\n                    })\r\n                })\r\n            }\r\n            rootOptions_ = rootOptions.map((i: IOption) => ({ label: i.value, value: i.id }));\r\n            allOptions = [...groupOptions_, ...rootOptions_];\r\n        }\r\n        let findOption = (options_: any, findValue: string | undefined): any => {\r\n            let found = null;\r\n            for (let i = 0; i < options_.length; i++) {\r\n                let options = options_[i];\r\n                if (options.options && options.options.length > 0) {\r\n                    found = options.options.find((item: any) => item.value === findValue);\r\n                    if (found) break;\r\n                }\r\n                else {\r\n                    found = options && options.value === findValue ? options : undefined;\r\n                    if (found) break;\r\n                }\r\n            }\r\n            return found;\r\n\r\n        }\r\n        let defaultvalue = findOption(allOptions, this.props.defaultValue)\r\n        return (<Select styles={customStyles} options={allOptions} onChange={this.handleChange.bind(this)} defaultValue={defaultvalue} />)\r\n    }\r\n}","import React from \"react\";\r\nimport { Table, Button } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { openModal, destroyModal } from \"../utils\";\r\nimport { CreateConditionModal } from \"./CreateConditionModal\";\r\nimport _ from \"lodash\";\r\nimport { faKey, faPlusSquare, faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ValInput } from \"./ValInput\";\r\nimport { Switch } from \"@blueprintjs/core\";\r\nimport { QAQuestion, IAutoAnswer, AnswerOptions, IValueType, IAnswerCondition, ANSWER_TYPES, QACondition, ILiteral } from \"dpform\";\r\n\r\ninterface AutoAnswerProps {\r\n    definedQuestions: { [key: string]: QAQuestion },\r\n    onChange: (a: IAutoAnswer) => void,\r\n    options?: AnswerOptions,\r\n    answerType: IValueType,\r\n    autoAnswer: IAutoAnswer\r\n}\r\ninterface AutoAnswerState {\r\n    aConditions: IAnswerCondition[];\r\n    isEnabled: boolean,\r\n}\r\n\r\nexport class AutofillCondition extends React.Component<AutoAnswerProps, AutoAnswerState> {\r\n    constructor(props: AutoAnswerProps) {\r\n        super(props);\r\n        this.state = {\r\n            aConditions: this.props.autoAnswer.answeringConditions || [],\r\n            isEnabled: this.props.autoAnswer.isEnabled\r\n        }\r\n    }\r\n\r\n    editIfTrueFalseValue(type: string, index: number, value: string) {\r\n        this.setState((prevState: AutoAnswerState) => {\r\n            let found = undefined;\r\n            let newConditions = _.clone(prevState.aConditions);\r\n            let selected = newConditions[index];\r\n            if (this.props.options && this.props.answerType.name === ANSWER_TYPES.SELECT) {\r\n                found = this.props.options.optionsMap[value];\r\n                if (type === \"true\") {\r\n                    selected.ifTrue = found.id\r\n\r\n                }\r\n                else if (type === \"false\") {\r\n                    selected.ifFalse = found.id\r\n                }\r\n            }\r\n            else {\r\n                if (type === 'true') selected.ifTrue = value;\r\n                if (type === 'false') selected.ifFalse = value;\r\n            }\r\n\r\n\r\n\r\n            return {\r\n                aConditions: newConditions\r\n            }\r\n        }, () => {\r\n            if (this.props.onChange) {\r\n                this.props.onChange({ isEnabled: this.state.isEnabled, answeringConditions: this.state.aConditions })\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    openConditionModal(index: number) {\r\n        let condition: IAnswerCondition = this.state.aConditions[index];\r\n\r\n        let el = <CreateConditionModal\r\n            definedQuestions={this.props.definedQuestions}\r\n            isOpen={true}\r\n            onSubmit={this.editCondition.bind(this, index)}\r\n            onCancel={destroyModal.bind(this)}\r\n            condition={condition.condition} />\r\n        openModal(el);\r\n    }\r\n    changeEnabled() {\r\n        this.setState((prevState: AutoAnswerState) => {\r\n            return {\r\n                isEnabled: !prevState.isEnabled\r\n            }\r\n        }, () => {\r\n            if (this.props.onChange)\r\n                this.props.onChange({ isEnabled: this.state.isEnabled, answeringConditions: this.state.aConditions })\r\n\r\n        })\r\n    }\r\n\r\n    addAutoFillCondition() {\r\n        this.setState((prevState: AutoAnswerState) => {\r\n            let newConditions = _.clone(prevState.aConditions);\r\n            let answerCondition: IAnswerCondition = {\r\n                condition: new QACondition(),\r\n                ifTrue: undefined,\r\n                ifFalse: undefined\r\n            }\r\n            newConditions.push(answerCondition);\r\n            return {\r\n                aConditions: newConditions\r\n            }\r\n        }, () => {\r\n            if (this.props.onChange)\r\n                this.props.onChange({ isEnabled: this.state.isEnabled, answeringConditions: this.state.aConditions })\r\n        })\r\n    }\r\n\r\n    editCondition(index: number, data: ILiteral[]) {\r\n        let cloned = _.clone(this.state.aConditions);\r\n        let condition = cloned[index].condition;\r\n        if (!condition) {\r\n            cloned[index].condition = new QACondition();\r\n        }\r\n        cloned[index].condition.setLiterals(data);\r\n        this.setState({\r\n            aConditions: cloned\r\n        }, () => {\r\n            destroyModal();\r\n            if (this.props.onChange) this.props.onChange({ isEnabled: this.state.isEnabled, answeringConditions: this.state.aConditions })\r\n\r\n        })\r\n    }\r\n\r\n    removeAutofillCondition(index: number) {\r\n        this.setState((prevState: AutoAnswerState) => {\r\n            let aConditions = _.clone(prevState.aConditions);\r\n            aConditions.splice(index, 1);\r\n            return {\r\n                aConditions: aConditions\r\n            }\r\n\r\n        }, () => {\r\n            if (this.props.onChange) this.props.onChange({ isEnabled: this.state.isEnabled, answeringConditions: this.state.aConditions })\r\n\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Switch checked={this.state.isEnabled} onChange={this.changeEnabled.bind(this)} label=\"Enabled\"></Switch>\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Condition</th>\r\n                            <th> if True</th>\r\n                            <th> if False</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.aConditions.map((item: IAnswerCondition, index: number) => {\r\n\r\n                            let comparisonValueSelect = (ifFalseOrTrue: string) => <ValInput\r\n                                key={ifFalseOrTrue}\r\n                                onChange={(data: { value: string }) => this.editIfTrueFalseValue(ifFalseOrTrue, index, data.value)}\r\n                                options={this.props.options}\r\n                                defaultValue={ifFalseOrTrue === \"true\" ? item.ifTrue : (item.ifFalse && item.ifFalse)}\r\n                                type={this.props.answerType} />\r\n\r\n                            return (<tr key={`af${index}`}>\r\n                                <td></td>\r\n                                <td><Button type=\"button\" onClick={() => this.openConditionModal(index)}\r\n                                    size=\"sm\">\r\n                                    <FontAwesomeIcon size={\"sm\"} icon={faKey} /></Button>\r\n                                </td>\r\n                                <td>{comparisonValueSelect(\"true\")}</td>\r\n                                <td>{comparisonValueSelect(\"false\")}</td>\r\n                                <td><Button size=\"sm\" onClick={() => { this.removeAutofillCondition(index) }}> <FontAwesomeIcon icon={faWindowClose} /></Button></td>\r\n                            </tr>)\r\n                        })}\r\n                        <tr>\r\n                            <td ><Button size=\"sm\" onClick={() => this.addAutoFillCondition()} type=\"button\" >\r\n                                <FontAwesomeIcon icon={faPlusSquare} />\r\n                            </Button></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { customStyles } from \"./DPFormItem\";\r\nimport Select from \"react-select\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport _ from \"lodash\";\r\nimport { ANSWER_TYPES, IValueType } from \"dpform\";\r\n\r\ntype QAAnswerTypeOption = { label: string, value: ANSWER_TYPES };\r\n\r\n\r\nconst ValueSelectOptions: QAAnswerTypeOption[] = [\r\n    { value: ANSWER_TYPES.BOOLEAN, label: \"YES/NO\" },\r\n    { value: ANSWER_TYPES.STRING, label: \"Text\" },\r\n    { value: ANSWER_TYPES.TIME, label: \"Time\" },\r\n    { value: ANSWER_TYPES.DATE, label: \"Date\" },\r\n    { value: ANSWER_TYPES.NUMBER, label: \"Number\" },\r\n    { value: ANSWER_TYPES.RANGE, label: \"Range\" },\r\n    { value: ANSWER_TYPES.SELECT, label: \"Multiple Choice\" },\r\n    {value: ANSWER_TYPES.GEOLOCATION, label:\"Geo location\"}\r\n]\r\n\r\nconst OptionsForSelect: QAAnswerTypeOption[] = ValueSelectOptions.filter((item) => item.value && item.value !== ANSWER_TYPES.SELECT);\r\nlet includedInRange = [ANSWER_TYPES.TIME, ANSWER_TYPES.NUMBER, ANSWER_TYPES.DATE, ANSWER_TYPES.TIME];\r\nconst OptionsForRange: QAAnswerTypeOption[] = ValueSelectOptions.filter(item => includedInRange.includes(item.value))\r\n\r\n\r\ninterface AnswerTypeInputProps {\r\n    answerType: IValueType,\r\n    onChange: (val: IValueType) => void,\r\n}\r\n\r\ninterface AnswerTypeInputState {\r\n    answerType: IValueType,\r\n}\r\n\r\nexport class AnswerTypeInput extends React.Component<AnswerTypeInputProps, AnswerTypeInputState>{\r\n    static defaultProps = {\r\n        answerType: { name: undefined, ofType: undefined }\r\n    }\r\n    constructor(props: AnswerTypeInputProps) {\r\n        super(props);\r\n        this.state = {\r\n            answerType: this.props.answerType\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param data \r\n     */\r\n    handleAnswerTypeChange(data: any): void {\r\n        this.setState((prevState) => {\r\n            let newAnswerType = _.clone(prevState.answerType);\r\n            newAnswerType.name = data.value as ANSWER_TYPES;\r\n            newAnswerType.ofType = undefined;\r\n            return {\r\n                answerType: newAnswerType\r\n            }\r\n\r\n        }, () => {\r\n            if (this.props.onChange) this.props.onChange(this.state.answerType)\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * second select is for selecting types select and range\r\n     * @param data \r\n     */\r\n    handleSecondSelectChange(data: any): void {\r\n        this.setState((prevState) => {\r\n            let newAnswerType = _.clone(prevState.answerType);\r\n            newAnswerType.ofType = { name: data.value as ANSWER_TYPES, ofType: undefined };\r\n            if (newAnswerType.ofType.ofType) newAnswerType.ofType.ofType = undefined;\r\n            return {\r\n                answerType: newAnswerType\r\n            }\r\n\r\n        }, () => {\r\n            if (this.props.onChange) this.props.onChange(this.state.answerType)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * third select pops up only for range, to select the value types of range\r\n     * @param data \r\n     */\r\n\r\n    handleThirdSelectChange(data: any): void {\r\n        this.setState((prevState) => {\r\n            let newAnswerType = _.clone(prevState.answerType);\r\n            if (newAnswerType.ofType) {\r\n                newAnswerType.ofType.ofType = data.value;\r\n            }\r\n            return {\r\n                answerType: newAnswerType\r\n            }\r\n\r\n        }, () => {\r\n            if (this.props.onChange) this.props.onChange(this.state.answerType)\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        let shouldDisplaySecondSelect = this.state.answerType.name === ANSWER_TYPES.SELECT || this.state.answerType.name === ANSWER_TYPES.RANGE;\r\n        let shouldDisplayThirdSelect = this.state.answerType.ofType && this.state.answerType.ofType.name === ANSWER_TYPES.RANGE;\r\n\r\n        let optionsForSecondSelect = this.state.answerType.name === ANSWER_TYPES.SELECT ? OptionsForSelect : this.state.answerType.name === ANSWER_TYPES.RANGE ? OptionsForRange : []\r\n        let OptionsForThirdSelect = this.state.answerType.ofType && this.state.answerType.ofType.name === ANSWER_TYPES.RANGE ? OptionsForRange : []\r\n        return (\r\n            <Row>\r\n                <Col>\r\n                    <label>Value Type</label>\r\n                    <Select onChange={this.handleAnswerTypeChange.bind(this)} styles={customStyles}\r\n                        options={ValueSelectOptions}\r\n                        value={ValueSelectOptions.find((item: QAAnswerTypeOption) => item.value === this.state.answerType.name)}\r\n                    />\r\n                </Col>\r\n                {shouldDisplaySecondSelect && <Col>\r\n                    <label>of type</label>\r\n                    <Select onChange={this.handleSecondSelectChange.bind(this)} styles={customStyles}\r\n                        options={optionsForSecondSelect}\r\n                        value={optionsForSecondSelect.find(item => this.state.answerType.ofType && item.value === this.state.answerType.ofType.name)}\r\n                    />\r\n\r\n                </Col>}\r\n                {shouldDisplayThirdSelect && <Col>\r\n                    <label>of type</label>\r\n                    <Select onChange={this.handleThirdSelectChange.bind(this)} styles={customStyles}\r\n                        options={OptionsForThirdSelect}\r\n                        value={OptionsForThirdSelect.find(item => this.state.answerType.ofType && this.state.answerType.ofType.ofType && item.value === this.state.answerType.ofType.ofType.name)}\r\n                    />\r\n\r\n                </Col>\r\n                }\r\n            </Row>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { AnswerOptions,Constants, QAQuestion, IValueType, ILiteral, QACondition, IOption, IOptionGroup, IConstant } from \"dpform\";\r\nimport React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { CreateConditionModal } from \"./CreateConditionModal\";\r\nimport {  Table } from \"reactstrap\";\r\nimport { H5, Divider , Button, ButtonGroup} from \"@blueprintjs/core\";\r\nimport Select from \"react-select/\";\r\nimport { customStyles } from \"./DPFormItem\";\r\nimport { AnswerTypeInput } from \"./AnswerType\";\r\nimport { ValInput } from \"./ValInput\";\r\nimport Creatable from \"react-select/creatable\"\r\nimport {openModal, destroyModal} from \"../utils\"\r\n\r\ninterface QAAddOptionsState {\r\n    options: AnswerOptions,\r\n}\r\ninterface QAAddOptionsProps {\r\n    constants: Constants,\r\n    definedQuestions: { [key: string]: QAQuestion }\r\n    options: AnswerOptions,\r\n    defaultOptionType: IValueType,\r\n    onChange: (options: AnswerOptions) => void,\r\n}\r\nenum OPTION_OR_GROUP {\r\n    OPTION = 1,\r\n    GROUP = 2\r\n}\r\nexport class QAAddOptions extends React.Component<QAAddOptionsProps, QAAddOptionsState>{\r\n    constructor(props: QAAddOptionsProps) {\r\n        super(props);\r\n        this.state = {\r\n            options: this.props.options || []\r\n        }\r\n    }\r\n    handleChange() {\r\n        if (this.props.onChange) this.props.onChange(this.state.options);\r\n    }\r\n    handleAddNewOption() {\r\n        this.setState((prevState: QAAddOptionsState) => {\r\n            let cloned = _.clone(prevState.options);\r\n            cloned.addOption();\r\n            return {\r\n                options: cloned\r\n            }\r\n        }, this.handleChange.bind(this))\r\n    }\r\n    handleGroupNameChange(oldname: string, newname: string) {\r\n        this.setState((prevState: QAAddOptionsState) => {\r\n            let cloned = _.clone(prevState.options);\r\n            cloned.changeGroupName(oldname, newname);\r\n            return {\r\n                options: cloned\r\n            }\r\n        }, this.handleChange.bind(this))\r\n    }\r\n    handleGroupDelete(name: string) {\r\n        this.setState((prevState: QAAddOptionsState) => {\r\n            let cloned = _.clone(prevState.options);\r\n            cloned.deleteGroup(name);\r\n            return {\r\n                options: cloned\r\n            }\r\n        }, this.handleChange.bind(this))\r\n    }\r\n    handleOptionTypeChange(id: string, newType: IValueType) {\r\n        this.setState((prevState: QAAddOptionsState) => {\r\n            let cloned = _.clone(prevState.options);\r\n            cloned.setOptionTypeFor(id, newType);\r\n            return {\r\n                options: cloned\r\n            }\r\n        }, this.handleChange.bind(this))\r\n    }\r\n\r\n    handleGroupAssignment(ids: string[], groupname: string) {\r\n        this.setState((prevState: QAAddOptionsState) => {\r\n            let cloned = _.clone(prevState.options);\r\n            cloned.assignOptionToGroup(ids, groupname)\r\n            return {\r\n                options: cloned\r\n            }\r\n        }, this.handleChange.bind(this));\r\n    }\r\n\r\n    handleGroupUnassignment(ids: string[]) {\r\n        this.setState((prevState: QAAddOptionsState) => {\r\n            let cloned = _.clone(prevState.options);\r\n            cloned.unassignGroup(ids)\r\n            return {\r\n                options: cloned\r\n            }\r\n        }, this.handleChange.bind(this));\r\n    }\r\n\r\n    handleOptionDelete(id: string) {\r\n        this.setState((prevState: QAAddOptionsState) => {\r\n            let cloned = _.clone(prevState.options);\r\n            cloned.deleteOption(id);\r\n            return {\r\n                options: cloned\r\n            }\r\n        }, this.handleChange.bind(this));\r\n    }\r\n    handleOptionValueChange(id: string, newValue: string) {\r\n        this.setState((prevState: QAAddOptionsState) => {\r\n            let cloned = _.clone(prevState.options);\r\n            cloned.setValueForOption(id, newValue);\r\n            return {\r\n                options: cloned\r\n            }\r\n        }, this.handleChange.bind(this));\r\n    }\r\n    handleAddGroup() {\r\n        this.setState((prevState: QAAddOptionsState) => {\r\n            let cloned = _.clone(prevState.options);\r\n            cloned.addGroup();\r\n            return {\r\n                options: cloned\r\n            }\r\n        }, this.handleChange.bind(this));\r\n    }\r\n    handleConditionClick(type: OPTION_OR_GROUP, name: string) {\r\n        // openModal()\r\n        let condition;\r\n        if (type === OPTION_OR_GROUP.GROUP) {\r\n            condition = this.state.options.optionGroupMap[name].appearingCondition;\r\n        }\r\n        else {\r\n            condition = this.state.options.optionsMap[name].appearingCondition;\r\n        }\r\n        let el = <CreateConditionModal\r\n            definedQuestions={this.props.definedQuestions}\r\n            isOpen={true}\r\n            onSubmit={this.setCondition.bind(this, name, type)}\r\n            onCancel={destroyModal.bind(this)}\r\n            condition={condition} />\r\n        openModal(el);\r\n    }\r\n\r\n    setCondition(idOrname: string, type: OPTION_OR_GROUP, literals: ILiteral[]) {\r\n\r\n        this.setState((prevState: QAAddOptionsState) => {\r\n            let cloned = _.clone(prevState.options);\r\n            if (type === OPTION_OR_GROUP.GROUP) {\r\n\r\n                let group = cloned.optionGroupMap[idOrname];\r\n                if (!group.appearingCondition) {\r\n                    group.appearingCondition = new QACondition()\r\n                }\r\n                group.appearingCondition.setLiterals(literals)\r\n            }\r\n            else if (type === OPTION_OR_GROUP.OPTION) {\r\n                let option = cloned.optionsMap[idOrname];\r\n                if (!option.appearingCondition) option.appearingCondition = new QACondition();\r\n                option.appearingCondition.setLiterals(literals)\r\n            }\r\n            return {\r\n                options: cloned\r\n            }\r\n        }, () => {\r\n            destroyModal();\r\n            this.handleChange();\r\n        });\r\n\r\n    }\r\n    handleImportFromConstant(a: any) {\r\n        let constant = this.props.constants.getConstant(a.value);\r\n        console.log(a);\r\n        console.log(constant);\r\n        if (constant && constant.value instanceof AnswerOptions) {\r\n            this.setState({\r\n                options: constant.value\r\n            },this.handleChange.bind(this))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let constantsOptions = this.props.constants.ConstantsArray.map((item:IConstant) => ({ label: item.name, value: item.name }));\r\n        return (\r\n            <ButtonGroup fill={true} vertical={true}>\r\n                <H5>Import From Constant </H5>\r\n                <Select styles={customStyles} options={constantsOptions} onChange={this.handleImportFromConstant.bind(this)}></Select>\r\n                <QAOptionSection\r\n                    groups={this.state.options.optionGroupMap ? Object.values(this.state.options.optionGroupMap) : []}\r\n                    handleGroupAssignment={this.handleGroupAssignment.bind(this)}\r\n                    handleOptionTypeChange={this.handleOptionTypeChange.bind(this)}\r\n                    handleAddNewOption={this.handleAddNewOption.bind(this)}\r\n                    handleOptionDelete={this.handleOptionDelete.bind(this)}\r\n                    handleConditionClick={this.handleConditionClick.bind(this, OPTION_OR_GROUP.OPTION)}\r\n                    handleOptionValueChange={this.handleOptionValueChange.bind(this)}\r\n                    options={this.state.options.optionsMap ? Object.values(this.state.options.optionsMap) : []}\r\n                />\r\n\r\n                <Divider />\r\n                <QAAddGroupSection\r\n                    handleAddGroup={this.handleAddGroup.bind(this)}\r\n                    handleGroupUnassignment={this.handleGroupUnassignment.bind(this)}\r\n                    handleGroupAssignment={this.handleGroupAssignment.bind(this)}\r\n                    handleGroupNameChange={this.handleGroupNameChange.bind(this)}\r\n                    handleGroupDelete={this.handleGroupDelete.bind(this)}\r\n                    handleGroupConditionClick={this.handleConditionClick.bind(this, OPTION_OR_GROUP.GROUP)}\r\n                    options={this.state.options.optionsMap ? Object.values(this.state.options.optionsMap) : []}\r\n                    groups={this.state.options.optionGroupMap ? Object.values(this.state.options.optionGroupMap) : []}\r\n                />\r\n\r\n            </ButtonGroup>\r\n        )\r\n    }\r\n}\r\n\r\ninterface QAAoptionSectionProps {\r\n    options: IOption[],\r\n    groups: IOptionGroup[],\r\n    handleAddNewOption?: () => void,\r\n    handleOptionTypeChange?: (id: string, newType: IValueType) => void\r\n    handleGroupAssignment?: (ids: string[], groupname: string) => void,\r\n    handleOptionDelete?: (id: string) => void,\r\n    handleConditionClick?: (id: string) => void,\r\n    handleOptionValueChange?: (id: string, newVal: string) => void,\r\n}\r\ninterface QAAddOptionsSectionState {\r\n    options: IOption[]\r\n}\r\n\r\nexport class QAOptionSection extends React.Component<QAAoptionSectionProps, QAAddOptionsSectionState>{\r\n    static defaultProps = {\r\n        options: [],\r\n        groups: []\r\n    }\r\n    constructor(props: QAAoptionSectionProps) {\r\n        super(props);\r\n        this.state = {\r\n            options: this.props.options\r\n        }\r\n    }\r\n    shouldComponentUpdate(nextProps: QAAoptionSectionProps, nextState:QAAddOptionsSectionState ){\r\n        if(nextProps.options.length!==this.props.options.length || nextProps.groups.length!==this.props.groups.length){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    generateAddGroupInput(option: IOption) {\r\n        let creatableOptions = this.props.groups.map(item => ({ value: item.name, label: item.name }));\r\n        let value = creatableOptions.find(item => item.value === option.groupName);\r\n        return <Creatable value={value || null} styles={customStyles} options={creatableOptions} onChange={(e: any) => {\r\n            if (this.props.handleGroupAssignment) this.props.handleGroupAssignment([option.id], e.value);\r\n        }} />\r\n    }\r\n\r\n    handleAddNewOption() {\r\n        if (this.props.handleAddNewOption) this.props.handleAddNewOption();\r\n\r\n    }\r\n\r\n    handleConditionEdit(id: string) {\r\n        if (this.props.handleConditionClick) this.props.handleConditionClick(id)\r\n    }\r\n\r\n    handleAddGroupInput(index: number) {\r\n\r\n    }\r\n    handleOptionDelete(id: string) {\r\n        if (this.props.handleOptionDelete) this.props.handleOptionDelete(id);\r\n    }\r\n\r\n    handleOptionTypeChange(option_id: string, newType: IValueType) {\r\n        if (this.props.handleOptionTypeChange) this.props.handleOptionTypeChange(option_id, newType)\r\n    }\r\n    handleOptionValueChange(id: string, newValue: any) {\r\n        if (this.props.handleOptionValueChange) this.props.handleOptionValueChange(id, newValue.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>Id</th>\r\n                        <th>Type</th>\r\n                        <th>Value</th>\r\n                        <th>Condition</th>\r\n                        <th>Group</th>\r\n                        <th></th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.options.map((item, i) => {\r\n                        return <tr key={item.id}>\r\n                            <td></td>\r\n                            <td>{item.id}</td>\r\n                            <td><AnswerTypeInput answerType={item.type} onChange={e => this.handleOptionTypeChange(item.id, e)} /></td>\r\n                            <td><ValInput onChange={this.handleOptionValueChange.bind(this, item.id)} defaultValue={item.value} type={item.type} /></td>\r\n                            <td><Button onClick={this.handleConditionEdit.bind(this, item.id)} style={{ color: 'red', width: 20 }} icon=\"key\" /></td>\r\n                            <td>{this.generateAddGroupInput(item)}</td>\r\n                            <td><Button style={{ width: 20 }} onClick={this.handleOptionDelete.bind(this, item.id)} icon=\"cross\" /></td>\r\n\r\n                        </tr>\r\n                    })}\r\n                    <tr>\r\n                        <td><Button style={{ width: 20 }} icon={\"add\"} onClick={this.handleAddNewOption.bind(this)}></Button></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\ninterface QAAoptionGroupSectionProps {\r\n    groups: IOptionGroup[],\r\n    options: IOption[],\r\n    handleGroupAssignment?: (id: string[], groupname: string) => void,\r\n    handleGroupUnassignment?: (id: string[]) => void,\r\n    handleGroupNameChange?: (oldname: string, newname: string) => void,\r\n    handleGroupDelete?: (name: string) => void,\r\n    handleGroupConditionClick?: (name: string) => void,\r\n    handleAddGroup?: () => void,\r\n\r\n}\r\ninterface QAAddOptionSectionState {\r\n\r\n}\r\nexport class QAAddGroupSection extends React.Component<QAAoptionGroupSectionProps, QAAddOptionSectionState>{\r\n    constructor(props: QAAoptionGroupSectionProps) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    handleGroupAssignment(e: { value: string, label: string }[], groupname: string) {\r\n        if (e) {\r\n            let ids = e.map(item => item.value)\r\n            console.log(ids);\r\n            if (this.props.handleGroupAssignment) this.props.handleGroupAssignment(ids, groupname)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>Group Name</th>\r\n                        <th>Group Items</th>\r\n                        <th>Appearing Condition</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.groups.map((item, index) => {\r\n                        let options = this.props.options.map(item => ({ value: item.id, label: item.id }));\r\n                        let memberids = item.members.map(item => item.id);\r\n                        let selected = options.filter(item => memberids.includes(item.value))\r\n                        return <tr key={item.id}>\r\n                            <td></td>\r\n                            <td><input key={item.id} type=\"text\" className=\"form-control\" defaultValue={item.name} onChange={e => {\r\n                                if (this.props.handleGroupNameChange) this.props.handleGroupNameChange(item.name, e.target.value);\r\n                            }} /></td>\r\n                            <td><Select styles={customStyles}\r\n                                onChange={(e: any, action: any) => {\r\n                                    if (action.action === \"remove-value\") {\r\n                                        let removedid = action.removedValue.value;\r\n                                        if (this.props.handleGroupUnassignment) this.props.handleGroupUnassignment([removedid])\r\n                                    }\r\n                                    this.handleGroupAssignment(e, item.name)\r\n                                }}\r\n                                value={selected}\r\n\r\n                                isMulti={true} options={options} /></td>\r\n                            <td><Button style={{ width: 20 }} icon=\"key\" onClick={() => {\r\n                                if (this.props.handleGroupConditionClick) this.props.handleGroupConditionClick(item.name)\r\n                            }} /></td>\r\n                            <td><Button style={{ width: 20 }} icon=\"cross\" onClick={() => {\r\n                                if (this.props.handleGroupDelete) this.props.handleGroupDelete(item.name)\r\n                            }} /></td>\r\n\r\n                        </tr>\r\n\r\n\r\n\r\n                    })}\r\n                    <tr>\r\n                        <td><Button style={{ width: 20 }} icon=\"add\" onClick={() => {\r\n                            if (this.props.handleAddGroup) this.props.handleAddGroup()\r\n                        }} /></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Form } from 'formik';\r\nimport { faKey } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport * as _ from \"lodash\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    FormGroup,\r\n} from \"reactstrap\";\r\nimport Modal from \"react-modal\";\r\nimport { openModal, destroyModal } from \"../utils\"\r\nimport { AutofillCondition } from \"./AutofillCondition\";\r\nimport { CreateConditionModal } from \"./CreateConditionModal\";\r\nimport { Switch } from \"@blueprintjs/core\";\r\nimport {\r\n    IValueType,\r\n    QAComparisonOperator,\r\n    ANSWER_TYPES,\r\n    Constants,\r\n    QAQuestion,\r\n    ILiteral,\r\n    QACondition,\r\n    QAType,\r\n    AnswerOptions,\r\n    IAutoAnswer,\r\n    AnswerType\r\n} from \"dpform\";\r\nimport { AnswerTypeInput } from \"./AnswerType\";\r\nimport { QAAddOptions } from \"./AddOptions\";\r\nlet root: HTMLElement = document.getElementById(\"root\") || document.body;\r\nModal.setAppElement(root);\r\n\r\nexport function getOperatorForType(valueType?: IValueType) {\r\n    let allOperators = Object.values(QAComparisonOperator);\r\n    let type = valueType && valueType.name;\r\n\r\n    switch (type) {\r\n        case ANSWER_TYPES.BOOLEAN:\r\n        case ANSWER_TYPES.DATE:\r\n        case ANSWER_TYPES.STRING:\r\n        case ANSWER_TYPES.TIME:\r\n\r\n\r\n            return allOperators.filter(item => item === QAComparisonOperator.Equal);\r\n        case ANSWER_TYPES.NUMBER:\r\n        default:\r\n            return allOperators;\r\n    }\r\n}\r\n\r\nexport const customStyles = {\r\n    container: (base: any, state: any) => ({\r\n        ...base,\r\n        border: state.isFocused ? null : null,\r\n        background: \"transparent\",\r\n        transition:\r\n            \"border-color 0.2s ease, box-shadow 0.2s ease, padding 0.2s ease\",\r\n        \"&:hover\": {\r\n            boxShadow: \"0 2px 4px 0 rgba(41, 56, 78, 0.1)\",\r\n        }\r\n    }),\r\n\r\n    control: (base: any, state: any) => ({\r\n        ...base,\r\n        background: \"transparent\",\r\n        borderColor: state.isFocused ? brandColor : base.borderColor,\r\n        '&:hover': {\r\n            borderColor: state.isFocused\r\n                ? brandColor\r\n                : base.borderColor\r\n        }\r\n    }),\r\n    valueContainer: (base: any, state: any) => ({\r\n        ...base,\r\n        background: \"transparent\",\r\n        color: \"white\"\r\n    }),\r\n\r\n    menu: (base: any, state: any) => ({\r\n        ...base,\r\n        background: \"black\",\r\n        borderColor: \"#e14eca\",\r\n        zIndex: \"999999999999999999 !important\"\r\n\r\n    }),\r\n    menuList: (base: any, state: any) => {\r\n        console.log(state)\r\n        return {\r\n            ...base,\r\n            background: \"#525f7f\",\r\n            color: \"white\",\r\n\r\n        }\r\n    },\r\n    singleValue: (base: any, state: any) => ({\r\n        ...base,\r\n        color: \"white\"\r\n    }),\r\n\r\n    input: (base: any, state: any) => ({\r\n        ...base,\r\n        color: \"white\"\r\n    }),\r\n    option: (base: any, state: any) => ({\r\n        ...base,\r\n        background: state.isSelected ? \"lightblue\" : state.isFocused ? \"hotpink\" : \"#525f7f\"\r\n    }),\r\n};\r\n\r\nconst brandColor = '#46beed';\r\n\r\n\r\ninterface FormItemProps {\r\n    constants: Constants,\r\n    definedQuestions: { [key: string]: QAQuestion }\r\n    question: QAQuestion,\r\n    onChange: (question: QAQuestion) => void\r\n}\r\ninterface FormItemState {\r\n    question: QAQuestion\r\n}\r\n\r\nexport class DPFormItem extends React.Component<FormItemProps, FormItemState>{\r\n    static defaultProps = {\r\n        question: new QAQuestion()\r\n    }\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            question: this.props.question\r\n        }\r\n    }\r\n    shouldComponentUpdate(nextProps: FormItemProps, nextState: FormItemState) {\r\n        return false;\r\n    }\r\n    handleChange() {\r\n        if (this.props.onChange) this.props.onChange(this.state.question)\r\n    }\r\n    \r\n    handleRequiredChange(e: any) {\r\n        this.setState((prevState: FormItemState) => {\r\n            let question = _.clone(prevState.question);\r\n            question.setIsRequired(!question.isRequired);\r\n            return {\r\n                question: question\r\n            }\r\n        }, this.handleChange.bind(this))\r\n    }\r\n    openAppearingConditionModal() {\r\n        let el = <CreateConditionModal\r\n            definedQuestions={this.props.definedQuestions}\r\n            isOpen={true}\r\n            onSubmit={this.editAppearingCondition.bind(this)}\r\n            onCancel={destroyModal.bind(this)}\r\n            condition={this.state.question.appearingCondition} />\r\n        openModal(el);\r\n    }\r\n\r\n    editAppearingCondition(newLiterals: ILiteral[]) {\r\n        this.setState((prevState: any) => {\r\n            let question: QAQuestion = _.clone(prevState.question)\r\n            if (!question.appearingCondition) question.setAppearingCondition(new QACondition())\r\n            question.appearingCondition.setLiterals(newLiterals);\r\n            console.log(QACondition.toJSON(question.appearingCondition));\r\n            return {\r\n                question: question\r\n            }\r\n        }, () => {\r\n            destroyModal();\r\n            this.handleChange();\r\n        })\r\n    }\r\n    handleQuestionChange(e: string) {\r\n        this.setState((prevState: FormItemState) => {\r\n            let question = _.clone(prevState.question);\r\n            question.setQuestionContent({ type: QAType.String, content: e });\r\n            return {\r\n                question: question\r\n            }\r\n        }, this.handleChange.bind(this))\r\n    }\r\n    handleAnswerTypeChange(type: IValueType) {\r\n        this.setState((prevState: FormItemState) => {\r\n            let question = _.clone(prevState.question);\r\n            question.setAnswerType(type);\r\n            return {\r\n                question: question\r\n            }\r\n        }, this.handleChange.bind(this))\r\n    }\r\n    handleOptionsChange(options: AnswerOptions) {\r\n        this.setState((prevState: FormItemState) => {\r\n            let question = _.clone(prevState.question);\r\n            question.setOptions(options);\r\n            return {\r\n                question: question\r\n            }\r\n        }, this.handleChange.bind(this))\r\n    }\r\n    handleAutoFillChange(autoanswer: IAutoAnswer) {\r\n        this.setState((prevState: any) => {\r\n            let cloned: QAQuestion = _.clone(prevState.question);\r\n            cloned.setAutoAnswer(autoanswer)\r\n            return {\r\n                question: cloned\r\n            }\r\n        }, this.handleChange.bind(this))\r\n    }\r\n\r\n    handleCustomIdChange(newId: string) {\r\n        this.setState((prevState: any) => {\r\n            let cloned: QAQuestion = _.clone(prevState.question);\r\n            cloned.customId = newId;\r\n            return {\r\n                question: cloned\r\n            }\r\n        }, this.handleChange.bind(this))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Form>\r\n                <div>\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <h5 className=\"title\">Add Question</h5>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"customid\">Custom ID</label>\r\n                                <input defaultValue={this.state.question.customId} className=\"form-control\" onChange={e => this.handleCustomIdChange(e.target.value)} id=\"custom_id\" name=\"custom_id\" placeholder=\"Custom id\" />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"question\">Question</label>\r\n                                <textarea defaultValue={this.state.question.questionContent.content} className=\"form-control\" onChange={e => this.handleQuestionChange(e.target.value)} id=\"question\" name=\"question\" placeholder=\"\" />\r\n                            </FormGroup>\r\n\r\n\r\n                            <FormGroup>\r\n                                <Switch defaultChecked={this.state.question.isRequired} label=\"Required\" onChange={this.handleRequiredChange.bind(this)} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <AnswerTypeInput answerType={this.state.question.answerType} onChange={this.handleAnswerTypeChange.bind(this)} />\r\n                            </FormGroup>\r\n\r\n                            {this.state.question.answerType && this.state.question.answerType.name === ANSWER_TYPES.SELECT && this.state.question.answerType.ofType && <FormGroup >\r\n                                <label >Add Options</label>\r\n                                <Card>\r\n                                    <QAAddOptions\r\n                                        constants={this.props.constants}\r\n                                        definedQuestions={this.props.definedQuestions}\r\n                                        onChange={this.handleOptionsChange.bind(this)}\r\n                                        defaultOptionType={this.state.question.answerType}\r\n                                        options={this.state.question.options} />\r\n                                </Card>\r\n                            </FormGroup>}\r\n\r\n                            <FormGroup>\r\n                                <label htmlFor=\"type\">Appearing Condition</label>\r\n                                <div>\r\n                                    <Button type=\"button\" onClick={this.openAppearingConditionModal.bind(this)}\r\n                                        size=\"sm\">\r\n                                        <FontAwesomeIcon size={\"sm\"} icon={faKey} /></Button>\r\n\r\n                                </div>\r\n\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <FormGroup>\r\n                                    <label htmlFor=\"type\">Add Autofill Conditions</label>\r\n\r\n                                    <AutofillCondition\r\n                                        autoAnswer={this.state.question.autoAnswer}\r\n                                        definedQuestions={this.props.definedQuestions}\r\n                                        onChange={this.handleAutoFillChange.bind(this)}\r\n                                        answerType={this.state.question.answerType}\r\n                                        options={this.state.question.options} />\r\n\r\n                                </FormGroup>\r\n                            </FormGroup>\r\n\r\n\r\n                        </CardBody>\r\n\r\n                    </Card>\r\n                </div>\r\n            </Form>)\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport interface ISelectOption {\r\n    value: string | keyof typeof AnswerType,\r\n    label: string\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { faPlusSquare, faWindowClose, faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Select from 'react-select';\r\nimport { Button, Table, Card, CardHeader, CardBody, Row } from \"reactstrap\";\r\nimport { ValueType } from \"react-select/src/types\";\r\nimport { getRandomId } from \"../utils/getRandomId\";\r\nimport { customStyles, ISelectOption, getOperatorForType } from \"./DPFormItem\";\r\nimport _ from \"lodash\";\r\nimport { ValInput } from \"./ValInput\";\r\nimport { ILiteral, QAQuestion, QACondition, QAComparisonOperator, IContent, QAType, QAFollowingOperator, IAnswerOption } from \"dpform\";\r\n\r\nenum TableFieldType {\r\n    QuestionRef = 1,\r\n    ComparisonOperator,\r\n    ComparisonValue,\r\n    FollowingOperator,\r\n}\r\n\r\n\r\ntype CreateConditionState = {\r\n    literals: ILiteral[]\r\n};\r\n\r\ntype CreateConditionProps = {\r\n    definedQuestions?: { [key: string]: QAQuestion }\r\n    onChange?: (data: ILiteral[]) => void\r\n    literals?: Array<ILiteral>\r\n    setLiteralsSetter?: Function\r\n    condition?: QACondition\r\n}\r\n\r\nexport class CreateCondition extends React.Component<CreateConditionProps, CreateConditionState> {\r\n    columns: {\r\n        dataField: string;\r\n        text: string;\r\n    }[];\r\n    static get defaultProps(): CreateConditionProps {\r\n        return {\r\n            onChange: () => { },\r\n        }\r\n    };\r\n    constructor(props: CreateConditionProps) {\r\n        super(props);\r\n        this.state = {\r\n            literals: this.props.condition ? this.props.condition.literals : [],\r\n        };\r\n        this.columns = [\r\n            {\r\n                dataField: \"id\",\r\n                text: \"Literal ID\"\r\n            },\r\n            {\r\n                dataField: \"questionRef\",\r\n                text: \"Question Reference\"\r\n            },\r\n            {\r\n                dataField: \"comparisonOperator\",\r\n                text: \"Comparison Operator\"\r\n            },\r\n            {\r\n                dataField: \"comparisonValue\",\r\n                text: \"Comparison Value\"\r\n            },\r\n            {\r\n                dataField: \"followingOperator\",\r\n                text: \"Following Operator\"\r\n            }\r\n        ];\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.setLiteralsSetter) {\r\n            this.props.setLiteralsSetter(this.setLiterals.bind(this));\r\n        }\r\n    }\r\n    setLiterals(newLiterals: ILiteral[]) {\r\n        this.setState({\r\n            literals: newLiterals\r\n        });\r\n    }\r\n    addLiteral(literal?: ILiteral) {\r\n        if (!literal)\r\n            literal = { literalId: getRandomId(\"lit-\"), questionRef: undefined, comparisonOperator: undefined, comparisonValue: undefined, followingOperator: undefined };\r\n\r\n        this.setState((prevState: CreateConditionState) => {\r\n            let newLiterals = _.clone(prevState.literals);\r\n            if (literal) newLiterals.push(literal);\r\n            return { literals: newLiterals };\r\n        }, () => {\r\n            if (this.props.onChange) {\r\n\r\n                this.props.onChange(this.state.literals);\r\n            }\r\n        });\r\n    }\r\n    moveLiteralUp(index: number) {\r\n        this.setState((prevState: CreateConditionState) => {\r\n            let newLiterals = _.clone(prevState.literals);\r\n            const get_new_index = (i: number, length: number) => {\r\n                const mod = (x: number, n: number) => (x % n + n) % n;\r\n                return mod(i - 1, length);\r\n            };\r\n            let newIndex = get_new_index(index, newLiterals.length);\r\n            [newLiterals[index], newLiterals[newIndex]] = [newLiterals[newIndex], newLiterals[index]];\r\n            return {\r\n                literals: newLiterals\r\n            };\r\n        }, this.forceUpdate.bind(this));\r\n    }\r\n    handleDataChange(literalIndex: number, valueField: TableFieldType, newValue: any) {\r\n        this.setState((prevState: CreateConditionState) => {\r\n            let newLiterals: ILiteral[] = _.clone(prevState.literals);\r\n            let current = newLiterals[literalIndex];\r\n            switch (valueField) {\r\n                case TableFieldType.QuestionRef:\r\n                    current.questionRef = newValue && newValue.value ? newValue.value : undefined;\r\n                    break;\r\n                case TableFieldType.ComparisonOperator:\r\n                    let prop: keyof typeof QAComparisonOperator;\r\n                    let accessProp: keyof typeof QAComparisonOperator;\r\n                    for (prop in QAComparisonOperator) {\r\n                        if (QAComparisonOperator[prop] === newValue.value) {\r\n                            accessProp = prop;\r\n                            current.comparisonOperator = QAComparisonOperator[accessProp];\r\n                            break;\r\n                        }\r\n                    }\r\n                    break;\r\n                case TableFieldType.ComparisonValue:\r\n                    let newComparisonValue: IContent = { content: newValue.value, type: QAType.String };\r\n                    current.comparisonValue = newComparisonValue;\r\n                    break;\r\n                case TableFieldType.FollowingOperator:\r\n                    current.followingOperator = (newValue.value === QAFollowingOperator.AND) ? QAFollowingOperator.AND : QAFollowingOperator.OR;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            return {\r\n                literals: newLiterals\r\n            };\r\n        }, () => {\r\n            if (this.props.onChange)\r\n                this.props.onChange(this.state.literals);\r\n        });\r\n    }\r\n    getQuestion(questionRef?: string) {\r\n        if (questionRef && this.props.definedQuestions && !_.isEmpty(this.props.definedQuestions)) {\r\n            let v = this.props.definedQuestions[questionRef];\r\n            return v;\r\n        }\r\n        return null;\r\n    }\r\n    removeLiteral(index: number) {\r\n        this.setState((prevState: CreateConditionState) => {\r\n            let newLiterals = _.clone(prevState.literals);\r\n            newLiterals.splice(index, 1);\r\n            return {\r\n                literals: newLiterals\r\n            };\r\n        }, () => {\r\n            if (this.props.onChange) {\r\n                this.props.onChange(this.state.literals);\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        return (<Card>\r\n            <CardHeader>{`${this.props.condition ? \"Edit\" : \"Add\"} Condtion`}</CardHeader>\r\n            <CardBody>\r\n                <Row>\r\n                    <Table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th key=\"th-first\">{``}</th>\r\n                                {this.columns.map((item, key) => {\r\n                                    return <th key={key}>{item.text}</th>;\r\n                                })}\r\n                                <th key=\"th-last\">{``}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.literals.map((item: ILiteral, key: number) => {\r\n                                let questions_ = this.props.definedQuestions ? Object.values(this.props.definedQuestions).map((item: QAQuestion) => ({ value: item.id, label: item.questionContent.content })) : [];\r\n                                let questionselect = <Select key={`literalq-${key}-${item.literalId}`} styles={customStyles} options={questions_} value={questions_.find((r: { value: string, label: string }) => r.value === item.questionRef)} onChange={(selecteOption: ValueType<IAnswerOption>) => this.handleDataChange(key, TableFieldType.QuestionRef, selecteOption)} />;\r\n                                let selectedQuestionType = item.questionRef && this.props.definedQuestions && this.props.definedQuestions[item.questionRef] ? this.props.definedQuestions[item.questionRef].answerType : undefined;\r\n                                let comparisionOPOptions_: ISelectOption[] = getOperatorForType(selectedQuestionType).map((val, index) => ({ value: val, label: val }));\r\n                                let comparisonOpSelect = <Select key={`literalo-${key}-${item.literalId}`} styles={customStyles} options={comparisionOPOptions_} value={comparisionOPOptions_.find((op, index) => op.value === item.comparisonOperator)} onChange={this.handleDataChange.bind(this, key, TableFieldType.ComparisonOperator)} />;\r\n                                let question_: QAQuestion | null = this.getQuestion(item.questionRef);\r\n                                let qAnswerType = question_ ? question_.answerType : undefined;\r\n                                let qOptions = question_ && question_.options ? question_.options : undefined;\r\n                                let comparisonValueSelect = <ValInput options={qOptions} key={`literalv-${key}-${item.literalId}`} onChange={this.handleDataChange.bind(this, key, TableFieldType.ComparisonValue)} defaultValue={item.comparisonValue && item.comparisonValue.content} type={qAnswerType} />;\r\n                                let followingOperatorOptions_: ISelectOption[] = Object.keys(QAFollowingOperator).map((key) => ({ label: key, value: key === \"AND\" ? QAFollowingOperator.AND : key === \"OR\" ? QAFollowingOperator.OR : \"\" }));\r\n                                let followingOperatorSelect = <Select key={`literalfo-${key}-${item.literalId}`} styles={customStyles} options={followingOperatorOptions_} value={followingOperatorOptions_.find(r => r.value === item.followingOperator)} onChange={this.handleDataChange.bind(this, key, TableFieldType.FollowingOperator)} />;\r\n                                return <tr key={\"tr_\" + key}>\r\n                                    <td><Button type=\"button\" size=\"sm\" onClick={() => this.moveLiteralUp(key)}><FontAwesomeIcon icon={faArrowUp} /></Button></td>\r\n                                    <td>l<sub>{key}</sub></td>\r\n                                    <td className=\"questionRef\">{questionselect}</td>\r\n                                    <td className=\"comparisonOperator\">{comparisonOpSelect}</td>\r\n                                    <td className=\"comparisonValue\">{comparisonValueSelect}</td>\r\n                                    <td className=\"followingOperator\">{followingOperatorSelect}</td>\r\n                                    <td><Button size=\"sm\" onClick={() => { this.removeLiteral(key); }}> <FontAwesomeIcon icon={faWindowClose} /></Button></td>\r\n                                </tr>;\r\n                            })}\r\n                            <tr>\r\n                                <td><Button size=\"sm\" onClick={() => this.addLiteral()} type=\"button\">\r\n                                    <FontAwesomeIcon icon={faPlusSquare} />\r\n                                </Button></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n\r\n            </CardBody>\r\n        </Card>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Button, Row, ModalFooter, ModalBody } from \"reactstrap\";\r\nimport Modal from \"react-modal\";\r\nimport { CreateCondition } from \"./CreateCondition\";\r\nimport { ILiteral, QAQuestion, QACondition } from \"dpform\";\r\n\r\n\r\n\r\ninterface CreateConditionModalState {\r\n    isOpen: boolean,\r\n    literals: ILiteral[],\r\n    errors: { message: string }[]\r\n}\r\n\r\ninterface CreateConditionModalProp {\r\n    isOpen: boolean\r\n    definedQuestions: {[key:string]: QAQuestion}\r\n    onSubmit?: (data: ILiteral[]) => void;\r\n    onCancel?: (data: ILiteral[]) => void;\r\n    condition?: QACondition\r\n}\r\n\r\n\r\nexport class CreateConditionModal extends React.Component<CreateConditionModalProp, CreateConditionModalState> {\r\n    createCondition_: React.RefObject<CreateCondition>;\r\n    static defaultProps = {\r\n        isOpen: false,\r\n        condition: new QACondition()\r\n    };\r\n\r\n    constructor(props: CreateConditionModalProp) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: this.props.isOpen,\r\n            literals: this.props.condition && this.props.condition.literals ? this.props.condition.literals : [],\r\n            errors: []\r\n        };\r\n        this.createCondition_ = React.createRef();\r\n    }\r\n    handleChange = (data: ILiteral[]) => {\r\n        this.setState({\r\n            errors: [],\r\n            literals: data\r\n        });\r\n    };\r\n    primaryButtonHandler = () => {\r\n        let newCondition = new QACondition().setLiterals(this.state.literals);\r\n        let isValid = QACondition.checkIfValid(newCondition);\r\n        if (!isValid) {\r\n            this.setState({\r\n                errors: [{ message: \"Condition is not valid!\" }]\r\n            });\r\n            return;\r\n        }\r\n        if (this.props.onSubmit) {\r\n            this.props.onSubmit(this.state.literals);\r\n        }\r\n    };\r\n    secondaryButtonHandler = () => {\r\n        if (this.props.onCancel) {\r\n            this.props.onCancel(this.state.literals);\r\n        }\r\n    };\r\n    render() {\r\n        const customStyles = {\r\n            content: {\r\n                top: '50%',\r\n                left: '50%',\r\n                right: 'auto',\r\n                bottom: 'auto',\r\n                marginRight: '-50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                minHeight: \"400px\",\r\n                backgroundColor: \"#27293d\"\r\n            },\r\n            overlay: {\r\n                backgroundColor: \"rgba(0, 0, 0, 0.50)\"\r\n            }\r\n        };\r\n        return (<Modal style={customStyles} isOpen={this.props.isOpen}>\r\n            <ModalBody>\r\n\r\n                {this.props.isOpen && <CreateCondition definedQuestions = {this.props.definedQuestions} condition={this.props.condition ? this.props.condition : undefined} ref={this.createCondition_} onChange={(data) => this.handleChange(data)} />}\r\n                <Row>\r\n                    <div className=\"btn-danger\">{this.state.errors.map((item: { message: string }) => item.message)}</div>\r\n                </Row>\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n                <Button color=\"primary\" onClick={this.primaryButtonHandler}>Submit</Button>\r\n                <Button color=\"secondary\" onClick={this.secondaryButtonHandler}>Cancel</Button>\r\n            </ModalFooter>\r\n        </Modal>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { ButtonGroup, Button, Switch, Classes, Divider } from \"@blueprintjs/core\";\r\nimport Select from \"react-select\";\r\nimport { customStyles } from \"./DPFormItem\";\r\nimport _ from \"lodash\";\r\nimport classNames from \"classnames\";\r\nimport { IDupeSettings, QAQuestion, DuplicateTimesType } from \"dpform\";\r\n\r\ninterface DuplicateSettingsProps extends IDupeSettings {\r\n    definedQuestions: { [key: string]: QAQuestion }\r\n    handleSave: (dupe: IDupeSettings) => void,\r\n    handleCancel: () => void\r\n\r\n}\r\ninterface DuplicateSettingsState extends IDupeSettings {\r\n\r\n}\r\n\r\nexport class DuplicateSettings extends React.Component<DuplicateSettingsProps, DuplicateSettingsState>{\r\n    constructor(props: DuplicateSettingsProps) {\r\n        super(props);\r\n        this.state = {\r\n            isEnabled: this.props.isEnabled,\r\n            condition: this.props.condition,\r\n            duplicateTimes: this.props.duplicateTimes\r\n        }\r\n    }\r\n\r\n    private handleQuestionRefChange(newValue: any) {\r\n        this.setState({\r\n            duplicateTimes: { value: newValue.value, type: \"questionRef\" }\r\n        })\r\n    }\r\n    private handleNumberTimesChange(newValue: string) {\r\n        this.setState({\r\n            duplicateTimes: { value: newValue, type: \"number\" }\r\n        })\r\n    }\r\n    private handleTypeChange(newType: any) {\r\n        this.setState((prevState: DuplicateSettingsState) => {\r\n            return {\r\n                duplicateTimes: { value: \"\", type: newType.value }\r\n            }\r\n        })\r\n    }\r\n    private handleEnabledChange() {\r\n        this.setState((prevState: DuplicateSettingsState) => {\r\n            return {\r\n                isEnabled: !prevState.isEnabled\r\n            }\r\n        })\r\n    }\r\n    private generateValueComponent(type?: string) {\r\n        if (type === \"questionRef\") {\r\n            let options = Object.values(this.props.definedQuestions).map(item => ({ value: item.id, label: item.questionContent.content }));\r\n            let selected = this.state.duplicateTimes.type === \"questionRef\" ? options.find(item => item.value === this.state.duplicateTimes.value) : undefined;\r\n            return <Select styles={customStyles} options={options} defaultValue={selected} onChange={this.handleQuestionRefChange.bind(this)} />\r\n        }\r\n        return <input\r\n            defaultValue={this.state.duplicateTimes.type === \"number\" ? this.state.duplicateTimes.value : \"\"}\r\n            type=\"number\" className=\"form-control\"\r\n            onChange={e => this.handleNumberTimesChange(e.target.value)} />\r\n    }\r\n    private handleSave() {\r\n        let isInvalid = _.values(this.state).every(_.isEmpty);\r\n        if (!isInvalid) {\r\n            this.props.handleSave({ isEnabled: this.state.isEnabled, condition: this.state.condition, duplicateTimes: this.state.duplicateTimes })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let typeOptions = [{ value: \"number\", label: \"Number\" }, { value: \"questionRef\" as DuplicateTimesType, label: \"AnswerValue\" as DuplicateTimesType }];\r\n        let defaultValue = typeOptions.find(item => item.value === this.state.duplicateTimes.type);\r\n\r\n        return (\r\n\r\n            <ButtonGroup className={classNames(Classes.ELEVATION_2, Classes.DARK)} vertical fill>\r\n                <Switch onChange={this.handleEnabledChange.bind(this)} defaultChecked={this.props.isEnabled}>Enabled</Switch>\r\n                <Divider />\r\n                <Select menuContainerStyle={{ zIndex: 99999 }}\r\n                    styles={customStyles}\r\n                    onChange={(e: any) => this.handleTypeChange(e)}\r\n                    options={typeOptions}\r\n                    defaultValue={defaultValue}></Select>\r\n                {this.generateValueComponent(this.state.duplicateTimes.type)}\r\n                <Divider />\r\n                <ButtonGroup fill>\r\n                    <Button onClick={this.handleSave.bind(this)}>\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={this.props.handleCancel}>\r\n                        Cancel\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </ButtonGroup>\r\n\r\n\r\n        )\r\n    }\r\n}","import { ReactNode, useState } from \"react\";\r\n\r\nimport { Badge } from \"reactstrap\";\r\nimport React from \"react\";\r\nimport { Button, ButtonGroup, Collapse, Divider } from \"@blueprintjs/core\";\r\n\r\ninterface QuestionButtonProps {\r\n    questionId: string,\r\n    questionTitle: string,\r\n    isExpanded: boolean,\r\n    children: ReactNode,\r\n    path: number[],\r\n    readablePath: string,\r\n    handleDeletion: (id: string, path_: number[]) => void,\r\n    handleMoveUp: (id: string, path_: number[]) => void,\r\n}\r\n\r\nexport const QuestionButton = (props: QuestionButtonProps) => {\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n    return (\r\n        <ButtonGroup className=\"bp3-dark\" style={{ paddingBottom: \"20px\" }} fill vertical>\r\n            <ButtonGroup>\r\n                <Button onClick={() => props.handleMoveUp(props.questionId, props.path)} style={{ height: 50, width: 20 }} icon={\"arrow-up\"} />\r\n\r\n                <Button style={{ height: 50 }} onClick={() => setIsExpanded(!isExpanded)} alignText={\"left\"} rightIcon={isExpanded ? \"chevron-up\" : \"chevron-down\"}><Badge color=\"secondary\">Q</Badge> <span>{props.readablePath} </span> <span> {props.questionTitle} </span></Button>\r\n                <Button onClick={() => props.handleDeletion(props.questionId, props.path)} style={{ height: 50, width: 20 }} alignText=\"left\" rightIcon={\"cross\"} />\r\n            </ButtonGroup>\r\n            <Collapse keepChildrenMounted={false} isOpen={isExpanded}>\r\n                {props.children}\r\n            </Collapse>\r\n        </ButtonGroup>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import { Badge, Row } from \"reactstrap\";\r\n\r\nimport React, { ReactNode, useState } from \"react\";\r\nimport { ButtonGroup, Button, Collapse, EditableText, Card, Divider, H5, Navbar, Alignment, NavbarDivider } from \"@blueprintjs/core\";\r\n\r\ninterface SectionButtonProps {\r\n    sectionId: string;\r\n    onClick: (id: string, path: number[]) => void;\r\n    path: number[];\r\n    readablePath: string;\r\n    handleDeletion: (id: string, path: number[]) => void;\r\n    handleMoveUp: (id: string, path: number[]) => void;\r\n    children: ReactNode;\r\n    handleSectionNameChange: (v: string) => void;\r\n    handleOpenConditionSettings: () => void;\r\n    handleCustomIdChange: (v: string)=>void;\r\n    sectionName: string;\r\n    customId: string;\r\n\r\n}\r\nexport const SectionButton = (props: SectionButtonProps) => {\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n    return (\r\n        <ButtonGroup className=\"bp3-dark\" style={{ paddingBottom: \"20px\" }} fill vertical>\r\n            <ButtonGroup>\r\n                <Button style={{ width: 20 }} icon=\"arrow-up\" onClick={() => props.handleMoveUp(props.sectionId, props.path)} />\r\n\r\n                <Navbar>\r\n                    <Navbar.Group align={Alignment.LEFT}>\r\n                        <H5>\r\n                            <span>{props.readablePath} </span>\r\n                            <EditableText onChange={props.handleSectionNameChange} placeholder=\"Section\" defaultValue={props.sectionName}> </EditableText>\r\n                        </H5>\r\n                    </Navbar.Group>\r\n                    <Navbar.Group align={Alignment.RIGHT}>\r\n                        <EditableText onChange={props.handleCustomIdChange} placeholder=\"Custom Id\" defaultValue={props.customId}> </EditableText>\r\n\r\n                        <Button icon=\"key\" onClick={() => props.handleOpenConditionSettings()}></Button>\r\n\r\n                        <Button onClick={() => setIsExpanded(!isExpanded)} icon=\"cog\"></Button>\r\n                        <Button icon=\"folder-open\" onClick={() => props.onClick(props.sectionId, props.path)}></Button>\r\n                    </Navbar.Group>\r\n                </Navbar>\r\n                <Button style={{ width: 20 }} icon=\"cross\" onClick={() => props.handleDeletion(props.sectionId, props.path)} />\r\n            </ButtonGroup>\r\n\r\n            <Collapse isOpen={isExpanded} keepChildrenMounted={false}>\r\n                {props.children}\r\n            </Collapse>\r\n\r\n        </ButtonGroup>\r\n    )\r\n}","import { ButtonGroup } from \"@blueprintjs/core\";\r\nimport { Constants, getReadablePath, IDupeSettings, ILiteral, QACondition, QAQuestion, QuestionSection, RootSection } from \"dpform\";\r\nimport React from \"react\";\r\nimport { destroyModal, openModal } from \"../utils\";\r\nimport { CreateConditionModal } from \"./CreateConditionModal\";\r\nimport { DPFormItem } from \"./DPFormItem\";\r\nimport { DuplicateSettings } from \"./duplicateSettings\";\r\nimport { QuestionButton } from \"./questionButton\";\r\nimport { SectionButton } from \"./sectionButton\";\r\n\r\ninterface SectionCProps {\r\n    constants: Constants;\r\n    section: QuestionSection | RootSection;\r\n    definedQuestions: { [key: string]: QAQuestion };\r\n    handleQuestionChange: (question: QAQuestion, _path: number[]) => void;\r\n    parentPath: number[];\r\n    handleDeleteChildSectionOrQuestion: (deleteid: string, _path: number[]) => void;\r\n    handleSectionDuplicatingSettingsChange: (id: string, dupe: IDupeSettings) => void;\r\n    handleSectionClick: (sectionid: string, _path: number[]) => void;\r\n    handleSectionNameChange: (id: string, v: string) => void;\r\n    handleMoveUp: (id: string, path: number[]) => void;\r\n    handleSectionConditionChange: (sectionId: string, literals: ILiteral[]) => void;\r\n    handleSectionCustomIdChange: (sectionId: string, customId: string) => void;\r\n}\r\ninterface SectionCState {\r\n}\r\nexport class SectionC extends React.Component<SectionCProps, SectionCState>{\r\n    constructor(props: SectionCProps) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    handleQuestionChange(q: QAQuestion, path: number[]) {\r\n        if (this.props.handleQuestionChange) this.props.handleQuestionChange(q, path);\r\n    }\r\n    handleDuplicatingSettingsSave(id: string, dupe: IDupeSettings) {\r\n        if (this.props.handleSectionDuplicatingSettingsChange) this.props.handleSectionDuplicatingSettingsChange(id, dupe)\r\n    }\r\n    handleDuplicatingSettingsCancel() {\r\n\r\n    }\r\n    openConditionSettings(section: QuestionSection) {\r\n        const condition: QACondition = section.appearingCondition;\r\n\r\n        let el = <CreateConditionModal\r\n            definedQuestions={this.props.definedQuestions}\r\n            isOpen={true}\r\n            onSubmit={(l) => {\r\n                this.props.handleSectionConditionChange(section.id, l);\r\n                destroyModal();\r\n            }}\r\n            onCancel={destroyModal.bind(this)}\r\n            condition={condition} />\r\n        openModal(el);\r\n    }\r\n\r\n    render() {\r\n        let comp = null;\r\n        let readablePath = getReadablePath(this.props.parentPath);\r\n        if (readablePath) readablePath += \".\";\r\n        comp = this.props.section.content.map((item, index) => {\r\n            let childPath = this.props.parentPath.concat(index);\r\n            if (item instanceof QAQuestion) {\r\n                return <QuestionButton\r\n                    questionTitle={item.questionContent.content}\r\n                    handleMoveUp={this.props.handleMoveUp}\r\n                    path={childPath}\r\n                    questionId={item.id}\r\n                    handleDeletion={this.props.handleDeleteChildSectionOrQuestion}\r\n                    readablePath={readablePath + (index + 1)}\r\n                    key={item.id}\r\n                    isExpanded={false}>\r\n                    <DPFormItem\r\n                        constants={this.props.constants}\r\n                        definedQuestions={this.props.definedQuestions}\r\n                        onChange={(q) => this.handleQuestionChange(q, childPath)}\r\n                        question={item} />\r\n                </QuestionButton>\r\n            }\r\n            else if (item instanceof QuestionSection) {\r\n                return <SectionButton\r\n                    customId={item.customId}\r\n                    handleCustomIdChange={(v) => this.props.handleSectionCustomIdChange(item.id, v)}\r\n                    handleMoveUp={this.props.handleMoveUp}\r\n                    sectionName={item.name}\r\n                    handleSectionNameChange={(v) => this.props.handleSectionNameChange(item.id, v)}\r\n                    path={childPath}\r\n                    handleDeletion={this.props.handleDeleteChildSectionOrQuestion}\r\n                    sectionId={item.id} readablePath={readablePath + (index + 1)}\r\n                    handleOpenConditionSettings={() => this.openConditionSettings(item)}\r\n                    key={item.id} onClick={this.props.handleSectionClick}>\r\n                    <DuplicateSettings definedQuestions={this.props.definedQuestions} handleSave={(d) => this.handleDuplicatingSettingsSave(item.id, d)} handleCancel={this.handleDuplicatingSettingsCancel} {...item.duplicatingSettings} />\r\n                </SectionButton>\r\n            }\r\n            return null;\r\n        })\r\n        return (\r\n            <ButtonGroup fill vertical>\r\n                {comp}\r\n\r\n            </ButtonGroup>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { Navbar, Alignment, Button, IconName, EditableText } from \"@blueprintjs/core\";\r\nimport React, { ReactNode } from \"react\";\r\n\r\nconst toolbarItems = [\r\n\r\n    {\r\n        type: \"button\",\r\n        name: \"up-one-level\",\r\n        icon: \"arrow-up\",\r\n        text: \"\"\r\n    },\r\n    {\r\n        type: \"button\",\r\n        name: \"save-root\",\r\n        icon: \"floppy-disk\",\r\n        text: \"Save Form\"\r\n    },\r\n    {\r\n        type: \"button\",\r\n        name: \"add-section\",\r\n        icon: \"box\",\r\n        text: \"Add Section\"\r\n    },\r\n    {\r\n        type: \"button\",\r\n        name: \"add-question\",\r\n        icon: \"document\",\r\n        text: \"Add Question\"\r\n    },\r\n    {\r\n        type: \"button\",\r\n        name: \"copy-state\",\r\n        icon: \"clipboard\",\r\n        text: \"Copy State\"\r\n    },\r\n\r\n]\r\ninterface ToolbarProps {\r\n    handleItemClick: (tItem: string) => void,\r\n    children: ReactNode,\r\n}\r\ninterface ToolbarState {\r\n\r\n}\r\nexport class Toolbar extends React.Component<ToolbarProps, ToolbarState>{\r\n    constructor(props: ToolbarProps) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    handleClick(name: string) {\r\n        if (this.props.handleItemClick) this.props.handleItemClick(name)\r\n    }\r\n    render() {\r\n        return (\r\n            <Navbar className=\"bp3-dark\" fixedToTop>\r\n                <Navbar.Group align={Alignment.LEFT}>\r\n                    {this.props.children}\r\n                    {toolbarItems.map(item => <Button onClick={this.handleClick.bind(this, item.name)} key={item.name} icon={item.icon as IconName} text={item.text} className=\"bp3-minimal\" />)}\r\n                </Navbar.Group>\r\n            </Navbar>\r\n        )\r\n    }\r\n\r\n}","\r\nimport { EditableText, Intent, IToastProps, ITreeNode, Toaster } from \"@blueprintjs/core\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport { Constants, IDupeSettings, ILiteral, QAQuestion, QORS, QuestionSection, request, RootSection } from \"dpform\";\r\nimport _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { Row } from \"reactstrap\";\r\nimport { ConstantDefinitions } from \"./constants\";\r\nimport { FormTree } from \"./formtree\";\r\nimport { SectionC } from \"./section\";\r\nimport { Toolbar } from \"./Toolbar\";\r\n\r\n\r\n\r\n\r\ninterface SurveyFormState {\r\n    activeSection: QuestionSection | RootSection,\r\n    activeSectionPath: number[]\r\n    selectedNodes: string[],\r\n    expandedNodes: string[],\r\n    root: RootSection,\r\n    constants: Constants,\r\n\r\n}\r\ninterface SurveyFormProps {\r\n    root: RootSection,\r\n    onChange: (root: RootSection) => void,\r\n    token: string,\r\n\r\n}\r\n\r\n\r\nexport class SurveyForm extends React.Component<SurveyFormProps, SurveyFormState>{\r\n\r\n    private toasterRef!: Toaster;\r\n\r\n    constructor(props: SurveyFormProps) {\r\n        super(props);\r\n        this.state = {\r\n            selectedNodes: [],\r\n            expandedNodes: [this.props.root.id],\r\n            root: this.props.root,\r\n            activeSection: this.props.root,\r\n            activeSectionPath: [0],\r\n            constants: new Constants(),\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.loadForm();\r\n    }\r\n\r\n    loadForm() {\r\n        let requestBody = {\r\n            query: `\r\n            query GetForm($formId: [String]!){\r\n                forms(id: $formId){\r\n                  id\r\n                  name\r\n                  content\r\n                }\r\n              }`,\r\n            variables: {\r\n                formId: \"root-53c37497-3808-cfd8-c886-1361dbaab171\"\r\n            }\r\n        }\r\n        let token = this.props.token;\r\n        return request(\"http://localhost:5000/graphql\", \"forms\", requestBody, \"Could not delete the game file\", token).then(file => {\r\n            file = file[0]\r\n            if (file) {\r\n                file.content = JSON.parse(file.content);\r\n                console.log(file.id);\r\n\r\n                let root: RootSection = RootSection.fromJSON(file);\r\n                let valbag: (QuestionSection | QAQuestion)[] = []\r\n                let iterated = this.getAllEntries([0, 1], 6, root, null, true, valbag);\r\n                console.log(iterated);\r\n                // let ir = this.Iterator2(root, [0], 0, QORS.QUESTION);\r\n                this.setState({\r\n                    root: root,\r\n                    activeSection: root,\r\n                    activeSectionPath: [0]\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    getAllEntries(startSectionPath: number[], startIndex: number, root: RootSection, fetchType: QORS | null, first: boolean = true, returnbag?: (QuestionSection | QAQuestion)[]) {\r\n        if (!returnbag) returnbag = [];\r\n        if (startSectionPath.length <= 0) return;\r\n        let section = RootSection.getFromPath(startSectionPath, [root]);\r\n        if (!section) return;\r\n        for (let i = startIndex; i < section.content.length; i++) {\r\n            let current = section.content[i];\r\n            if (current instanceof QAQuestion) {\r\n                if (fetchType === QORS.QUESTION || !fetchType) returnbag.push(current);\r\n\r\n            }\r\n            else if (current instanceof QuestionSection) {\r\n                if (fetchType === QORS.SECTION || !fetchType) returnbag.push(current);\r\n                this.getAllEntries(startSectionPath.concat(i), 0, root, fetchType, false, returnbag);\r\n            }\r\n        }\r\n        if (first) {\r\n            let cloned = startSectionPath.slice(0);\r\n            let index = cloned.pop();\r\n            if (typeof (index) === \"number\") {\r\n                this.getAllEntries(cloned, index, root, fetchType, true, returnbag);\r\n            }\r\n        }\r\n        return returnbag;\r\n    }\r\n\r\n    handleAddSection() {\r\n        this.setState((prevState: SurveyFormState) => {\r\n            let cloned = _.clone(prevState.root);\r\n            cloned.addSection(this.state.activeSectionPath);\r\n            return {\r\n                root: cloned\r\n            }\r\n        }, () => {\r\n            if (this.props.onChange) this.props.onChange(this.state.root);\r\n        })\r\n    }\r\n\r\n    handleAddQuestion() {\r\n        this.setState((prevState: SurveyFormState) => {\r\n            let cloned = _.clone(prevState.root);\r\n            cloned.addQuestion(this.state.activeSectionPath);\r\n            return {\r\n                root: cloned,\r\n            }\r\n        }, () => {\r\n            if (this.props.onChange) this.props.onChange(this.state.root);\r\n        })\r\n    }\r\n    handleDeleteQuestionOrSection(deleteid: string, path_: number[]) {\r\n        this.setState((prevState: SurveyFormState) => {\r\n            let activeSection = prevState.activeSection;\r\n            let activeSectionPath = prevState.activeSectionPath;\r\n            let parent = path_.slice(0, path_.length - 1);\r\n            let cloned = _.clone(prevState.root);\r\n            let item = RootSection.getFromPath(path_, [this.state.root]);\r\n            if (item && deleteid !== item.id) throw new Error(\"cannot delete, id mismatch\");\r\n            if (item instanceof QAQuestion) {\r\n                cloned.removeQuestion(item.id, path_);\r\n            }\r\n            else if (item instanceof QuestionSection) {\r\n                cloned.removeSection(item.id, path_);\r\n                if (item.id === prevState.activeSection.id) {\r\n                    let parentSection = RootSection.getFromPath(parent, [this.state.root]);\r\n                    if (parentSection && !(parentSection instanceof QAQuestion)) {\r\n                        activeSection = parentSection;\r\n                        activeSectionPath = parent;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {\r\n                root: cloned,\r\n                activeSection: activeSection,\r\n                activeSectionPath: activeSectionPath\r\n            }\r\n        }, () => {\r\n            if (this.props.onChange) this.props.onChange(this.state.root);\r\n        })\r\n    }\r\n    private handleUpOneLevel() {\r\n\r\n        if (this.state.activeSectionPath.length > 1) {\r\n            let newSectionPath = this.state.activeSectionPath.slice(0, this.state.activeSectionPath.length - 1);\r\n            let newSection = RootSection.getFromPath(newSectionPath, [this.state.root]);\r\n            if (newSection && !(newSection instanceof QAQuestion)) {\r\n                this.setState((prevState: SurveyFormState) => {\r\n                    return {\r\n                        activeSection: !newSection ? prevState.activeSection : newSection instanceof QAQuestion ? prevState.activeSection : newSection,\r\n                        activeSectionPath: newSectionPath\r\n                    }\r\n\r\n                })\r\n            }\r\n        }\r\n    }\r\n    private handleSave() {\r\n        let file = RootSection.toJSON(this.state.root);\r\n        file.content = JSON.stringify(file.content);\r\n        if (!file.name) file.name = \"Main Form\";\r\n        let requestBody = {\r\n            query: `\r\n            mutation SaveForm($saveFile: FormFileInput!){\r\n                saveForm(form: $saveFile){\r\n                  id\r\n                }\r\n              }`,\r\n            variables: {\r\n                saveFile: file\r\n            }\r\n        }\r\n        let token = this.props.token;\r\n        return request(\"http://localhost:5000/graphql\", \"saveForm\", requestBody, \"Could not save the  file\", token).then(re => console.log(re));\r\n    }\r\n\r\n\r\n    handleToolbarItemClick(name: string) {\r\n        switch (name) {\r\n            case \"add-section\":\r\n                this.handleAddSection()\r\n                break;\r\n            case \"add-question\":\r\n                this.handleAddQuestion();\r\n                break;\r\n            case \"up-one-level\":\r\n                this.handleUpOneLevel();\r\n                break;\r\n            case \"save-root\":\r\n                this.handleSave();\r\n                break;\r\n\r\n            case \"copy-state\":\r\n                let data = JSON.stringify(RootSection.toJSON(this.state.root));\r\n                copy(data);\r\n                let toast: IToastProps = {\r\n                    message: \"Copied state to clipboard\",\r\n                    icon: \"tick\",\r\n                    intent: Intent.SUCCESS,\r\n                }\r\n                this.toasterRef.show(toast)\r\n\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleQuestionUpdate(question: QAQuestion, path: number[]) {\r\n        this.setState((prevState: SurveyFormState) => {\r\n            let cloned = _.clone(prevState.root);\r\n            let parent = path.slice(0, path.length - 1);\r\n            let parentSection = RootSection.getFromPath(parent, [cloned]);\r\n            if (!(parentSection instanceof QAQuestion)) {\r\n                let q = this.state.root.questions[question.id];\r\n                q.updateFromQuestion(question);\r\n\r\n            }\r\n\r\n            return {\r\n                root: cloned\r\n            }\r\n        }, () => {\r\n            if (this.props.onChange) this.props.onChange(this.state.root);\r\n        })\r\n    }\r\n\r\n\r\n    handleFormTreeNodeExpand(nodeData: ITreeNode, _nodePath: number[], e: React.MouseEvent<HTMLElement>) {\r\n        nodeData.isExpanded = true;\r\n        let item = RootSection.getFromPath(_nodePath, [this.state.root]);\r\n        if (item) {\r\n            this.setState((prevState: SurveyFormState) => {\r\n                let expandedNodes = item ? _.union([item.id], prevState.expandedNodes) : prevState.expandedNodes;\r\n                return {\r\n                    expandedNodes: expandedNodes\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleFormTreeNodeCollapse(nodeData: ITreeNode) {\r\n        this.setState((prevState: SurveyFormState) => {\r\n            let expandedNodes = prevState.expandedNodes.filter((item => nodeData.id !== item));\r\n            return {\r\n                expandedNodes: expandedNodes\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    handleFormTreeNodeClick(nodeData: ITreeNode, _nodePath: number[], e: React.MouseEvent<HTMLElement>) {\r\n        let item = RootSection.getFromPath(_nodePath, [this.state.root]);\r\n        if (item && !(item instanceof QAQuestion)) {\r\n            this.setState((prevState: SurveyFormState) => {\r\n\r\n                let expandedNodes = item ? _.union([item.id], prevState.expandedNodes) : prevState.expandedNodes;\r\n                let selectedNodes = item ? [item.id] : prevState.selectedNodes;\r\n                return {\r\n                    selectedNodes: selectedNodes,\r\n                    expandedNodes: expandedNodes,\r\n                    activeSection: item && !(item instanceof QAQuestion) ? item : prevState.activeSection,\r\n                    activeSectionPath: _nodePath\r\n                }\r\n\r\n            })\r\n        }\r\n        else if (item) {\r\n            this.setState((prevState: SurveyFormState) => {\r\n                let parent = _nodePath.length > 1 ? _nodePath.slice(0, _nodePath.length - 1) : _nodePath;\r\n                let parentSection = RootSection.getFromPath(parent, [prevState.root]);\r\n                let selectedQuestion = RootSection.getFromPath(_nodePath, [prevState.root]);\r\n                let expandedNodes = prevState.expandedNodes;\r\n                let selectedNodes = selectedQuestion ? [selectedQuestion.id] : prevState.selectedNodes;\r\n                if (parentSection && !(parentSection instanceof QAQuestion)) {\r\n                    expandedNodes = _.union([parentSection.id], expandedNodes);\r\n                    selectedNodes.push(parentSection.id);\r\n                }\r\n\r\n                return {\r\n                    expandedNodes: expandedNodes,\r\n                    selectedNodes: selectedNodes,\r\n                    activeSection: parentSection && !(parentSection instanceof QAQuestion) ? parentSection : prevState.activeSection,\r\n                    activeSectionPath: parent\r\n                }\r\n\r\n\r\n            })\r\n        }\r\n    }\r\n    handleRootNameChange(newName: string) {\r\n        this.setState((prevState: SurveyFormState) => {\r\n            let cloned = _.clone(prevState.root);\r\n            cloned.name = newName;\r\n            return {\r\n                root: cloned\r\n            }\r\n        }, () => {\r\n            if (this.props.onChange) this.props.onChange(this.state.root);\r\n        })\r\n    }\r\n\r\n    handleSectionChange(id: string, path: number[]) {\r\n        this.setState((prevState: SurveyFormState) => {\r\n            let section = RootSection.getFromPath(path, [prevState.root]);\r\n            let expandedNodes = prevState.expandedNodes;\r\n            let selectedNodes = []\r\n            if (section && section instanceof QuestionSection) {\r\n                expandedNodes = _.union([section.id], expandedNodes);\r\n                selectedNodes.push(section.id);\r\n            }\r\n            return {\r\n                expandedNodes: expandedNodes,\r\n                selectedNodes: selectedNodes,\r\n                activeSection: section && !(section instanceof QAQuestion) ? section : prevState.activeSection,\r\n                activeSectionPath: path\r\n            }\r\n        })\r\n    }\r\n    handleDuplicatingSettingsChange(id: string, dupe: IDupeSettings) {\r\n        this.setState((prevState: SurveyFormState) => {\r\n            let cloned = _.clone(prevState.root);\r\n            cloned.sections[id].setDuplicatingSettings(dupe);\r\n            return {\r\n                root: cloned\r\n            }\r\n        })\r\n    }\r\n    handleSectionNameChange(id: string, v: string) {\r\n        this.setState((prevState: SurveyFormState) => {\r\n            let cloned = _.clone(prevState.root);\r\n            let item = cloned.sections[id];\r\n            item.name = v;\r\n            return {\r\n                root: cloned\r\n            }\r\n        })\r\n    }\r\n    handleMoveUp(id: string, path: number[]) {\r\n        this.setState((prevState: SurveyFormState) => {\r\n            let cloned = _.clone(prevState.root);\r\n            let newPath = _.clone(path);\r\n            if (newPath[newPath.length - 1] > 0) {\r\n                newPath[newPath.length - 1] = newPath[newPath.length - 1] - 1;\r\n            }\r\n            cloned.moveItem(path, newPath);\r\n            return {\r\n                root: cloned\r\n            }\r\n        })\r\n    }\r\n    handleSectionConditionChange(sectionId: string, literals: ILiteral[]) {\r\n        this.setState((prevState: SurveyFormState) => {\r\n            let cloned = _.clone(prevState.root);\r\n            cloned.sections[sectionId].appearingCondition.setLiterals(literals);\r\n            return {\r\n                root: cloned\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSectionCustomIdChange(sectionId: string, v: string) {\r\n        this.setState((prevState: SurveyFormState) => {\r\n            let cloned = _.clone(prevState.root);\r\n            cloned.sections[sectionId].customId = v;\r\n\r\n            return {\r\n                root: cloned\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Row>\r\n                <Toaster ref={r => r ? this.toasterRef = r : null}></Toaster>\r\n                <ConstantDefinitions isOpen={false}></ConstantDefinitions>\r\n                <Toolbar handleItemClick={this.handleToolbarItemClick.bind(this)}>\r\n                    <EditableText value={this.state.root.name} onChange={this.handleRootNameChange.bind(this)} />\r\n\r\n                </Toolbar>\r\n                <div className=\"container\">\r\n\r\n                    <div style={{ background: \"transparent\" }} className=\"sidebar\">\r\n                        <div className=\"sidebar-wrapper\">\r\n                            <FormTree\r\n                                expandedNodes={this.state.expandedNodes}\r\n                                selectedNodes={this.state.selectedNodes}\r\n                                handleNodeExpand={this.handleFormTreeNodeExpand.bind(this)}\r\n                                handleNodeCollapse={this.handleFormTreeNodeCollapse.bind(this)}\r\n                                handleNodeClick={this.handleFormTreeNodeClick.bind(this)}\r\n                                root_={this.state.root}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <SectionC\r\n                            handleSectionCustomIdChange={this.handleSectionCustomIdChange.bind(this)}\r\n                            handleSectionConditionChange={this.handleSectionConditionChange.bind(this)}\r\n                            handleMoveUp={this.handleMoveUp.bind(this)}\r\n                            constants={this.state.constants}\r\n                            handleSectionNameChange={this.handleSectionNameChange.bind(this)}\r\n                            definedQuestions={(this.state.root.questions)}\r\n                            handleSectionDuplicatingSettingsChange={this.handleDuplicatingSettingsChange.bind(this)}\r\n                            handleSectionClick={this.handleSectionChange.bind(this)}\r\n                            handleDeleteChildSectionOrQuestion={this.handleDeleteQuestionOrSection.bind(this)}\r\n                            parentPath={this.state.activeSectionPath}\r\n                            handleQuestionChange={this.handleQuestionUpdate.bind(this)}\r\n                            section={this.state.activeSection} />\r\n                    </div>\r\n                    <Row style={{\r\n                        position: \"fixed\",\r\n                        height: \"60px\",\r\n                        bottom: 0,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\"\r\n                    }} className=\"fixed-footer\">\r\n\r\n\r\n\r\n                    </Row>\r\n                </div>\r\n            </Row>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","import { request } from \"dpform\";\r\nimport React from \"react\";\r\nimport { Button, Container, FormGroup, Row } from \"reactstrap\";\r\ninterface LoginProps {\r\n    onLoggedIn: (token: string) => void\r\n}\r\ninterface LoginState {\r\n\r\n}\r\nexport class Login extends React.Component<LoginProps, LoginState>{\r\n    usernameRef?: HTMLInputElement | null;\r\n    passwordRef?: HTMLInputElement | null;\r\n    constructor(props: LoginProps) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    handleLogin() {\r\n        const username = this.usernameRef && this.usernameRef.value;\r\n        const password = this.passwordRef && this.passwordRef.value;\r\n        let requestBody = {\r\n            query: `\r\n            query Login($email: String!, $password: String!){\r\n                login(email: $email, password: $password){\r\n                  token\r\n                }\r\n              }`,\r\n            variables: {\r\n                email: username,\r\n                password: password\r\n            }\r\n        }\r\n        return request(\"http://localhost:5000/graphql\", \"login\", requestBody, \"Could not login\", \"\").then(res => {\r\n            console.log(res);\r\n            if (this.props.onLoggedIn) this.props.onLoggedIn(res.token);\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <Container style={{alignContent: \"center\", margin: \"0 auto\"}}>\r\n                <Row>\r\n                    <FormGroup>\r\n                        <label> username </label>\r\n                        <input ref={r => this.usernameRef = r} type=\"text\" ></input>\r\n\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row>\r\n\r\n                    <FormGroup>\r\n                        <label> password </label>\r\n                        <input ref={r => this.passwordRef = r} type=\"password\"></input>\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row>\r\n\r\n                    <Button onClick={this.handleLogin.bind(this)}>Submit</Button>\r\n                </Row>\r\n            </Container >\r\n        )\r\n    }\r\n}","import { RootSection } from 'dpform';\r\nimport React from 'react';\r\nimport './App.css';\r\nimport { SurveyForm } from './components/SurveyForm';\r\nimport { Login } from './ui/login';\r\nexport default class App extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoggedIn: false,\r\n      token: null,\r\n    }\r\n\r\n  }\r\n\r\n  handleChange(form: RootSection) {\r\n    this.setState({\r\n      form: form\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={\"wrapper\"}>\r\n        {!this.state.isLoggedIn && <Login onLoggedIn={token => this.setState({ token: token, isLoggedIn: true })} />}\r\n        {this.state.isLoggedIn && <div className=\"main-panel\">\r\n          <div className=\"content\">\r\n            <SurveyForm token={this.state.token} root={new RootSection()} onChange={this.handleChange.bind(this)} />\r\n          </div>\r\n        </div>}\r\n      </div>\r\n    )\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport {whyDidYouUpdate} from \"why-did-you-update\";\n\nconst hist = createBrowserHistory();\n\nwhyDidYouUpdate(React, { groupByComment: true, collapseComponentGroups: false });\n\nReactDOM.render(<Router history={hist}>\n  <Switch>\n    <Route path=\"/admin\" render={props => <App {...props} />} />\n    <Redirect from=\"/\" to=\"/admin/dashboard\" />\n  </Switch>\n</Router>, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./AnswerOptions\"));\n\n__export(require(\"./answer\"));\n\n__export(require(\"./answerTypes\"));\n\n__export(require(\"./condition\"));\n\n__export(require(\"./constants\"));\n\n__export(require(\"./duplicateSettings\"));\n\n__export(require(\"./question\"));\n\n__export(require(\"./questionSection\"));\n\n__export(require(\"./rootSection\"));\n\n__export(require(\"./util\"));\n\n__export(require(\"./valueType\"));","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar lodash_1 = __importDefault(require(\"lodash\"));\n\nvar QACondition =\n/** @class */\nfunction () {\n  function QACondition() {\n    this.literals = Array();\n  }\n\n  QACondition.fromJSON = function (data) {\n    if (!data) {\n      return new QACondition();\n    }\n\n    var c = new QACondition();\n    var literals = data.literals;\n    c.setLiterals(literals);\n    return c;\n  };\n\n  QACondition.toJSON = function (data) {\n    if (!data) {\n      return undefined;\n    }\n\n    return {\n      literals: JSON.parse(JSON.stringify(data.literals))\n    };\n  };\n\n  QACondition.checkIfValid = function (condition) {\n    if (!condition.literals) {\n      return false;\n    }\n\n    var isValid = true;\n    condition.literals.forEach(function (literal) {\n      var validity = Object.values(literal).every(function (x) {\n        return !lodash_1.default.isNil(x);\n      });\n\n      if (!validity) {\n        isValid = false;\n      }\n    });\n    console.log(isValid);\n    return isValid;\n  };\n\n  QACondition.Clone = function (condition) {\n    var newCondition = new QACondition();\n    return newCondition;\n  };\n\n  QACondition.prototype.setLiterals = function (newLiterals) {\n    this.literals = newLiterals;\n    return this;\n  };\n\n  QACondition.prototype.getClause = function () {\n    var _this = this;\n\n    var clause = '';\n    this.literals.forEach(function (literal, key) {\n      clause += \"l\" + key + (key === _this.literals.length - 1 ? literal.followingOperator : '');\n    });\n    return clause;\n  };\n\n  Object.defineProperty(QACondition.prototype, \"Literals\", {\n    get: function get() {\n      return this.literals;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  QACondition.prototype.addLiteral = function (literal) {\n    this.literals.push(literal);\n    console.log(this.literals);\n  };\n\n  QACondition.prototype.deleteLiteral = function (literalIndex) {\n    this.literals.splice(literalIndex, 1);\n    return this;\n  };\n\n  return QACondition;\n}();\n\nexports.QACondition = QACondition;\nvar QAFollowingOperator;\n\n(function (QAFollowingOperator) {\n  QAFollowingOperator[\"OR\"] = \"||\";\n  QAFollowingOperator[\"AND\"] = \"&\";\n})(QAFollowingOperator = exports.QAFollowingOperator || (exports.QAFollowingOperator = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction request(API_URL, queryName, requestBody, onErrorMessage, token) {\n  var headers = {\n    'Content-Type': 'application/json'\n  };\n\n  if (token) {\n    headers.Authorization = token;\n  }\n\n  return fetch(API_URL, {\n    method: 'POST',\n    body: JSON.stringify(requestBody),\n    headers: headers\n  }).then(function (res) {\n    if (res.status !== 200) {\n      throw new Error(onErrorMessage || 'Failed');\n    }\n\n    return res.json();\n  }).then(function (resData) {\n    if (resData.errors) {\n      throw resData.errors[0]; // throw the first error only\n    } else if (resData.data && resData.data[queryName]) {\n      return resData.data[queryName];\n    }\n  }).catch(function (err) {\n    throw err;\n  });\n}\n\nexports.request = request;\n\nfunction getReadablePath(nu) {\n  return nu.slice(1).map(function (item) {\n    return item + 1;\n  }).join('.');\n}\n\nexports.getReadablePath = getReadablePath;\n\nfunction getRandomId(startingText) {\n  if (!startingText) {\n    startingText = '';\n  }\n\n  var S4 = function S4() {\n    return ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);\n  };\n\n  return startingText + (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());\n}\n\nexports.getRandomId = getRandomId;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction ofTypeToJSON(t) {\n  if (!t) {\n    return undefined;\n  }\n\n  return {\n    name: t.name,\n    ofType: ofTypeFromJSON(t.ofType)\n  };\n}\n\nexports.ofTypeToJSON = ofTypeToJSON;\n\nfunction answerTypeToJSON(t) {\n  return {\n    name: t.name,\n    ofType: ofTypeToJSON(t.ofType)\n  };\n}\n\nexports.answerTypeToJSON = answerTypeToJSON;\n\nfunction ofTypeFromJSON(a) {\n  if (!a) {\n    return undefined;\n  }\n\n  var r = {\n    name: a.name,\n    ofType: ofTypeFromJSON(a.ofType)\n  };\n  return r;\n}\n\nexports.ofTypeFromJSON = ofTypeFromJSON;\n\nfunction answerTypeFromJSON(a) {\n  var r = {\n    name: a.name,\n    ofType: ofTypeFromJSON(a.ofType)\n  };\n  return r;\n}\n\nexports.answerTypeFromJSON = answerTypeFromJSON;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar condition_1 = require(\"./condition\");\n\nfunction dupeSettingsToJSON(a) {\n  return {\n    isEnabled: a.isEnabled,\n    condition: condition_1.QACondition.toJSON(a.condition),\n    duplicateTimes: {\n      value: a.duplicateTimes.value,\n      type: a.duplicateTimes.type\n    }\n  };\n}\n\nexports.dupeSettingsToJSON = dupeSettingsToJSON;\n\nfunction dupeSettingsFromJSON(a) {\n  var r = {\n    isEnabled: a.isEnabled,\n    duplicateTimes: {\n      value: a.duplicateTimes.value,\n      type: a.duplicateTimes.type\n    },\n    condition: condition_1.QACondition.fromJSON(a.condition)\n  };\n  return r;\n}\n\nexports.dupeSettingsFromJSON = dupeSettingsFromJSON;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar answer_1 = require(\"./answer\");\n\nvar AnswerOptions_1 = require(\"./AnswerOptions\");\n\nvar condition_1 = require(\"./condition\");\n\nvar util_1 = require(\"./util\");\n\nvar valueType_1 = require(\"./valueType\");\n\nvar QAQuestion =\n/** @class */\nfunction () {\n  function QAQuestion() {\n    this.content = [];\n    this.customId = '';\n    this.autoAnswer = {\n      isEnabled: false,\n      answeringConditions: []\n    };\n    this.options = new AnswerOptions_1.AnswerOptions();\n    this.id = util_1.getRandomId('q-');\n    this.questionContent = {\n      content: '',\n      type: answer_1.QAType.String\n    };\n  }\n\n  QAQuestion.toJSON = function (a) {\n    var r = {\n      id: a.id,\n      isRequired: a.isRequired,\n      appearingCondition: condition_1.QACondition.toJSON(a.appearingCondition),\n      questionContent: {\n        content: a.questionContent.content,\n        type: a.questionContent.type\n      },\n      autoAnswer: autoAnswerToJSON(a.autoAnswer),\n      options: AnswerOptions_1.AnswerOptions.toJSON(a.options),\n      answerType: a.answerType ? valueType_1.answerTypeToJSON(a.answerType) : undefined,\n      customId: a.customId\n    };\n    return r;\n  };\n\n  QAQuestion.fromJSON = function (a) {\n    var q = new QAQuestion();\n    q.id = a.id;\n    q.isRequired = a.isRequired;\n    q.appearingCondition = condition_1.QACondition.fromJSON(a.appearingCondition);\n    q.questionContent = a.questionContent;\n\n    if (a.options) {\n      q.options = AnswerOptions_1.AnswerOptions.fromJSON(a.options);\n    }\n\n    if (a.answerType) {\n      q.answerType = valueType_1.answerTypeFromJSON(a.answerType);\n    }\n\n    if (a.autoAnswer) {\n      q.autoAnswer = autoAnswerFromJSON(a.autoAnswer);\n    }\n\n    a.customId = q.customId || \"\";\n    return q;\n  };\n\n  QAQuestion.prototype.updateFromQuestion = function (q) {\n    this.isRequired = q.isRequired;\n    this.appearingCondition = q.appearingCondition;\n    this.questionContent = q.questionContent;\n    this.autoAnswer = q.autoAnswer;\n    this.options = q.options;\n    this.answerType = q.answerType;\n    return this;\n  };\n\n  QAQuestion.prototype.setIsRequired = function (bool) {\n    this.isRequired = bool;\n    return this;\n  };\n\n  QAQuestion.prototype.setAppearingCondition = function (cond) {\n    this.appearingCondition = cond;\n    return this;\n  };\n\n  QAQuestion.prototype.setAutoAnswer = function (a) {\n    this.autoAnswer = a;\n    return this;\n  };\n\n  QAQuestion.prototype.setQuestionContent = function (content) {\n    this.questionContent = content;\n    return this;\n  };\n\n  QAQuestion.prototype.setCreationDate = function (creationDate) {\n    if (!creationDate) {\n      this.creationDate = new Date().getTime();\n    } else {\n      this.creationDate = creationDate;\n    }\n\n    return this;\n  };\n\n  QAQuestion.prototype.setAutoAnswerEnabled = function (bool) {\n    if (!bool) {\n      this.autoAnswer.isEnabled = true;\n    } else {\n      this.autoAnswer.isEnabled = bool;\n    }\n\n    return this;\n  };\n\n  QAQuestion.prototype.addAutoAnswerCondition = function (aaCond) {\n    this.autoAnswer.answeringConditions.push(aaCond);\n    return this;\n  };\n\n  QAQuestion.prototype.setAnswerType = function (type) {\n    this.answerType = type;\n    return this;\n  };\n\n  QAQuestion.prototype.setOptions = function (opt) {\n    this.options = opt;\n    return this;\n  };\n\n  return QAQuestion;\n}();\n\nexports.QAQuestion = QAQuestion;\n\nfunction answerConditionToJSON(a) {\n  return {\n    condition: condition_1.QACondition.toJSON(a.condition),\n    ifTrue: a.ifTrue,\n    ifFalse: a.ifFalse\n  };\n}\n\nexports.answerConditionToJSON = answerConditionToJSON;\n\nfunction answerConditionFromJSON(a) {\n  var r = {\n    condition: condition_1.QACondition.fromJSON(a.condition),\n    ifFalse: a.ifFalse,\n    ifTrue: a.ifTrue\n  };\n  return r;\n}\n\nexports.answerConditionFromJSON = answerConditionFromJSON;\n\nfunction autoAnswerToJSON(a) {\n  if (!a) {\n    return undefined;\n  }\n\n  return {\n    isEnabled: a.isEnabled,\n    answeringConditions: a.answeringConditions.map(function (item) {\n      return answerConditionToJSON(item);\n    })\n  };\n}\n\nexports.autoAnswerToJSON = autoAnswerToJSON;\n\nfunction autoAnswerFromJSON(a) {\n  var r = {\n    isEnabled: a.isEnabled,\n    answeringConditions: a.answeringConditions.map(function (item) {\n      return answerConditionFromJSON(item);\n    })\n  };\n  return r;\n}\n\nexports.autoAnswerFromJSON = autoAnswerFromJSON;"],"sourceRoot":""}